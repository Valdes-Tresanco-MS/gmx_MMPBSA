{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"advanced/","text":"Advanced Options \u00b6 The default values for the various parameters as well as the inclusion of some variables over others in the general MMPBSA.py input file were chosen to cover the majority of all MM/PB(GB)SA calculations that would be attempted while maintaining maximum simplicity. However, there are situations in which MMPBSA.py may appear to be restrictive and ill-equipped to address. Attempts were made to maintain the simplicity described above while easily providing users with the ability to modify most aspects of the calculation easily and without editing the source code. -make-mdins This flag will create all of the mdin and input files used by sander and nmode so that additional control can be granted to the user beyond the variables detailed in the input file section above. The files created are _GMXMMPBSA_gb.mdin which controls GB calculation; _GMXMMPBSA_pb.mdin which controls the PB calculation; _GMXMMPBSA_sander_nm_min.mdin which controls the sander minimization of snapshots to be prepared for nmode calculations; and _GMXMMPBSA_nmode.in which controls the nmode calculation. If no input file is specified, all files above are created with default values, and _GMXMMPBSA_pb.mdin is created for AmberTools\u2019s pbsa. If you wish to create a file for sander.APBS , you must include an input file with sander_apbs=1 specified to generate the desired input file. Note that if an input file is specified, only those mdin files pertinent to the calculation described therein will be created! -use-mdins This flag will prevent MMPBSA.py from creating the input files that control the various calculations (_GMXMMPBSA_gb.mdin, _GMXMMPBSA_pb.mdin, _GMXMMPBSA_sander_nm_min.mdin, and _GMXMMPBSA_nmode.in). It will instead attempt to use existing input files (though they must have those names above!) in their place. In this way, the user has full control over the calculations performed, however care must be taken. The mdin files created by MMPBSA.py have been tested and are (generally) known to be consistent. Modifying certain variables (such as imin=5 ) may prevent the script from working, so this should only be done with care. It is recommended that users start with the existing mdin files (generated by the -make-mdins flag above), and add and/or modify parameters from there. Note -make-mdins and -use-mdins are intended to give added flexibility to user input. If the MM/PBSA input file does not expose a variable you require, you may use the -make-mdins flag to generate the MDIN files and then quit. Then, edit those MDIN files, changing the variables you need to, then running gmx_MMPBSA with -use-mdins to use those modified files. QM/MMGBSA There are a lot of options for QM/MM calculations in sander, but not all of those options were made available via options in the MMPBSA.py input file. In order to take advantage of these other options, you\u2019ll have to make use of the -make-mdins and -use-mdins flags as detailed above and change the resulting _GMXMMPBSA_gb_qmmm_com/rec/lig.mdin files to fit your desired calculation. Additionally, MMPBSA.py suffers all shortcomings of sander, one of those being that PB and QM/MM are incompatible. Therefore, only QM/MMGBSA is a valid option right now.","title":"Advanced Options"},{"location":"advanced/#advanced-options","text":"The default values for the various parameters as well as the inclusion of some variables over others in the general MMPBSA.py input file were chosen to cover the majority of all MM/PB(GB)SA calculations that would be attempted while maintaining maximum simplicity. However, there are situations in which MMPBSA.py may appear to be restrictive and ill-equipped to address. Attempts were made to maintain the simplicity described above while easily providing users with the ability to modify most aspects of the calculation easily and without editing the source code. -make-mdins This flag will create all of the mdin and input files used by sander and nmode so that additional control can be granted to the user beyond the variables detailed in the input file section above. The files created are _GMXMMPBSA_gb.mdin which controls GB calculation; _GMXMMPBSA_pb.mdin which controls the PB calculation; _GMXMMPBSA_sander_nm_min.mdin which controls the sander minimization of snapshots to be prepared for nmode calculations; and _GMXMMPBSA_nmode.in which controls the nmode calculation. If no input file is specified, all files above are created with default values, and _GMXMMPBSA_pb.mdin is created for AmberTools\u2019s pbsa. If you wish to create a file for sander.APBS , you must include an input file with sander_apbs=1 specified to generate the desired input file. Note that if an input file is specified, only those mdin files pertinent to the calculation described therein will be created! -use-mdins This flag will prevent MMPBSA.py from creating the input files that control the various calculations (_GMXMMPBSA_gb.mdin, _GMXMMPBSA_pb.mdin, _GMXMMPBSA_sander_nm_min.mdin, and _GMXMMPBSA_nmode.in). It will instead attempt to use existing input files (though they must have those names above!) in their place. In this way, the user has full control over the calculations performed, however care must be taken. The mdin files created by MMPBSA.py have been tested and are (generally) known to be consistent. Modifying certain variables (such as imin=5 ) may prevent the script from working, so this should only be done with care. It is recommended that users start with the existing mdin files (generated by the -make-mdins flag above), and add and/or modify parameters from there. Note -make-mdins and -use-mdins are intended to give added flexibility to user input. If the MM/PBSA input file does not expose a variable you require, you may use the -make-mdins flag to generate the MDIN files and then quit. Then, edit those MDIN files, changing the variables you need to, then running gmx_MMPBSA with -use-mdins to use those modified files. QM/MMGBSA There are a lot of options for QM/MM calculations in sander, but not all of those options were made available via options in the MMPBSA.py input file. In order to take advantage of these other options, you\u2019ll have to make use of the -make-mdins and -use-mdins flags as detailed above and change the resulting _GMXMMPBSA_gb_qmmm_com/rec/lig.mdin files to fit your desired calculation. Additionally, MMPBSA.py suffers all shortcomings of sander, one of those being that PB and QM/MM are incompatible. Therefore, only QM/MMGBSA is a valid option right now.","title":"Advanced Options"},{"location":"analyzer/","text":"gmx_MMPBSA_ana v1.5.x: The analyzer tool \u00b6 Overview \u00b6 gmx_MMPBSA_ana is a simple but powerful analysis tool. It is mainly focused on providing a fast, easy and efficient access to different graphics and analyze gmx_MMPBSA results ( Figure 1 ). In this version, gmx_MMPBSA_ana includes a number of options to customize graphs and save high-quality figures. The tool has been optimized to work with many charts ( check this section to learn about the potential of gmx_MMPBSA_ana ). It conserves the essence of its predecesor gmx_MMPBSA_ana v1.4.3 , although the API that uses in the backend is quite different, making it incompatible with files from previous versions. Fast like a rocket \u00b6 After version 1.5.2 gmx_MMPBSA_ana presented serious performance problems. We set ourselves the task of improving it from the ground up and these are the results: This version = v1.5.5 Number of systems/CPUs Type Frames v1.5.2 v1.5.2+20 This version Improvement 1 Energy 200000 fail 960s 17s 56x 4 Energy 200000 fail 4515s 17s 265x 1 Energy+Decomp(per-wise) 11 fail 192s 9s 21x 4 Energy+Decomp(per-wise) 11 fail 960s 14s 69x To this end, we have made the following changes: Reimplemented multiprocessing for reading systems. Implemented multithreading for data processing. Improved the reading of output files and optimized data storage. Eliminated the recalculation of IE and C2 entropies before opening the GUI. Now read from outputs files. Optimized data storage and access to subsets in panda's Dataframes. Now file processing and graphics generation does not freeze the GUI. Removed redundant steps and data. Removed line graphs for components in the per-wise decomposition schema. Data access, processing, and storage are done in the API. Added the option to temporarily store data on the hard disk instead of memory. Removed several pop-up windows. Added waiting indicators. Added multiple systems, subsystems, and component selection options. gmx_MMPBSA_ana components \u00b6 System selection window Data/Correlation panel Options panel Plot area Menus Figure 1. gmx_MMPBSA_ana graphical overview 1- System selection window \u00b6 This dialog allows you to select the system(s) of interest, as well as its components. In this panel you can check a number of options that will define how gmx_MMPBSA_ana process the result file. These options are: select whether you want to include mutants, normals, or both systems when analyzing alanine scanning results delete the terms whose values during the analysis were between -0.01 and 0.01 show/not-show decomposition analyses (which usually contains lots of data) transform the frames range to timescale calculate the correlation between various systems This allows you to take advantage of the flexibility of gmx_MMPBSA to carry out several analysis types in the same run and focus on the key elements for each of these analyses. 2- Data/Correlation panel \u00b6 This panel is made up of two independent sub-panels: Data and Correlation with slightly different characteristics, but with the same essence. Structure \u00b6 Data Correlation This panel is tree-like, where each system marked in gray is a top-level element that contains a set of 'children' elements organized according to the calculation type. Each upper-level element can be expanded/collapsed, which allows you to take advantage of the space and manipulate a considerable number of systems at the same time while keeping the elements of interest at sight. We are working on its implementation. Buttons and Actions \u00b6 Each item represents a set of data associated with a type of calculation, and a component ( i.e. complex, receptor, ligand, delta, etc...). These, in turn, have buttons and actions depending on the data they contain. Each item can have a total of 7 buttons that represent: Button Visual element Description Result files Show/hide in a new sub-window the gmx_MMPBSA output files: FINAL_RESULTS_MMPBSA.dat and FINAL_DECOMP_MMPBSA.dat Line plot Show/hide in a new sub-window a Line plot Bar plot Show/hide in a new sub-window a Bar plot Heatmap Show/hide in a new sub-window a Heatmap plot PyMOL visualization Show/hide the complex per-residue energy representation in a new PyMOL instance Summary table Show/hide the summary table of the parent element with multiple energetic components as 'childrens' Multiple activation button Show/hide all items (Line, bar, heatmap plots and PyMOL) at the same time In turn, some buttons have a drop-down menu that allows you to display the content of that specific graph in table form. In particular, the multiple activation button allows you to show/hide all the visual elements associated with a certain item. Example: Figure 2. Button representation example 3- Options panel \u00b6 In this panel you can find two tabs: Charts Options Frames Contains five different menus: General controls settings such as theme, figure-save-format, etc. Line Plot controls line plots settings such as line-width, line-color, rolling-average line appearance, etc. Bar Plot controls bar plots settings such as bar-color, bar-label appearance, etc. Heatmap Plot controls heatmap plots settings such as receptor- and ligand-colors, color-palette, etc. Visualization controls PyMOL visualization settings such as color-palette, background-color, representation, etc. Contains two windows: Energy changes start, end and interval between frames. IE changes segment considered for calculating the Interaction Entropy. 4- Plot area \u00b6 In this area, the graphs and tables included in each system will be displayed in the form of sub-windows (multi-document interface). This format allows you to move, resize and close each sub-window, offering a clean, organized, and fluid workspace to analyze a vast number of graphs. Types of charts \u00b6 Line plot Bar plot Heatmap plot PyMOL visualization Represents the evolution of a component during the simulation time. In some cases, it is the value of the calculated parameter, e.g. : TOTAL DELTA , VDWAALS , etc.; and in others, it is the sum of the elements it contains, eg: TDC as the sum of all the per-residue energy contributions. Note The line plot can additionally contain the moving average (solid red line) or other elements such as other indicators (dash red and green lines). Warning Note that TDC , SDC , and BDC are calculated from the immediate items contained within themselves. This means that the results obtained for the TDC in a per-residue calculation will probably be different from the TDC of a per-wise calculation with the same residues. This is because the per-residue energy contribution is calculated taking into account the environment that surrounds each residue, so the sum of their contributions will be exactly the maximum contribution per selected residues. On the other hand, in the per-wise calculation, the TDC will be equal to the sum of each residue contribution, the difference being that the contribution of each residue is obtained from the contributions of the selected pairs and not with all the environment that surrounds it. Therefore, both calculations should be used for different purposes and care should be taken with the interpretation of the results. Figure 2 . Line plot examples. Up: \u0394H representation, Down: Interaction Entropy representation Represents the total contribution of a component for the simulation. In some cases, it is the average of the calculated parameter, e.g. : TOTAL DELTA , VDWAALS , RESIDUES in per-residue calculation, etc., and in others, it is the sum of the elements it contains, e.g. : NMODE and QH Entropy, \u0394G Binding, etc. The bars that represent averages also have a solid line that represents the standard deviation. Figure 3 . Bar plot examples. Up: Per-residue contribution, Down: \u0394G Binding Figure 4. Bar plot examples. Up: Energetic terms plotted by subcomponents, Down: All energetic terms in the same plot. Represents the evolution of several components at the same time during the simulation. It is used to represent the contribution of all residues in per-residue calculation or all pairs of atoms for each residue in the per-wise calculation. It could also represent the relationship between components. This is explicit for per-wise calculations and represents the contribution of each residue with its respective pairs. Tip The relational heatmap graph is the best representation in the per-wise analysis. Figure 5 . Heatmap plot examples. Up: Per-residue contribution per-frame, Down: Inter Residue-pair contribution Shows the complex per-residue energy representation in a new PyMOL instance. Figure 6 . PyMOL visualization 5- Menus \u00b6 This section contains three drop-down menus: File View About Close all -- closes all the graphs Show Data -- shows data subpanel Show Correlation -- shows correlation subpanel Show Options -- shows options panel Tile SubWindows -- organizes graphs as tile Cascade SubWindows -- organizes graphs as cascade Help -- shows gmx_MMPBSA_ana page Documentation -- shows gmx_MMPBSA page Report a bug -- opens issue and report a bug on GitHub Google group -- opens gmx_MMPBSA Google Group About gmx_MMPBSA_ana -- shows gmx_MMPBSA citation Representations \u00b6 Note The following videos provide a visual medium to facilitate the use of gmx_MMPBSA_ana . These videos were recorded with the previous version of gmx_MMPBSA_ana , v1.4.3. We are working with several content creators to provide more accurate video tutorials. If you find our tool useful and want to use it for a visual project, such as tutorials, examples, etc., we will gladly include it in the documentation as well as in the list of acknowledgments and collaborators. Functionalities \u00b6 Binding Free Energy calculation (GB + IE) \u00b6 Alanine scanning \u00b6 Per-residue decomposition \u00b6 gmx_MMPBSA_ana under pressure \u00b6 Warning Around 1.8 million graphs were loaded in gmx_MMPBSA_ana, and it is showed only for educational purposes. In this experiment, we replicated our examples folder 9 times (differs from the one available on GitHub) giving us a total of 99 systems. As you can see in the video, gmx_MMPBSA_ana manages to deal well with the incredible amount of ~1.6 million items. Every item contains between 1 and 3 graphics, for a total of ~1.8 million graphics loaded. This feat is accomplished in ~11 minutes. Most of this time is consumed processing the data associated with each graph. At the moment, gmx_MMPBSA_ana processes this data serially, since parallelizing this process would be a bit difficult. In any case, for the usual processes, this will take a maximum of 25-30 seconds, depending on your hardware. Each item has associated the data of each of its graphs, which is stored in memory. In this experiment, RAM consumption reached up to 14 GB. Danger Be aware that if you run out of available RAM, your OS could crash, freeze, or slow down. Does this mean that you will not be able to load 100 systems in gmx_MMPBSA_ana ? Not at all. Consumption depends on the type of calculation you have made, and the data you want to analyze. In this experiment, there were several systems that contain the decomp data. We also selected to show the complex, receptor, and ligand data, which usually can be skipped. Only a system calculated with per-wise selecting about 40 amino acids generates about 11 thousand items.","title":"gmx_MMPBSA_ana"},{"location":"analyzer/#gmx_mmpbsa_ana-v15x-the-analyzer-tool","text":"","title":"gmx_MMPBSA_ana v1.5.x: The analyzer tool"},{"location":"analyzer/#overview","text":"gmx_MMPBSA_ana is a simple but powerful analysis tool. It is mainly focused on providing a fast, easy and efficient access to different graphics and analyze gmx_MMPBSA results ( Figure 1 ). In this version, gmx_MMPBSA_ana includes a number of options to customize graphs and save high-quality figures. The tool has been optimized to work with many charts ( check this section to learn about the potential of gmx_MMPBSA_ana ). It conserves the essence of its predecesor gmx_MMPBSA_ana v1.4.3 , although the API that uses in the backend is quite different, making it incompatible with files from previous versions.","title":"Overview"},{"location":"analyzer/#fast-like-a-rocket","text":"After version 1.5.2 gmx_MMPBSA_ana presented serious performance problems. We set ourselves the task of improving it from the ground up and these are the results: This version = v1.5.5 Number of systems/CPUs Type Frames v1.5.2 v1.5.2+20 This version Improvement 1 Energy 200000 fail 960s 17s 56x 4 Energy 200000 fail 4515s 17s 265x 1 Energy+Decomp(per-wise) 11 fail 192s 9s 21x 4 Energy+Decomp(per-wise) 11 fail 960s 14s 69x To this end, we have made the following changes: Reimplemented multiprocessing for reading systems. Implemented multithreading for data processing. Improved the reading of output files and optimized data storage. Eliminated the recalculation of IE and C2 entropies before opening the GUI. Now read from outputs files. Optimized data storage and access to subsets in panda's Dataframes. Now file processing and graphics generation does not freeze the GUI. Removed redundant steps and data. Removed line graphs for components in the per-wise decomposition schema. Data access, processing, and storage are done in the API. Added the option to temporarily store data on the hard disk instead of memory. Removed several pop-up windows. Added waiting indicators. Added multiple systems, subsystems, and component selection options.","title":"Fast like a rocket"},{"location":"analyzer/#gmx_mmpbsa_ana-components","text":"System selection window Data/Correlation panel Options panel Plot area Menus Figure 1. gmx_MMPBSA_ana graphical overview","title":"gmx_MMPBSA_ana components"},{"location":"analyzer/#1-system-selection-window","text":"This dialog allows you to select the system(s) of interest, as well as its components. In this panel you can check a number of options that will define how gmx_MMPBSA_ana process the result file. These options are: select whether you want to include mutants, normals, or both systems when analyzing alanine scanning results delete the terms whose values during the analysis were between -0.01 and 0.01 show/not-show decomposition analyses (which usually contains lots of data) transform the frames range to timescale calculate the correlation between various systems This allows you to take advantage of the flexibility of gmx_MMPBSA to carry out several analysis types in the same run and focus on the key elements for each of these analyses.","title":"1- System selection window"},{"location":"analyzer/#2-datacorrelation-panel","text":"This panel is made up of two independent sub-panels: Data and Correlation with slightly different characteristics, but with the same essence.","title":"2- Data/Correlation panel"},{"location":"analyzer/#structure","text":"Data Correlation This panel is tree-like, where each system marked in gray is a top-level element that contains a set of 'children' elements organized according to the calculation type. Each upper-level element can be expanded/collapsed, which allows you to take advantage of the space and manipulate a considerable number of systems at the same time while keeping the elements of interest at sight. We are working on its implementation.","title":"Structure"},{"location":"analyzer/#buttons-and-actions","text":"Each item represents a set of data associated with a type of calculation, and a component ( i.e. complex, receptor, ligand, delta, etc...). These, in turn, have buttons and actions depending on the data they contain. Each item can have a total of 7 buttons that represent: Button Visual element Description Result files Show/hide in a new sub-window the gmx_MMPBSA output files: FINAL_RESULTS_MMPBSA.dat and FINAL_DECOMP_MMPBSA.dat Line plot Show/hide in a new sub-window a Line plot Bar plot Show/hide in a new sub-window a Bar plot Heatmap Show/hide in a new sub-window a Heatmap plot PyMOL visualization Show/hide the complex per-residue energy representation in a new PyMOL instance Summary table Show/hide the summary table of the parent element with multiple energetic components as 'childrens' Multiple activation button Show/hide all items (Line, bar, heatmap plots and PyMOL) at the same time In turn, some buttons have a drop-down menu that allows you to display the content of that specific graph in table form. In particular, the multiple activation button allows you to show/hide all the visual elements associated with a certain item. Example: Figure 2. Button representation example","title":"Buttons and Actions"},{"location":"analyzer/#3-options-panel","text":"In this panel you can find two tabs: Charts Options Frames Contains five different menus: General controls settings such as theme, figure-save-format, etc. Line Plot controls line plots settings such as line-width, line-color, rolling-average line appearance, etc. Bar Plot controls bar plots settings such as bar-color, bar-label appearance, etc. Heatmap Plot controls heatmap plots settings such as receptor- and ligand-colors, color-palette, etc. Visualization controls PyMOL visualization settings such as color-palette, background-color, representation, etc. Contains two windows: Energy changes start, end and interval between frames. IE changes segment considered for calculating the Interaction Entropy.","title":"3- Options panel"},{"location":"analyzer/#4-plot-area","text":"In this area, the graphs and tables included in each system will be displayed in the form of sub-windows (multi-document interface). This format allows you to move, resize and close each sub-window, offering a clean, organized, and fluid workspace to analyze a vast number of graphs.","title":"4- Plot area"},{"location":"analyzer/#types-of-charts","text":"Line plot Bar plot Heatmap plot PyMOL visualization Represents the evolution of a component during the simulation time. In some cases, it is the value of the calculated parameter, e.g. : TOTAL DELTA , VDWAALS , etc.; and in others, it is the sum of the elements it contains, eg: TDC as the sum of all the per-residue energy contributions. Note The line plot can additionally contain the moving average (solid red line) or other elements such as other indicators (dash red and green lines). Warning Note that TDC , SDC , and BDC are calculated from the immediate items contained within themselves. This means that the results obtained for the TDC in a per-residue calculation will probably be different from the TDC of a per-wise calculation with the same residues. This is because the per-residue energy contribution is calculated taking into account the environment that surrounds each residue, so the sum of their contributions will be exactly the maximum contribution per selected residues. On the other hand, in the per-wise calculation, the TDC will be equal to the sum of each residue contribution, the difference being that the contribution of each residue is obtained from the contributions of the selected pairs and not with all the environment that surrounds it. Therefore, both calculations should be used for different purposes and care should be taken with the interpretation of the results. Figure 2 . Line plot examples. Up: \u0394H representation, Down: Interaction Entropy representation Represents the total contribution of a component for the simulation. In some cases, it is the average of the calculated parameter, e.g. : TOTAL DELTA , VDWAALS , RESIDUES in per-residue calculation, etc., and in others, it is the sum of the elements it contains, e.g. : NMODE and QH Entropy, \u0394G Binding, etc. The bars that represent averages also have a solid line that represents the standard deviation. Figure 3 . Bar plot examples. Up: Per-residue contribution, Down: \u0394G Binding Figure 4. Bar plot examples. Up: Energetic terms plotted by subcomponents, Down: All energetic terms in the same plot. Represents the evolution of several components at the same time during the simulation. It is used to represent the contribution of all residues in per-residue calculation or all pairs of atoms for each residue in the per-wise calculation. It could also represent the relationship between components. This is explicit for per-wise calculations and represents the contribution of each residue with its respective pairs. Tip The relational heatmap graph is the best representation in the per-wise analysis. Figure 5 . Heatmap plot examples. Up: Per-residue contribution per-frame, Down: Inter Residue-pair contribution Shows the complex per-residue energy representation in a new PyMOL instance. Figure 6 . PyMOL visualization","title":"Types of charts"},{"location":"analyzer/#5-menus","text":"This section contains three drop-down menus: File View About Close all -- closes all the graphs Show Data -- shows data subpanel Show Correlation -- shows correlation subpanel Show Options -- shows options panel Tile SubWindows -- organizes graphs as tile Cascade SubWindows -- organizes graphs as cascade Help -- shows gmx_MMPBSA_ana page Documentation -- shows gmx_MMPBSA page Report a bug -- opens issue and report a bug on GitHub Google group -- opens gmx_MMPBSA Google Group About gmx_MMPBSA_ana -- shows gmx_MMPBSA citation","title":"5- Menus"},{"location":"analyzer/#representations","text":"Note The following videos provide a visual medium to facilitate the use of gmx_MMPBSA_ana . These videos were recorded with the previous version of gmx_MMPBSA_ana , v1.4.3. We are working with several content creators to provide more accurate video tutorials. If you find our tool useful and want to use it for a visual project, such as tutorials, examples, etc., we will gladly include it in the documentation as well as in the list of acknowledgments and collaborators.","title":"Representations"},{"location":"analyzer/#functionalities","text":"","title":"Functionalities"},{"location":"analyzer/#binding-free-energy-calculation-gb-ie","text":"","title":"Binding Free Energy calculation (GB + IE)"},{"location":"analyzer/#alanine-scanning","text":"","title":"Alanine scanning"},{"location":"analyzer/#per-residue-decomposition","text":"","title":"Per-residue decomposition"},{"location":"analyzer/#gmx_mmpbsa_ana-under-pressure","text":"Warning Around 1.8 million graphs were loaded in gmx_MMPBSA_ana, and it is showed only for educational purposes. In this experiment, we replicated our examples folder 9 times (differs from the one available on GitHub) giving us a total of 99 systems. As you can see in the video, gmx_MMPBSA_ana manages to deal well with the incredible amount of ~1.6 million items. Every item contains between 1 and 3 graphics, for a total of ~1.8 million graphics loaded. This feat is accomplished in ~11 minutes. Most of this time is consumed processing the data associated with each graph. At the moment, gmx_MMPBSA_ana processes this data serially, since parallelizing this process would be a bit difficult. In any case, for the usual processes, this will take a maximum of 25-30 seconds, depending on your hardware. Each item has associated the data of each of its graphs, which is stored in memory. In this experiment, RAM consumption reached up to 14 GB. Danger Be aware that if you run out of available RAM, your OS could crash, freeze, or slow down. Does this mean that you will not be able to load 100 systems in gmx_MMPBSA_ana ? Not at all. Consumption depends on the type of calculation you have made, and the data you want to analyze. In this experiment, there were several systems that contain the decomp data. We also selected to show the complex, receptor, and ligand data, which usually can be skipped. Only a system calculated with per-wise selecting about 40 amino acids generates about 11 thousand items.","title":"gmx_MMPBSA_ana under pressure"},{"location":"api/","text":"Python API for gmx_MMPBSA v1.5.x coming soon... \u00b6 Python API for gmx_MMPBSA v1.4.3 \u00b6 The aim of the gmx_MMPBSA API is to provide you with direct access to the raw data produced during a gmx_MMPBSA calculation. By default, gmx_MMPBSA calculates an average, standard deviation, and standard error of the mean for all the generated data sets, but it does not support custom analyses. The API reads an _GMXMMPBSA_info file, from which it will determine what kind of calculation was performed, then automatically parse the output files and load the data into arrays. Warning The topology files you used in the gmx_MMPBSA calculation must also be available in the location specified in the _ GMXMMPBSA_info file. Using the API \u00b6 We have derived a new API to reorganize the data so that it is arranged more hierarchically. This makes easier to transform the data into graphs in the gmx_MMPBSA_ana . **The original and the current API only differ in the name of the callable function, the disposition of the data in Per-wise decomposition analysis and in the new 'delta' key. The function load_gmxmmpbsa_info takes the name of a gmx_MMPBSA info file (typically _GMXMMPBSA_info ) and returns a populated mmpbsa_data instance with all the parsed data. An example code snippet that creates a mmpbsa_data instance from the information in _ GMXMMPBSA_info is shown below. Important Unlike MMPBSA.py, load_gmxmmpbsa_info does not need to be located in the folder that contains the _GMXMMPBSA_info file. New in v1.4.0 from GMXMMPBSA import API as gmxMMPBSAapi data = gmxMMPBSAapi . load_gmxmmpbsa_info ( \"_GMXMMPBSA_info\" ) Properties of mmpbsa_data \u00b6 The mmpbsa_data class is a nested dictionary structure ( mmpbsa_data is actually derived from dict ). The various attributes of mmpbsa_data are described below followed by the defined operators. Attributes \u00b6 If the numpy package is installed and available, all data arrays will be numpy.ndarray instances. Otherwise, all data arrays will be array.array instances with the \u2019d\u2019 data type specifier (for a double precision float). The data is organized in an mmpbsa_data instance in the following manner: mmpbsa_data_instance [ 'calc_key' ][ 'system_component' ][ 'energy_term' ] In this example, calc_key is a dict key that is paired to another dict ( mmpbsa_data_instance is the first-level dict , in this case) (Table 2). The keys of these second-level dict instances ( system_component ) pair to another dict (Table 3). Table 2. List and description of calc_key dict keys that may be present in instances of the mmpbsa_data class. Dictionary Key (calc_key) Calculation Type gb Generalized Born Results pb Poisson-Boltzmann Results rism gf Gaussian Fluctuation 3D-RISM Results rism std Standard 3D-RISM Results ie Interaction Entropy Results nmode Normal Mode Analysis Results qh Quasi-harmonic Approximation Results Table 3. List and description of system_component keys that may be present in instances of the mmpbsa_data class. Dictionary Key (system_component) Description complex Data sets for the complex. (Stability & Binding) receptor Data sets for the receptor. (Binding only) ligand Data sets for the ligand. (Binding only) delta Data sets for the delta. (Binding only) The keys of these inner-most (third-level) dict instances are paired with the data arrays for that energy term (Table 4). The various dictionary keys are listed below for each level. If alanine scanning was performed, the mmpbsa_data_instance also has a \"mutant\" attribute that contains the same dictionary structure as mmpbsa_data does for the normal system. If not, the mutant attribute is None. The only difference is that the data is accessed as follows: mmpbsa_data_instance . mutant [ 'calc_key' ][ 'system_component' ][ 'energy_term' ] Warning All keys are case-sensitive, and if a space appears in the key, it must be present in your program. Also, if polar/non-polar decomposition is not performed for 3D-RISM , then the POLAR SOLV and APOLAR SOLV keys are replaced with the single key ERISM Table 4. List and description of energy_term keys that may be present in instances of the mmpbsa_data class. The allowed values of energy_term depend on the value of calc_key above in Table 2. The energy_term keys are listed for each calc_key enumerated above, accompanied by a description. The RISM keys are the same for both rism gf and rism std although the value of POLAR SOLV and APOLAR SOLV will differ depending on the method chosen. Those keys marked with * are specific to the CHARMM force field used through chamber. Those arrays are all 0 for normal Amber topology files. Description gb pb RISM Bond energy BOND BOND BOND Angle energy ANGLE ANGLE ANGLE Dihedral Energy DIHED DIHED DIHED Urey-Bradley* UB UB \u2014 Improper Dihedrals* IMP IMP \u2014 Correction Map* CMAP CMAP \u2014 1-4 van der Waals energy 1-4 VDW 1-4 VDW 1-4 VDW 1-4 Electrostatic energy 1-4 EEL 1-4 EEL 1-4 EEL van der Waals energy VDWAALS VDWAALS VDWAALS Electrostatic energy EEL EEL EEL Polar solvation energy EGB EPB POLAR SOLV Non-polar solvation energy ESURF ENPOLAR APOLAR SOLV Total solvation free energy G solv G solv G solv Total gas phase free energy G gas G gas G gas Total energy TOTAL TOTAL TOTAL Table 5. Same as Table 4 for the entropy (nmode and qh) data. Description nmode qh Translational entropy Translational Translational Rotational entropy Rotational Rotational Vibrational entropy Vibrational Vibrational Total entropy Total Total Table 6. Same as Table 5 for the Interaction Entropy data. Description IE Data per-frame data Mean of the selected interval value Star and End frames of the selected interval frames Defined operators \u00b6 In-place addition: It extends all the arrays that are common to both mmpbsa_data instances. This is useful if, for instance, you run two gmx_MMPBSA calculations, and you use -prefix for the second simulation. Assuming that is _GMXMMPBSA2_ for the second gmx_MMPBSA calculation, the following pseudo-code will generate a mmpbsa_data instance with all the data in concatenated arrays. The pseudo-code assumes GMXMMPBSA.API was imported as demonstrated below. data = gmxMMPBSAapi . load_gmxmmpbsa_info ( \"_GMXMMPBSA_info\" ) data += gmxMMPBSAapi . load_gmxmmpbsa_info ( \"_GMXMMPBSA2_info\" ) Example API Usage \u00b6 In many cases, the autocorrelation function of the energy can aid in the analysis of MM/PBSA data, since it provides a way of determining the statistical independence of your data points. For example, 1000 correlated snapshots provide less information, and therefore less statistical certainty, than 1000 uncorrelated snapshots. The standard error of the mean calculation performed by gmx_MMPBSA assumes a completely uncorrelated set of snapshots, which means that it is a lower bound of the true standard error of the mean, and a plot of the autocorrelation function may help determine the actual value. The example program below will calculate the autocorrelation function of the total energy (complex only for both the normal and alanine mutant systems) from a GB calculation and plot the resulting code using matplotlib. import os import sys # append AMBERHOME/bin to sys.path sys . path . append ( os . path . join ( os . getenv ( 'AMBERHOME' ), 'bin' )) # Now import the MMPBSA API from GMXMMPBSA import API as gmxMMPBSAapi import matplotlib.pyplot as plt import numpy as np data = gmxMMPBSAapi . load_gmxmmpbsa_info ( '_GMXMMPBSA_info' ) total = data [ 'gb' ][ 'complex' ][ 'TOTAL' ] . copy () data = gmxMMPBSAapi . load_gmxmmpbsa_info ( '_GMXMMPBSA_info' ) total_mut = data . mutant [ 'gb' ][ 'complex' ][ 'TOTAL' ] . copy () # Create a second copy of the data set. The np.correlate function does not # normalize the correlation function, so we modify total and total2 to get # that effect total -= total . mean () total /= total . std () total2 = total . copy () / len ( total ) acor = np . correlate ( total , total2 , 'full' ) total_mut -= total_mut . mean () total_mut /= total_mut . std () total2_mut = total_mut . copy () / len ( total_mut ) acor_mut = np . correlate ( total_mut , total2_mut , 'full' ) # Now generate the 'lag' axis xdata = np . arange ( 0 , len ( total )) # The acor data set is symmetric about the origin, so only accept the # positive lag times. Graph the result plt . plot ( xdata , acor [ len ( acor ) // 2 :], xdata , acor_mut [ len ( acor ) // 2 :]) plt . show () Decomposition Data \u00b6 When performing decomposition analysis, the various decomp data is stored in a separate tree of dicts referenced with the decomp key. The key sequence is similar to the sequence for the normal data described above, where decomp is followed by the solvent model ( GB or PB ), followed by the species ( complex , receptor , or ligand ) (additionally, we include delta key), followed by the decomposition components (total, backbone, or sidechain), followed by the residue number (and residue pair for pairwise decomposition), finally followed by the contribution ( internal , van der Waals , electrostatics , etc.) The available keys are shown in Figure 1 (and each key is described afterwards). Decomp Key Descriptions: gb All Generalized Born results pb All Poisson-Boltzmann results complex All results from the complex trajectory receptor All results from the receptor trajectory ligand All results from the ligand trajectory delta All results from delta total decomposition [ complex TDC - (receptor TDC + ligand TDC) ] TDC All results from the total decomposition SDC All results from the sidechain decomposition BDC All results from the backbone decomposition # All data from residue number # in per-residue and per-wise decomposition (same residue numbering scheme as in each respective topology file) ## All interaction energies between residues ## and their respective pair # in per-wise decomposition (same residue numbering scheme as in each respective topology file) int Internal energy contributions (see the idecomp variable description above) vdw van der Waals energy contributions eel Electrostatic energy contributions pol Polar solvation free energy contributions sas Non-polar solvation free energy contributions tot Total free energy contributions (sum of previous 5). Figure 1 . Tree of dict keys following the decomp key in a mmpbsa_data instance.","title":"Python API"},{"location":"api/#python-api-for-gmx_mmpbsa-v15x-coming-soon","text":"","title":"Python API for gmx_MMPBSA v1.5.x coming soon..."},{"location":"api/#python-api-for-gmx_mmpbsa-v143","text":"The aim of the gmx_MMPBSA API is to provide you with direct access to the raw data produced during a gmx_MMPBSA calculation. By default, gmx_MMPBSA calculates an average, standard deviation, and standard error of the mean for all the generated data sets, but it does not support custom analyses. The API reads an _GMXMMPBSA_info file, from which it will determine what kind of calculation was performed, then automatically parse the output files and load the data into arrays. Warning The topology files you used in the gmx_MMPBSA calculation must also be available in the location specified in the _ GMXMMPBSA_info file.","title":"Python API for gmx_MMPBSA v1.4.3"},{"location":"api/#using-the-api","text":"We have derived a new API to reorganize the data so that it is arranged more hierarchically. This makes easier to transform the data into graphs in the gmx_MMPBSA_ana . **The original and the current API only differ in the name of the callable function, the disposition of the data in Per-wise decomposition analysis and in the new 'delta' key. The function load_gmxmmpbsa_info takes the name of a gmx_MMPBSA info file (typically _GMXMMPBSA_info ) and returns a populated mmpbsa_data instance with all the parsed data. An example code snippet that creates a mmpbsa_data instance from the information in _ GMXMMPBSA_info is shown below. Important Unlike MMPBSA.py, load_gmxmmpbsa_info does not need to be located in the folder that contains the _GMXMMPBSA_info file. New in v1.4.0 from GMXMMPBSA import API as gmxMMPBSAapi data = gmxMMPBSAapi . load_gmxmmpbsa_info ( \"_GMXMMPBSA_info\" )","title":"Using the API"},{"location":"api/#properties-of-mmpbsa_data","text":"The mmpbsa_data class is a nested dictionary structure ( mmpbsa_data is actually derived from dict ). The various attributes of mmpbsa_data are described below followed by the defined operators.","title":"Properties of mmpbsa_data"},{"location":"api/#attributes","text":"If the numpy package is installed and available, all data arrays will be numpy.ndarray instances. Otherwise, all data arrays will be array.array instances with the \u2019d\u2019 data type specifier (for a double precision float). The data is organized in an mmpbsa_data instance in the following manner: mmpbsa_data_instance [ 'calc_key' ][ 'system_component' ][ 'energy_term' ] In this example, calc_key is a dict key that is paired to another dict ( mmpbsa_data_instance is the first-level dict , in this case) (Table 2). The keys of these second-level dict instances ( system_component ) pair to another dict (Table 3). Table 2. List and description of calc_key dict keys that may be present in instances of the mmpbsa_data class. Dictionary Key (calc_key) Calculation Type gb Generalized Born Results pb Poisson-Boltzmann Results rism gf Gaussian Fluctuation 3D-RISM Results rism std Standard 3D-RISM Results ie Interaction Entropy Results nmode Normal Mode Analysis Results qh Quasi-harmonic Approximation Results Table 3. List and description of system_component keys that may be present in instances of the mmpbsa_data class. Dictionary Key (system_component) Description complex Data sets for the complex. (Stability & Binding) receptor Data sets for the receptor. (Binding only) ligand Data sets for the ligand. (Binding only) delta Data sets for the delta. (Binding only) The keys of these inner-most (third-level) dict instances are paired with the data arrays for that energy term (Table 4). The various dictionary keys are listed below for each level. If alanine scanning was performed, the mmpbsa_data_instance also has a \"mutant\" attribute that contains the same dictionary structure as mmpbsa_data does for the normal system. If not, the mutant attribute is None. The only difference is that the data is accessed as follows: mmpbsa_data_instance . mutant [ 'calc_key' ][ 'system_component' ][ 'energy_term' ] Warning All keys are case-sensitive, and if a space appears in the key, it must be present in your program. Also, if polar/non-polar decomposition is not performed for 3D-RISM , then the POLAR SOLV and APOLAR SOLV keys are replaced with the single key ERISM Table 4. List and description of energy_term keys that may be present in instances of the mmpbsa_data class. The allowed values of energy_term depend on the value of calc_key above in Table 2. The energy_term keys are listed for each calc_key enumerated above, accompanied by a description. The RISM keys are the same for both rism gf and rism std although the value of POLAR SOLV and APOLAR SOLV will differ depending on the method chosen. Those keys marked with * are specific to the CHARMM force field used through chamber. Those arrays are all 0 for normal Amber topology files. Description gb pb RISM Bond energy BOND BOND BOND Angle energy ANGLE ANGLE ANGLE Dihedral Energy DIHED DIHED DIHED Urey-Bradley* UB UB \u2014 Improper Dihedrals* IMP IMP \u2014 Correction Map* CMAP CMAP \u2014 1-4 van der Waals energy 1-4 VDW 1-4 VDW 1-4 VDW 1-4 Electrostatic energy 1-4 EEL 1-4 EEL 1-4 EEL van der Waals energy VDWAALS VDWAALS VDWAALS Electrostatic energy EEL EEL EEL Polar solvation energy EGB EPB POLAR SOLV Non-polar solvation energy ESURF ENPOLAR APOLAR SOLV Total solvation free energy G solv G solv G solv Total gas phase free energy G gas G gas G gas Total energy TOTAL TOTAL TOTAL Table 5. Same as Table 4 for the entropy (nmode and qh) data. Description nmode qh Translational entropy Translational Translational Rotational entropy Rotational Rotational Vibrational entropy Vibrational Vibrational Total entropy Total Total Table 6. Same as Table 5 for the Interaction Entropy data. Description IE Data per-frame data Mean of the selected interval value Star and End frames of the selected interval frames","title":"Attributes"},{"location":"api/#defined-operators","text":"In-place addition: It extends all the arrays that are common to both mmpbsa_data instances. This is useful if, for instance, you run two gmx_MMPBSA calculations, and you use -prefix for the second simulation. Assuming that is _GMXMMPBSA2_ for the second gmx_MMPBSA calculation, the following pseudo-code will generate a mmpbsa_data instance with all the data in concatenated arrays. The pseudo-code assumes GMXMMPBSA.API was imported as demonstrated below. data = gmxMMPBSAapi . load_gmxmmpbsa_info ( \"_GMXMMPBSA_info\" ) data += gmxMMPBSAapi . load_gmxmmpbsa_info ( \"_GMXMMPBSA2_info\" )","title":"Defined operators"},{"location":"api/#example-api-usage","text":"In many cases, the autocorrelation function of the energy can aid in the analysis of MM/PBSA data, since it provides a way of determining the statistical independence of your data points. For example, 1000 correlated snapshots provide less information, and therefore less statistical certainty, than 1000 uncorrelated snapshots. The standard error of the mean calculation performed by gmx_MMPBSA assumes a completely uncorrelated set of snapshots, which means that it is a lower bound of the true standard error of the mean, and a plot of the autocorrelation function may help determine the actual value. The example program below will calculate the autocorrelation function of the total energy (complex only for both the normal and alanine mutant systems) from a GB calculation and plot the resulting code using matplotlib. import os import sys # append AMBERHOME/bin to sys.path sys . path . append ( os . path . join ( os . getenv ( 'AMBERHOME' ), 'bin' )) # Now import the MMPBSA API from GMXMMPBSA import API as gmxMMPBSAapi import matplotlib.pyplot as plt import numpy as np data = gmxMMPBSAapi . load_gmxmmpbsa_info ( '_GMXMMPBSA_info' ) total = data [ 'gb' ][ 'complex' ][ 'TOTAL' ] . copy () data = gmxMMPBSAapi . load_gmxmmpbsa_info ( '_GMXMMPBSA_info' ) total_mut = data . mutant [ 'gb' ][ 'complex' ][ 'TOTAL' ] . copy () # Create a second copy of the data set. The np.correlate function does not # normalize the correlation function, so we modify total and total2 to get # that effect total -= total . mean () total /= total . std () total2 = total . copy () / len ( total ) acor = np . correlate ( total , total2 , 'full' ) total_mut -= total_mut . mean () total_mut /= total_mut . std () total2_mut = total_mut . copy () / len ( total_mut ) acor_mut = np . correlate ( total_mut , total2_mut , 'full' ) # Now generate the 'lag' axis xdata = np . arange ( 0 , len ( total )) # The acor data set is symmetric about the origin, so only accept the # positive lag times. Graph the result plt . plot ( xdata , acor [ len ( acor ) // 2 :], xdata , acor_mut [ len ( acor ) // 2 :]) plt . show ()","title":"Example API Usage"},{"location":"api/#decomposition-data","text":"When performing decomposition analysis, the various decomp data is stored in a separate tree of dicts referenced with the decomp key. The key sequence is similar to the sequence for the normal data described above, where decomp is followed by the solvent model ( GB or PB ), followed by the species ( complex , receptor , or ligand ) (additionally, we include delta key), followed by the decomposition components (total, backbone, or sidechain), followed by the residue number (and residue pair for pairwise decomposition), finally followed by the contribution ( internal , van der Waals , electrostatics , etc.) The available keys are shown in Figure 1 (and each key is described afterwards). Decomp Key Descriptions: gb All Generalized Born results pb All Poisson-Boltzmann results complex All results from the complex trajectory receptor All results from the receptor trajectory ligand All results from the ligand trajectory delta All results from delta total decomposition [ complex TDC - (receptor TDC + ligand TDC) ] TDC All results from the total decomposition SDC All results from the sidechain decomposition BDC All results from the backbone decomposition # All data from residue number # in per-residue and per-wise decomposition (same residue numbering scheme as in each respective topology file) ## All interaction energies between residues ## and their respective pair # in per-wise decomposition (same residue numbering scheme as in each respective topology file) int Internal energy contributions (see the idecomp variable description above) vdw van der Waals energy contributions eel Electrostatic energy contributions pol Polar solvation free energy contributions sas Non-polar solvation free energy contributions tot Total free energy contributions (sum of previous 5). Figure 1 . Tree of dict keys following the decomp key in a mmpbsa_data instance.","title":"Decomposition Data"},{"location":"changelog/","text":"Changelog \u00b6 gmx_MMPBSA v1.6.2 (09/14/2023) \u00b6 Fixes \u00b6 Fixed minor issues gmx_MMPBSA v1.6.1 (04/04/2023) \u00b6 Fixes \u00b6 PB decomp ends in error ( https://github.com/Valdes-Tresanco-MS/gmx_MMPBSA/issues/352 ) Better parsing for errors gmx_MMPBSA v1.6.0 (02/19/2023) \u00b6 Additions \u00b6 GBNSR6 model implementation Enthalpy Per-residue and Per-wise decomposition Documentation and examples Added git dependency to env.yml file Groups can now be defined as either the number or the name ( #157 ) Added error tracking for groups that are not in the index file Fixes \u00b6 Incompatible compilers version Fixed bug when CAS and PB/RISM calculations are performed Fixed duplicated options and args checking Documentation improved Fixed numpy deprecated np.float ( #316 ) Fixed reproducible command line in debugging in log file ( #335 ) GROMACS 2023 compatibility ( #327 , #335 ) Fixed IE and C2 Entropy ( #325 ) PyMOL doesn't open within gmx_MMPBSA environment ( #331 ) Inaccessible _temp_top.top when the topology file is in different directory ( #299 ) Changes \u00b6 A copy old info file is created when rewrite-output (for backward compatibility) Setting inp = 1 by default ( #329 ) gmx_MMPBSA v1.5.7 (09/10/2022) \u00b6 Additions \u00b6 Progress bar implementation verbose options for API and info logging for IE and C2 entropy calculations Added logging info for MPI calculations Fixes \u00b6 QH entropy calculation Decomposition bug ( #269 ) Alanine scanning in Terminal residues Regression to output files subwindow in gmx_MMPBSA_ana Bug when using the compact results version Seaborn compatibility print_res in &decomp namelist does not accept \"all\" ( #292 ) error when output files are open and any plot property is changed error if at least one residue of both the receptor and the ligand are not included in the selection for decomposition Changes \u00b6 now use mpi4py when mpi_size > 1 otherwise use fake_MPI . Now \"MPI\" flag is not required gmx_MMPBSA v1.5.6 (07/06/2022) \u00b6 Fix \u00b6 gmx_MMPBSA \u00b6 Inconsistent decomposition output ( #246 , #248 ) IE and C2 entropies calculation fail when rewrite-output ( #253 ) Delta Delta Entropies' values are incorrect ( #257 ) Loading binary file fails when alanine scanning is performed ( #258 ) gmx_MMPBSA_ana \u00b6 Mutant-Normal data is not computed or displayed ( #254 ) Inconsistent energy values in PyMol visualization ( #255 ) Changes \u00b6 gmx_MMPBSA \u00b6 Re-implementation of compact binary output file ( #249 ) gmx_MMPBSA v1.5.5 (06/10/2022) \u00b6 Additions \u00b6 gmx_MMPBSA \u00b6 Improved the API ( #209 ) Added a new method to get the Enthalpy Added a new method to get the Entropy Added a new method to get the Binding Added a new method to get the Decomposition energy Added a new method to get the gmx_MMPBSA_ana data gmx_MMPBSA_ana \u00b6 Added multiprocessing and multithreading ( #209 ) Wait indicator Added Error line cap size Systems, subsystems and component selection options Added threshold to remove energetic terms or residues Correlation ( #137 ) Normal correlation using \u0394G Mutant correlation using \u0394\u0394G Energy values table Interactive systems selection and Experimental Ki editor New regression plot with bivariate and univariate graphs Chart options panel General options Regression options Scatter Distribution Documentation \u00b6 News section Animated command-line code block with terminal Added versioning Added installation using *.yml configuration file ( #221 ) Added a new tutorial for correlation analysis ( #194 ) Fix \u00b6 gmx_MMPBSA_ana \u00b6 Close gmx_MMPBSA_ana properly when the selection dialog is rejected Compatibility with previous versions ( < v1.5.2 ) Added several tooltips Improved general performance. See the benchmark ( #209 , #230 , #243 ) Improved the reading of output files and optimized data storage. ( #228 ) Eliminated the recalculation of IE and C2 entropies before opening the GUI. Now read from outputs files Optimized data storage and access to subsets in panda's Dataframes Now file processing and graphics generation does not freeze the GUI. Removed redundant steps and data Removed line graphs for components in the per-wise decomposition schema Data access, processing, and storage are done in the API. Added the option to temporarily store data on the hard disk instead of memory Removed several pop-up windows Decreased RAM consumption Removed H5 support Invalid periodicity in the prmtop ( #211 ) Buffer saturation ( #213 ) Changes \u00b6 gmx_MMPBSA \u00b6 Improved IE and C2 calculation gmx_MMPBSA_ana \u00b6 Change the IE representation Removed summary widget Now the bar plot data contain the Average, SD, and SEM instead of all frames Chart Options Error line color Error line representation (SD or SEM) Restructured the init (system selection) dialog Improved energy and decomposition options selection Improved the correlation options Added a new section for performance configuration Added RAM consumption estimator Improved the systems' tree representation and edition options gmx_MMPBSA_test \u00b6 The examples folder moved up to the root directory gmx_MMPBSA v1.5.2 (03/23/2022) \u00b6 Additions \u00b6 gmx_MMPBSA \u00b6 ALPB (Analytical Linearized Poisson-Boltzmann) approximation ( #170 ) PC+ correction in 3D-RISM ( #187 ) Warning when using -deo option without &decomp namelist in the input file ( #191 ) gmx_MMPBSA_ana \u00b6 Tooltips for different options ( #151 ) Fix \u00b6 gmx_MMPBSA_ana \u00b6 Chart options ( #185 ) Changes \u00b6 gmx_MMPBSA \u00b6 3D-RISM calculated with sander instead of rism3d.snglpnt ( #153 ) Documentation \u00b6 Update 3D-RISM doc ( #190 ) gmx_MMPBSA v1.5.1 (03/10/2022) \u00b6 Additions \u00b6 gmx_MMPBSA \u00b6 Add new variables for QM/MM calculations ( #171 ) Improvement of \"print_res\" function for &decomp and QM ( #150 ) Support for OPLS force field ( #160 ) New precalculated .xvv files for 3D-RISM gmx_MMPBSA_ana \u00b6 Support for PyQt6 Documentation \u00b6 gmx_MMPBSA_ana documentation (v1.5.0) ( #152 ) Tutorial for psf_dcd files Tutorial for OPLS ff files Fixes \u00b6 gmx_MMPBSA \u00b6 Add ERROR when ligand.mol2 defined and no gaff or gaff2 in forcefields variable ( #175 ) Fixed incorrect path search when the gmx_path is defined Fixed error when no ions are included in the groups defined gmx_MMPBSA_ana \u00b6 Remove empty terms issue ( #179 ) Fixed chart title for decomposition gmx_MMPBSA v1.5.0.3 (02/26/2022) \u00b6 Fixes \u00b6 gmx_MMPBSA \u00b6 Improved nmode and sd in the output ( #169 ) Improved autocompletion script Updated 3D-RISM, NMODE, Alascan, Decomp, and Linear/Non-Linear PB solver tutorials gmx_MMPBSA v1.5.0.1 (02/22/2022) \u00b6 Fixes \u00b6 gmx_MMPBSA \u00b6 Allow index group name for group selection ( #156 ) gmx_MMPBSA_ana \u00b6 gmx_MMPBSA_ana does not open at the end of the calculation ( #158 ) gmx_MMPBSA v1.5.0 (02/22/2022) \u00b6 Additions \u00b6 gmx_MMPBSA \u00b6 Support for all files generated with CHARMM-GUI for Amber force fields (ff14SB and ff19SB) enabled NonLinear PB solver in sander ( #63 ) enabled all pbsa options in sander ( #64 ) enabled all 3D-RISM variables ( #68 ) Improve IE output data ( #91 ) New C2 Entropy method added ( #73 ) Option to create an input file ( --create_input ) New format file (h5) to store all the data result ( Experimental ) New method to get the decomp data without the API classes Report energy differences for every term in alanine scanning Automatic calculation of charge for com , rec , and lig groups in QM/MMGBSA Improve residue selection in QM/MMGBSA New modified PB Radii sets for GAFF ( #140 ) and CHARMM ( #141 ) force fields conda package ( #55 ) Checking structure consistency method ( #44 ) gmx_MMPBSA_ana \u00b6 Chart properties selector. The following properties can be changed: Font size: Axes (Ticks, Labels) Title, Subtitle and legend Color bar Pallete, color or theme: Line plot Bar plot Heatmap plot PyMOL visualization Rotation, padding and number of ticks Figure size, dpi and format Chart type specific properties Highlight or split components Frame range and interval selection Chart data can be visualized in table format and copy directly to excel Summary table for complex, receptor, ligand, etc. Now the outputs files can be visualized as document in their own sub-window New button to launch all the graphics and functions associated to item Highlighted Bar and Heatmap plot User setting file per-system Frames to Time conversion Documentation \u00b6 Code block names and annotations Fixes \u00b6 gmx_MMPBSA \u00b6 Protonated residues ( #42 ) Inconsistent energy between tleap and ParmEd topology ( #147 ) Error with alphanumeric residue numbers ( #134 ) print_res selection scheme Error when startframe=0 ( #66 ) parmchk2 always uses GAFF as force field ( #45 ) IE is calculated for PB and GB independently ( #72 ) Alanine scanning with CHARMM ff ( #88 ) MT approach ( #78 ) get_num_terms function run forever if TDC term not found. ( #98 ) Check if the groups defined for receptor and ligand are the same ( #86 ) Add SD and SEM calculated with propagation formula ( #105 ) Structure consistency ( #80 , #79 ) gmx_MMPBSA launches an error when there is an OverflowError on IE calculation ( #57 ) Improve gmx_MMPBSA.log file ( #108 ) Inconsistency with multiple trajectories ( #120 ) Alanine Scanning ERROR on THR to ALA mutation ( #139 ) gmx_MMPBSA_ana \u00b6 Tick labels in line plots ( #65 ) Improved PyMOL 3D visualization ( #85 ) Improved the system options in the init dialog gmx_MMPBSA_test \u00b6 Error when -f option it not defined ( #46 ) Changes \u00b6 gmx_MMPBSA \u00b6 Recalculate the PB energy with --rewrite-output changing the value of inp ( #144 ) Removed deprecated variables Input file format. Although it kept the structure of the previous version, the current one is more GROMACS alike EnergyVector changed to ndarray subclass Regen expression for mutant_res Now the COM, REC and LIG trajectories must have the same length when using MT approach Improve verbose logging in gmx_MMPBSA.log file ( #108 ) Removed *.gro file support in -cs , -rs and -ls flags Added trjconv to avoid the PBC in the tpr file ( #43 ) gmx_MMPBSA_ana \u00b6 New set of chart buttons IE plot gmx_MMPBSA_test \u00b6 Improved parallel processing Change command-line Documentation \u00b6 Updated packages dependency Input and Output file pages gxm_MMPBSA v1.4.3 (05/26/2021) \u00b6 Additions \u00b6 Added two new tutorials Protein_ligand_LPH_atoms_CHARMMff and QM/MMGBSA calculations Now the program reports the p-value associated with the correlation coefficient when performing the correlation analysis Google Analytics is used as a third-party tracking service to improve documentation. Check our Private Policy for more details Fixes \u00b6 Minor fixes in the documentation Improved parsing of forcefields variable Fixed bug when gmx_MMPBSA_ana runs without arguments Fixed compatibility with older files ( < v1.4.0 ) Fixed error when debug_printlevel > 1 in tleap command Changes \u00b6 Now the command line used is added to the log file The gmx_MMPBSA data folder is exported directly rather than copied in the $AMBERHOME data folder. gxm_MMPBSA v1.4.2 (05/01/2021) \u00b6 Additions \u00b6 Added Covid-19 and other complex systems as examples in the documentation Added Q&A section to the documentation Implemented an adaptive intdiel (GB)/ indi (PB) for Alanine scanning (Check the input file section) Fixes \u00b6 Fixed bug when startframe = 0 ( #33 ) Fixed bug when blank lines exist in [molecule] section in topology file Fixed pipe command-line for Gromacs execution in macOS Fixed compatibility issues with v1.3.x Improved and fixed the documentation Improved output file information related to \u0394G binding Improved calculation with different entropy approximations simultaneously Changes \u00b6 Changed protein_forcefields and ligand_forcefield by forcefields variable in all examples Now QH and IE can be calculated at the same time entropy variable was separated in qh_entropy and interaction_entropy . The entropy variable is deprecated and will be removed in the next major version (v1.5.0). entropy_seg was replaced by ie_segment . The entropy_seg variable is deprecated and will be removed in the next major version (v1.5.0). gxm_MMPBSA v1.4.1 (04/08/2021) \u00b6 Additions New class Residue added to handle residues selection in Gromacs format with Amber index Verification of the presence of water molecules in receptor and ligand groups Gromacs timer added Fixes Gromacs topology conversion qm_residues notation Default path in gmx_MMPBSA_test The Entropy representation in gmx_MMPBSA_ana Bug when the structure has insertion code Improved \u0394G Binding plot representation Changes Now forcefields variable unifies protein_forcefield and ligand_forcefield . These variables protein_forcefield and ligand_forcefield are deprecated and will be removed in the next major version (v1.5.0). Improved documentation Examples Command-line MPI Examples Links and references Updated to material 7.1.0 Dark mode Material \"Back to Top\" button Grammatical corrections Installation section Figures caption The Ambiguous name for Entropy term in output files gxm_MMPBSA v1.4.0 (03/22/2021) \u00b6 This release focuses almost entirely on gmx_MMPBSA_ana with minor issues fixed in gmx_MMPBSA Additions New start window to select options Option to make correlation (Pearson and Spearman coefficients) Option to hide decomposition data Option to not compute charts with a non-significant contribution Option to not include terms with a non-significant contribution in bar charts Selection of the components to display in addition to Delta (i.e. complex, receptor, and ligand) Toggle the chart toolbar for a cleaner visualization An informative table with selected systems data Option to exclude any system Option to change: The system name The experimental Ki for correlation The temperature to calculate the Experimental Energy and the Interaction Entropy Data reader with progress bar and multiprocessing Multiple systems to analyze in the same session Correlation dock Multiple models at the same time Graphs and correlation data for each calculated energy term (\u0394H, \u0394H+IE, \u0394H+NMODE and \u0394H+QH) Table with the experimental energy of the systems, and the data of the selected model New arguments flags for gmx_MMPBSA_ana (See the gmx_MMPBSA_ana documentation ) replaced -p by -f -f accept a folder, single info file or a list of them New flag -r . This flag allows to load all the systems inside a selected folder New graphical options A new set of graphics (heatmap) Per-frame when analyzing Per-residue and pair in Per-wise Relation matrix for Per-wise Interactive visualization of PDB files with per-residue energies with PyMOL (up to 5 instances). Regression plot for correlation Plot features Added Standard deviation to bar plots Added rolling average to line plots Added indicators for the selected interval and average value in IE chart Added crosshair cursor for better analysis on charts Multiprocessing application for testing ( gmx_MMPBSA_test ) Embed YouTube videos for gmx_MMPBSA_ana Fixes Now gmx_MMPBSA_ana shows stability results as expected Errors in the documentation MPI Changes Converted analyzer.py into a sub-module for more flexibility, organization and portability Residues notation for mutation: CHAIN:RESNAME:RESNUMBER:ICODE instead of Amber residue index Improve the selection method in decomposition calculation Replaced variable entropy_temp (deprecated) by temperature IE in API Color Palette used in graphs Use seaborn and matplotlib for charts Use Pandas Dataframe and numpy to store data Changed the data structure to implement dynamic selection of frames in future versions Improved data export: now any item can be exported as CSV file Improved the documentation Improve examples documentation Added changelog button at home Separated changelog in a new header Added tags to mark the history of changes of variables and functionalities gxm_MMPBSA v1.3.3 (03/09/2021) \u00b6 Fixes fixed Boltzmann constant for IE fix mutation in ligand fixed analyzer error when interval > 1 fixed residue selection within fixed ChainID assignation when reference structure is defined fixed the selection to print when decomposition gxm_MMPBSA v1.3.2 (03/01/2021) \u00b6 Additions Now, gmx_MMPBSA is in Zenodo . You can refer to us in this way in what we publish the article Added Interaction Entropy to gmx_MMPBSA output file Added a new class to save IE in a csv file Added \"Go to Top\" button to documentation HTML. Fixes Error when ligand and/or receptor are discontinuous (Testing it) Error when ligand and/or receptor are discontinuous and numbered non-consecutively Non-critical errors and inconsistencies in documentation Changes receptor_mask and ligand_mask have been removed from input file variables. Now we extract the amber mask directly based on the GROMACS index file The receptor and ligand mapping in the complex was improved. Now we use a method based on the GROMACS index file The method Map of the system_MMPBSA class has been restructured. Now always processes amber masks Changing the IE calculation function to a class gmx_MMPBSA-v1.3.1 \u00b6 Additions New variable ( overwrite_data ) to overwrite gmx_MMPBSA data. More informative message when sander fail. Useful for PB calculation Fixes Protein-ligand with charmm force field example Stability calculation gmx path error leaprc.GLYCAM_06h-1 file Protein-glycan example Changes Documentation banner gmx_MMPBSA-v1.3.0 \u00b6 Additions Documentation at GitHub pages CHARMM force field support Amber topology generation from GROMACS topology. Work for CHARMM and Amber force fields New flag for topologies ( -cp , -rp and -lp ) added Now gmx_MMPBSA supports discontinuous receptor and ligand. Glycine scanning Autocompletion script for both gmx_MMPBSA and gmx_MMPBSA_ana Versioneer to control the semantic version. Argument type checker for the command-line Fixes Alanine scanning tutorial GROMACS executable path The -gui option has been changed by -nogui and fixed when it is defined Improvement on documentation Changes Documentation theme. Now we use Material Alanine scanning variable. Now mutant correspond to mutant amino acid (ALA and GLY) The gmx_MMPBSA_gui was changed by gmx_MMPBSA_ana Improvement on the topologies' construction process Order in which the trajectories are cleaned. Now, the topology is built and finally, the trajectories are cleaned gmx_MMPBSA v1.2.0 \u00b6 Additions New ligand force field (Zwitterionic amino acids) A new flag (-cr) added for defining a reference structure (guarantee a better consistency in generated PDB files) API documentation Fixes More comprehensive output log file Best handling of structure files Changes gmx editconf is used to generate PDB files instead of gmx trjconv ( #14 ) gmx_MMPBSA data is copied in AMBER as an independent folder *.gro files can be used as a MD Structure+mass(db) file Updated tutorial list in README (Protein_DNA_RNA_Ion_ligand BFE calculations) gmx_MMPBSA v1.1.1 \u00b6 Additions New tutorial added (see Protein_DNA_RNA_Ion_ligand tutorial) Fixes Support various metallo-complexes formats Changes Keep all the temporary files in the folder for debugging purposes gxm_MMPBSA v.1.1.0 \u00b6 Additions Now supports carbohydrates as ligand. See this tutorial Now supports metalloprotein-ligand complexes. See this tutorial. We have added data folder to gmx_MMPBSA module. This folder contains the GLYCAM_06h-1 force field files (Compatible with amber99sb and early, see at http://glycam.org ) which is not in AmberTools. Fixes Minor bugs Changes We changed the notation of the force fields, now the user can define any force field (We have only tested Amber and GLYCAM force fields) available in AmberTools. Charmm is not yet supported. See this section gxm_MMPBSA first release \u00b6 This version includes: Compatibility with different Gromacs versions Support for all types of calculations available in MMPBSA.py Graphical user interface for results analysis (gmx_MMPBSA_ana) API modified to get more information Some new facilities and types of calculations","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#gmx_mmpbsa-v162-09142023","text":"","title":"gmx_MMPBSA v1.6.2 (09/14/2023)"},{"location":"changelog/#fixes","text":"Fixed minor issues","title":"Fixes"},{"location":"changelog/#gmx_mmpbsa-v161-04042023","text":"","title":"gmx_MMPBSA v1.6.1 (04/04/2023)"},{"location":"changelog/#fixes_1","text":"PB decomp ends in error ( https://github.com/Valdes-Tresanco-MS/gmx_MMPBSA/issues/352 ) Better parsing for errors","title":"Fixes"},{"location":"changelog/#gmx_mmpbsa-v160-02192023","text":"","title":"gmx_MMPBSA v1.6.0 (02/19/2023)"},{"location":"changelog/#additions","text":"GBNSR6 model implementation Enthalpy Per-residue and Per-wise decomposition Documentation and examples Added git dependency to env.yml file Groups can now be defined as either the number or the name ( #157 ) Added error tracking for groups that are not in the index file","title":"Additions"},{"location":"changelog/#fixes_2","text":"Incompatible compilers version Fixed bug when CAS and PB/RISM calculations are performed Fixed duplicated options and args checking Documentation improved Fixed numpy deprecated np.float ( #316 ) Fixed reproducible command line in debugging in log file ( #335 ) GROMACS 2023 compatibility ( #327 , #335 ) Fixed IE and C2 Entropy ( #325 ) PyMOL doesn't open within gmx_MMPBSA environment ( #331 ) Inaccessible _temp_top.top when the topology file is in different directory ( #299 )","title":"Fixes"},{"location":"changelog/#changes","text":"A copy old info file is created when rewrite-output (for backward compatibility) Setting inp = 1 by default ( #329 )","title":"Changes"},{"location":"changelog/#gmx_mmpbsa-v157-09102022","text":"","title":"gmx_MMPBSA v1.5.7 (09/10/2022)"},{"location":"changelog/#additions_1","text":"Progress bar implementation verbose options for API and info logging for IE and C2 entropy calculations Added logging info for MPI calculations","title":"Additions"},{"location":"changelog/#fixes_3","text":"QH entropy calculation Decomposition bug ( #269 ) Alanine scanning in Terminal residues Regression to output files subwindow in gmx_MMPBSA_ana Bug when using the compact results version Seaborn compatibility print_res in &decomp namelist does not accept \"all\" ( #292 ) error when output files are open and any plot property is changed error if at least one residue of both the receptor and the ligand are not included in the selection for decomposition","title":"Fixes"},{"location":"changelog/#changes_1","text":"now use mpi4py when mpi_size > 1 otherwise use fake_MPI . Now \"MPI\" flag is not required","title":"Changes"},{"location":"changelog/#gmx_mmpbsa-v156-07062022","text":"","title":"gmx_MMPBSA v1.5.6 (07/06/2022)"},{"location":"changelog/#fix","text":"","title":"Fix"},{"location":"changelog/#gmx_mmpbsa","text":"Inconsistent decomposition output ( #246 , #248 ) IE and C2 entropies calculation fail when rewrite-output ( #253 ) Delta Delta Entropies' values are incorrect ( #257 ) Loading binary file fails when alanine scanning is performed ( #258 )","title":"gmx_MMPBSA"},{"location":"changelog/#gmx_mmpbsa_ana","text":"Mutant-Normal data is not computed or displayed ( #254 ) Inconsistent energy values in PyMol visualization ( #255 )","title":"gmx_MMPBSA_ana"},{"location":"changelog/#changes_2","text":"","title":"Changes"},{"location":"changelog/#gmx_mmpbsa_1","text":"Re-implementation of compact binary output file ( #249 )","title":"gmx_MMPBSA"},{"location":"changelog/#gmx_mmpbsa-v155-06102022","text":"","title":"gmx_MMPBSA v1.5.5 (06/10/2022)"},{"location":"changelog/#additions_2","text":"","title":"Additions"},{"location":"changelog/#gmx_mmpbsa_2","text":"Improved the API ( #209 ) Added a new method to get the Enthalpy Added a new method to get the Entropy Added a new method to get the Binding Added a new method to get the Decomposition energy Added a new method to get the gmx_MMPBSA_ana data","title":"gmx_MMPBSA"},{"location":"changelog/#gmx_mmpbsa_ana_1","text":"Added multiprocessing and multithreading ( #209 ) Wait indicator Added Error line cap size Systems, subsystems and component selection options Added threshold to remove energetic terms or residues Correlation ( #137 ) Normal correlation using \u0394G Mutant correlation using \u0394\u0394G Energy values table Interactive systems selection and Experimental Ki editor New regression plot with bivariate and univariate graphs Chart options panel General options Regression options Scatter Distribution","title":"gmx_MMPBSA_ana"},{"location":"changelog/#documentation","text":"News section Animated command-line code block with terminal Added versioning Added installation using *.yml configuration file ( #221 ) Added a new tutorial for correlation analysis ( #194 )","title":"Documentation"},{"location":"changelog/#fix_1","text":"","title":"Fix"},{"location":"changelog/#gmx_mmpbsa_ana_2","text":"Close gmx_MMPBSA_ana properly when the selection dialog is rejected Compatibility with previous versions ( < v1.5.2 ) Added several tooltips Improved general performance. See the benchmark ( #209 , #230 , #243 ) Improved the reading of output files and optimized data storage. ( #228 ) Eliminated the recalculation of IE and C2 entropies before opening the GUI. Now read from outputs files Optimized data storage and access to subsets in panda's Dataframes Now file processing and graphics generation does not freeze the GUI. Removed redundant steps and data Removed line graphs for components in the per-wise decomposition schema Data access, processing, and storage are done in the API. Added the option to temporarily store data on the hard disk instead of memory Removed several pop-up windows Decreased RAM consumption Removed H5 support Invalid periodicity in the prmtop ( #211 ) Buffer saturation ( #213 )","title":"gmx_MMPBSA_ana"},{"location":"changelog/#changes_3","text":"","title":"Changes"},{"location":"changelog/#gmx_mmpbsa_3","text":"Improved IE and C2 calculation","title":"gmx_MMPBSA"},{"location":"changelog/#gmx_mmpbsa_ana_3","text":"Change the IE representation Removed summary widget Now the bar plot data contain the Average, SD, and SEM instead of all frames Chart Options Error line color Error line representation (SD or SEM) Restructured the init (system selection) dialog Improved energy and decomposition options selection Improved the correlation options Added a new section for performance configuration Added RAM consumption estimator Improved the systems' tree representation and edition options","title":"gmx_MMPBSA_ana"},{"location":"changelog/#gmx_mmpbsa_test","text":"The examples folder moved up to the root directory","title":"gmx_MMPBSA_test"},{"location":"changelog/#gmx_mmpbsa-v152-03232022","text":"","title":"gmx_MMPBSA v1.5.2 (03/23/2022)"},{"location":"changelog/#additions_3","text":"","title":"Additions"},{"location":"changelog/#gmx_mmpbsa_4","text":"ALPB (Analytical Linearized Poisson-Boltzmann) approximation ( #170 ) PC+ correction in 3D-RISM ( #187 ) Warning when using -deo option without &decomp namelist in the input file ( #191 )","title":"gmx_MMPBSA"},{"location":"changelog/#gmx_mmpbsa_ana_4","text":"Tooltips for different options ( #151 )","title":"gmx_MMPBSA_ana"},{"location":"changelog/#fix_2","text":"","title":"Fix"},{"location":"changelog/#gmx_mmpbsa_ana_5","text":"Chart options ( #185 )","title":"gmx_MMPBSA_ana"},{"location":"changelog/#changes_4","text":"","title":"Changes"},{"location":"changelog/#gmx_mmpbsa_5","text":"3D-RISM calculated with sander instead of rism3d.snglpnt ( #153 )","title":"gmx_MMPBSA"},{"location":"changelog/#documentation_1","text":"Update 3D-RISM doc ( #190 )","title":"Documentation"},{"location":"changelog/#gmx_mmpbsa-v151-03102022","text":"","title":"gmx_MMPBSA v1.5.1 (03/10/2022)"},{"location":"changelog/#additions_4","text":"","title":"Additions"},{"location":"changelog/#gmx_mmpbsa_6","text":"Add new variables for QM/MM calculations ( #171 ) Improvement of \"print_res\" function for &decomp and QM ( #150 ) Support for OPLS force field ( #160 ) New precalculated .xvv files for 3D-RISM","title":"gmx_MMPBSA"},{"location":"changelog/#gmx_mmpbsa_ana_6","text":"Support for PyQt6","title":"gmx_MMPBSA_ana"},{"location":"changelog/#documentation_2","text":"gmx_MMPBSA_ana documentation (v1.5.0) ( #152 ) Tutorial for psf_dcd files Tutorial for OPLS ff files","title":"Documentation"},{"location":"changelog/#fixes_4","text":"","title":"Fixes"},{"location":"changelog/#gmx_mmpbsa_7","text":"Add ERROR when ligand.mol2 defined and no gaff or gaff2 in forcefields variable ( #175 ) Fixed incorrect path search when the gmx_path is defined Fixed error when no ions are included in the groups defined","title":"gmx_MMPBSA"},{"location":"changelog/#gmx_mmpbsa_ana_7","text":"Remove empty terms issue ( #179 ) Fixed chart title for decomposition","title":"gmx_MMPBSA_ana"},{"location":"changelog/#gmx_mmpbsa-v1503-02262022","text":"","title":"gmx_MMPBSA v1.5.0.3 (02/26/2022)"},{"location":"changelog/#fixes_5","text":"","title":"Fixes"},{"location":"changelog/#gmx_mmpbsa_8","text":"Improved nmode and sd in the output ( #169 ) Improved autocompletion script Updated 3D-RISM, NMODE, Alascan, Decomp, and Linear/Non-Linear PB solver tutorials","title":"gmx_MMPBSA"},{"location":"changelog/#gmx_mmpbsa-v1501-02222022","text":"","title":"gmx_MMPBSA v1.5.0.1 (02/22/2022)"},{"location":"changelog/#fixes_6","text":"","title":"Fixes"},{"location":"changelog/#gmx_mmpbsa_9","text":"Allow index group name for group selection ( #156 )","title":"gmx_MMPBSA"},{"location":"changelog/#gmx_mmpbsa_ana_8","text":"gmx_MMPBSA_ana does not open at the end of the calculation ( #158 )","title":"gmx_MMPBSA_ana"},{"location":"changelog/#gmx_mmpbsa-v150-02222022","text":"","title":"gmx_MMPBSA v1.5.0 (02/22/2022)"},{"location":"changelog/#additions_5","text":"","title":"Additions"},{"location":"changelog/#gmx_mmpbsa_10","text":"Support for all files generated with CHARMM-GUI for Amber force fields (ff14SB and ff19SB) enabled NonLinear PB solver in sander ( #63 ) enabled all pbsa options in sander ( #64 ) enabled all 3D-RISM variables ( #68 ) Improve IE output data ( #91 ) New C2 Entropy method added ( #73 ) Option to create an input file ( --create_input ) New format file (h5) to store all the data result ( Experimental ) New method to get the decomp data without the API classes Report energy differences for every term in alanine scanning Automatic calculation of charge for com , rec , and lig groups in QM/MMGBSA Improve residue selection in QM/MMGBSA New modified PB Radii sets for GAFF ( #140 ) and CHARMM ( #141 ) force fields conda package ( #55 ) Checking structure consistency method ( #44 )","title":"gmx_MMPBSA"},{"location":"changelog/#gmx_mmpbsa_ana_9","text":"Chart properties selector. The following properties can be changed: Font size: Axes (Ticks, Labels) Title, Subtitle and legend Color bar Pallete, color or theme: Line plot Bar plot Heatmap plot PyMOL visualization Rotation, padding and number of ticks Figure size, dpi and format Chart type specific properties Highlight or split components Frame range and interval selection Chart data can be visualized in table format and copy directly to excel Summary table for complex, receptor, ligand, etc. Now the outputs files can be visualized as document in their own sub-window New button to launch all the graphics and functions associated to item Highlighted Bar and Heatmap plot User setting file per-system Frames to Time conversion","title":"gmx_MMPBSA_ana"},{"location":"changelog/#documentation_3","text":"Code block names and annotations","title":"Documentation"},{"location":"changelog/#fixes_7","text":"","title":"Fixes"},{"location":"changelog/#gmx_mmpbsa_11","text":"Protonated residues ( #42 ) Inconsistent energy between tleap and ParmEd topology ( #147 ) Error with alphanumeric residue numbers ( #134 ) print_res selection scheme Error when startframe=0 ( #66 ) parmchk2 always uses GAFF as force field ( #45 ) IE is calculated for PB and GB independently ( #72 ) Alanine scanning with CHARMM ff ( #88 ) MT approach ( #78 ) get_num_terms function run forever if TDC term not found. ( #98 ) Check if the groups defined for receptor and ligand are the same ( #86 ) Add SD and SEM calculated with propagation formula ( #105 ) Structure consistency ( #80 , #79 ) gmx_MMPBSA launches an error when there is an OverflowError on IE calculation ( #57 ) Improve gmx_MMPBSA.log file ( #108 ) Inconsistency with multiple trajectories ( #120 ) Alanine Scanning ERROR on THR to ALA mutation ( #139 )","title":"gmx_MMPBSA"},{"location":"changelog/#gmx_mmpbsa_ana_10","text":"Tick labels in line plots ( #65 ) Improved PyMOL 3D visualization ( #85 ) Improved the system options in the init dialog","title":"gmx_MMPBSA_ana"},{"location":"changelog/#gmx_mmpbsa_test_1","text":"Error when -f option it not defined ( #46 )","title":"gmx_MMPBSA_test"},{"location":"changelog/#changes_5","text":"","title":"Changes"},{"location":"changelog/#gmx_mmpbsa_12","text":"Recalculate the PB energy with --rewrite-output changing the value of inp ( #144 ) Removed deprecated variables Input file format. Although it kept the structure of the previous version, the current one is more GROMACS alike EnergyVector changed to ndarray subclass Regen expression for mutant_res Now the COM, REC and LIG trajectories must have the same length when using MT approach Improve verbose logging in gmx_MMPBSA.log file ( #108 ) Removed *.gro file support in -cs , -rs and -ls flags Added trjconv to avoid the PBC in the tpr file ( #43 )","title":"gmx_MMPBSA"},{"location":"changelog/#gmx_mmpbsa_ana_11","text":"New set of chart buttons IE plot","title":"gmx_MMPBSA_ana"},{"location":"changelog/#gmx_mmpbsa_test_2","text":"Improved parallel processing Change command-line","title":"gmx_MMPBSA_test"},{"location":"changelog/#documentation_4","text":"Updated packages dependency Input and Output file pages","title":"Documentation"},{"location":"changelog/#gxm_mmpbsa-v143-05262021","text":"","title":"gxm_MMPBSA v1.4.3 (05/26/2021)"},{"location":"changelog/#additions_6","text":"Added two new tutorials Protein_ligand_LPH_atoms_CHARMMff and QM/MMGBSA calculations Now the program reports the p-value associated with the correlation coefficient when performing the correlation analysis Google Analytics is used as a third-party tracking service to improve documentation. Check our Private Policy for more details","title":"Additions"},{"location":"changelog/#fixes_8","text":"Minor fixes in the documentation Improved parsing of forcefields variable Fixed bug when gmx_MMPBSA_ana runs without arguments Fixed compatibility with older files ( < v1.4.0 ) Fixed error when debug_printlevel > 1 in tleap command","title":"Fixes"},{"location":"changelog/#changes_6","text":"Now the command line used is added to the log file The gmx_MMPBSA data folder is exported directly rather than copied in the $AMBERHOME data folder.","title":"Changes"},{"location":"changelog/#gxm_mmpbsa-v142-05012021","text":"","title":"gxm_MMPBSA v1.4.2 (05/01/2021)"},{"location":"changelog/#additions_7","text":"Added Covid-19 and other complex systems as examples in the documentation Added Q&A section to the documentation Implemented an adaptive intdiel (GB)/ indi (PB) for Alanine scanning (Check the input file section)","title":"Additions"},{"location":"changelog/#fixes_9","text":"Fixed bug when startframe = 0 ( #33 ) Fixed bug when blank lines exist in [molecule] section in topology file Fixed pipe command-line for Gromacs execution in macOS Fixed compatibility issues with v1.3.x Improved and fixed the documentation Improved output file information related to \u0394G binding Improved calculation with different entropy approximations simultaneously","title":"Fixes"},{"location":"changelog/#changes_7","text":"Changed protein_forcefields and ligand_forcefield by forcefields variable in all examples Now QH and IE can be calculated at the same time entropy variable was separated in qh_entropy and interaction_entropy . The entropy variable is deprecated and will be removed in the next major version (v1.5.0). entropy_seg was replaced by ie_segment . The entropy_seg variable is deprecated and will be removed in the next major version (v1.5.0).","title":"Changes"},{"location":"changelog/#gxm_mmpbsa-v141-04082021","text":"Additions New class Residue added to handle residues selection in Gromacs format with Amber index Verification of the presence of water molecules in receptor and ligand groups Gromacs timer added Fixes Gromacs topology conversion qm_residues notation Default path in gmx_MMPBSA_test The Entropy representation in gmx_MMPBSA_ana Bug when the structure has insertion code Improved \u0394G Binding plot representation Changes Now forcefields variable unifies protein_forcefield and ligand_forcefield . These variables protein_forcefield and ligand_forcefield are deprecated and will be removed in the next major version (v1.5.0). Improved documentation Examples Command-line MPI Examples Links and references Updated to material 7.1.0 Dark mode Material \"Back to Top\" button Grammatical corrections Installation section Figures caption The Ambiguous name for Entropy term in output files","title":"gxm_MMPBSA v1.4.1 (04/08/2021)"},{"location":"changelog/#gxm_mmpbsa-v140-03222021","text":"This release focuses almost entirely on gmx_MMPBSA_ana with minor issues fixed in gmx_MMPBSA Additions New start window to select options Option to make correlation (Pearson and Spearman coefficients) Option to hide decomposition data Option to not compute charts with a non-significant contribution Option to not include terms with a non-significant contribution in bar charts Selection of the components to display in addition to Delta (i.e. complex, receptor, and ligand) Toggle the chart toolbar for a cleaner visualization An informative table with selected systems data Option to exclude any system Option to change: The system name The experimental Ki for correlation The temperature to calculate the Experimental Energy and the Interaction Entropy Data reader with progress bar and multiprocessing Multiple systems to analyze in the same session Correlation dock Multiple models at the same time Graphs and correlation data for each calculated energy term (\u0394H, \u0394H+IE, \u0394H+NMODE and \u0394H+QH) Table with the experimental energy of the systems, and the data of the selected model New arguments flags for gmx_MMPBSA_ana (See the gmx_MMPBSA_ana documentation ) replaced -p by -f -f accept a folder, single info file or a list of them New flag -r . This flag allows to load all the systems inside a selected folder New graphical options A new set of graphics (heatmap) Per-frame when analyzing Per-residue and pair in Per-wise Relation matrix for Per-wise Interactive visualization of PDB files with per-residue energies with PyMOL (up to 5 instances). Regression plot for correlation Plot features Added Standard deviation to bar plots Added rolling average to line plots Added indicators for the selected interval and average value in IE chart Added crosshair cursor for better analysis on charts Multiprocessing application for testing ( gmx_MMPBSA_test ) Embed YouTube videos for gmx_MMPBSA_ana Fixes Now gmx_MMPBSA_ana shows stability results as expected Errors in the documentation MPI Changes Converted analyzer.py into a sub-module for more flexibility, organization and portability Residues notation for mutation: CHAIN:RESNAME:RESNUMBER:ICODE instead of Amber residue index Improve the selection method in decomposition calculation Replaced variable entropy_temp (deprecated) by temperature IE in API Color Palette used in graphs Use seaborn and matplotlib for charts Use Pandas Dataframe and numpy to store data Changed the data structure to implement dynamic selection of frames in future versions Improved data export: now any item can be exported as CSV file Improved the documentation Improve examples documentation Added changelog button at home Separated changelog in a new header Added tags to mark the history of changes of variables and functionalities","title":"gxm_MMPBSA v1.4.0 (03/22/2021)"},{"location":"changelog/#gxm_mmpbsa-v133-03092021","text":"Fixes fixed Boltzmann constant for IE fix mutation in ligand fixed analyzer error when interval > 1 fixed residue selection within fixed ChainID assignation when reference structure is defined fixed the selection to print when decomposition","title":"gxm_MMPBSA v1.3.3 (03/09/2021)"},{"location":"changelog/#gxm_mmpbsa-v132-03012021","text":"Additions Now, gmx_MMPBSA is in Zenodo . You can refer to us in this way in what we publish the article Added Interaction Entropy to gmx_MMPBSA output file Added a new class to save IE in a csv file Added \"Go to Top\" button to documentation HTML. Fixes Error when ligand and/or receptor are discontinuous (Testing it) Error when ligand and/or receptor are discontinuous and numbered non-consecutively Non-critical errors and inconsistencies in documentation Changes receptor_mask and ligand_mask have been removed from input file variables. Now we extract the amber mask directly based on the GROMACS index file The receptor and ligand mapping in the complex was improved. Now we use a method based on the GROMACS index file The method Map of the system_MMPBSA class has been restructured. Now always processes amber masks Changing the IE calculation function to a class","title":"gxm_MMPBSA v1.3.2 (03/01/2021)"},{"location":"changelog/#gmx_mmpbsa-v131","text":"Additions New variable ( overwrite_data ) to overwrite gmx_MMPBSA data. More informative message when sander fail. Useful for PB calculation Fixes Protein-ligand with charmm force field example Stability calculation gmx path error leaprc.GLYCAM_06h-1 file Protein-glycan example Changes Documentation banner","title":"gmx_MMPBSA-v1.3.1"},{"location":"changelog/#gmx_mmpbsa-v130","text":"Additions Documentation at GitHub pages CHARMM force field support Amber topology generation from GROMACS topology. Work for CHARMM and Amber force fields New flag for topologies ( -cp , -rp and -lp ) added Now gmx_MMPBSA supports discontinuous receptor and ligand. Glycine scanning Autocompletion script for both gmx_MMPBSA and gmx_MMPBSA_ana Versioneer to control the semantic version. Argument type checker for the command-line Fixes Alanine scanning tutorial GROMACS executable path The -gui option has been changed by -nogui and fixed when it is defined Improvement on documentation Changes Documentation theme. Now we use Material Alanine scanning variable. Now mutant correspond to mutant amino acid (ALA and GLY) The gmx_MMPBSA_gui was changed by gmx_MMPBSA_ana Improvement on the topologies' construction process Order in which the trajectories are cleaned. Now, the topology is built and finally, the trajectories are cleaned","title":"gmx_MMPBSA-v1.3.0"},{"location":"changelog/#gmx_mmpbsa-v120","text":"Additions New ligand force field (Zwitterionic amino acids) A new flag (-cr) added for defining a reference structure (guarantee a better consistency in generated PDB files) API documentation Fixes More comprehensive output log file Best handling of structure files Changes gmx editconf is used to generate PDB files instead of gmx trjconv ( #14 ) gmx_MMPBSA data is copied in AMBER as an independent folder *.gro files can be used as a MD Structure+mass(db) file Updated tutorial list in README (Protein_DNA_RNA_Ion_ligand BFE calculations)","title":"gmx_MMPBSA v1.2.0"},{"location":"changelog/#gmx_mmpbsa-v111","text":"Additions New tutorial added (see Protein_DNA_RNA_Ion_ligand tutorial) Fixes Support various metallo-complexes formats Changes Keep all the temporary files in the folder for debugging purposes","title":"gmx_MMPBSA v1.1.1"},{"location":"changelog/#gxm_mmpbsa-v110","text":"Additions Now supports carbohydrates as ligand. See this tutorial Now supports metalloprotein-ligand complexes. See this tutorial. We have added data folder to gmx_MMPBSA module. This folder contains the GLYCAM_06h-1 force field files (Compatible with amber99sb and early, see at http://glycam.org ) which is not in AmberTools. Fixes Minor bugs Changes We changed the notation of the force fields, now the user can define any force field (We have only tested Amber and GLYCAM force fields) available in AmberTools. Charmm is not yet supported. See this section","title":"gxm_MMPBSA v.1.1.0"},{"location":"changelog/#gxm_mmpbsa-first-release","text":"This version includes: Compatibility with different Gromacs versions Support for all types of calculations available in MMPBSA.py Graphical user interface for results analysis (gmx_MMPBSA_ana) API modified to get more information Some new facilities and types of calculations","title":"gxm_MMPBSA first release"},{"location":"cite_us/","text":"If you found gmx_MMPBSA useful for your research, please cite: Vald\u00e9s-Tresanco, M.S., Vald\u00e9s-Tresanco, M.E., Valiente, P.A. and Moreno E. gmx_MMPBSA: A New Tool to Perform End-State Free Energy Calculations with GROMACS. Journal of Chemical Theory and Computation , 2021 17 (10), 6281-6291. https://pubs.acs.org/doi/10.1021/acs.jctc.1c00645 . Download | *.bib | *.ris Please also consider citing MMPBSA.py's paper: Bill R. Miller, T. Dwight McGee, Jason M. Swails, Nadine Homeyer, Holger Gohlke, and Adrian E. Roitberg. MMPBSA. py: An Efficient Program for End-State Free Energy Calculations. Journal of Chemical Theory and Computation , 2012 8 (9), 3314-3321. https://pubs.acs.org/doi/10.1021/ct300418h . Download | *.bib | *.ris | *.xml Example \u00b6 Important This does not constitute by any means the only way to cite gmx_MMPBSA and programs/methods implemented in it. It is just meant to serve as a guidance. Here there is an example on how to cite gmx_MMPBSA and programs/methods implemented in it: MM/GBSA calculations PBC conditions were removed from GROMACS output trajectory before running the calculations with gmx_MMPBSA. 1 , 2 Energetically relevant residues within 5 \u00c5 at the interface were predicted using the per-residue effective free energy decomposition (prEFED) protocol. 3 The AMBER99SB force field 5 was used to calculate the internal term (\u0394E int ) as well as van der Waals (\u0394E vdW ) and electrostatic (\u0394E ele ) energies. The GB-Neck2 model (igb = 8) 6 was used to estimate the polar component of the solvation energy (\u0394G GB ) while the non-polar solvation free energy (\u2206\ud835\udc3a \ud835\udc46\ud835\udc34 ) was obtained by the equation: \u2206\ud835\udc3a \ud835\udc46\ud835\udc34 = \ud835\udefe \u00b7 \u2206\ud835\udc46\ud835\udc34\ud835\udc46\ud835\udc34 + \ud835\udefd where \u2206\ud835\udc46\ud835\udc34\ud835\udc46\ud835\udc34 represents the solvent-accessible surface area variation of the solute molecule upon complex formation, and \ud835\udefe and \ud835\udefd are empiric constants whose values for GB models are 0.0072 kcal\u00b7\u00c5 -2 \u00b7mol -1 and 0, respectively. 7 , 8 The entropic term was calculated by the Interaction Entropy method. 9 The input file for gmx_MMPBSA decomposition calculation is shown below: ============================ Sample input file with decomposition analysis &general startframe=1750, endframe=2400, interval=1, PBRadii=4, forcefields=\"oldff/leaprc.ff99SB\" / &gb igb=8, saltcon=0.150, intdiel=5, / &decomp idecomp=2, dec_verbose=3, print_res=\"within 5\" ============================ Computational alanine scanning 10 was performed for five residues (TP62, EP68, EP70, HP76, and EP83) with a specific internal dielectric constant as suggested by Yan et al. 11 and according to the chemical-physical properties of the mutated amino acid ( i.e. , e i = 5 for charged residues; e i = 3 for polar residues; and e i = 1 for hydrophobic residues). An example of the input file for gmx_MMPBSA alanine scanning (EP68 residue) calculation is shown below: ============================ Sample input file for alanine scanning analysis &general startframe=1750, endframe=2400, interval=1, PBRadii=4, forcefields=\"oldff/leaprc.ff99SB\", interaction_entropy=1, ie_segment=25, temperature=298 / &gb igb=8, saltcon=0.150, / &alanine_scanning mutant='ALA', mutant_res='C:68', cas_intdiel=1 / ============================ Authors \u00b6 Mario Sergio Vald\u00e9s Tresanco, PhD Student. University of Medellin, Colombia Mario Ernesto Vald\u00e9s Tresanco, PhD Student. University of Calgary, Canada. Pedro Alberto Valiente, PhD. University of Toronto, Canada Ernesto Moreno Fr\u00edas, PhD. University of Medellin, Colombia","title":"Cite gmx_MMPBSA"},{"location":"cite_us/#example","text":"Important This does not constitute by any means the only way to cite gmx_MMPBSA and programs/methods implemented in it. It is just meant to serve as a guidance. Here there is an example on how to cite gmx_MMPBSA and programs/methods implemented in it: MM/GBSA calculations PBC conditions were removed from GROMACS output trajectory before running the calculations with gmx_MMPBSA. 1 , 2 Energetically relevant residues within 5 \u00c5 at the interface were predicted using the per-residue effective free energy decomposition (prEFED) protocol. 3 The AMBER99SB force field 5 was used to calculate the internal term (\u0394E int ) as well as van der Waals (\u0394E vdW ) and electrostatic (\u0394E ele ) energies. The GB-Neck2 model (igb = 8) 6 was used to estimate the polar component of the solvation energy (\u0394G GB ) while the non-polar solvation free energy (\u2206\ud835\udc3a \ud835\udc46\ud835\udc34 ) was obtained by the equation: \u2206\ud835\udc3a \ud835\udc46\ud835\udc34 = \ud835\udefe \u00b7 \u2206\ud835\udc46\ud835\udc34\ud835\udc46\ud835\udc34 + \ud835\udefd where \u2206\ud835\udc46\ud835\udc34\ud835\udc46\ud835\udc34 represents the solvent-accessible surface area variation of the solute molecule upon complex formation, and \ud835\udefe and \ud835\udefd are empiric constants whose values for GB models are 0.0072 kcal\u00b7\u00c5 -2 \u00b7mol -1 and 0, respectively. 7 , 8 The entropic term was calculated by the Interaction Entropy method. 9 The input file for gmx_MMPBSA decomposition calculation is shown below: ============================ Sample input file with decomposition analysis &general startframe=1750, endframe=2400, interval=1, PBRadii=4, forcefields=\"oldff/leaprc.ff99SB\" / &gb igb=8, saltcon=0.150, intdiel=5, / &decomp idecomp=2, dec_verbose=3, print_res=\"within 5\" ============================ Computational alanine scanning 10 was performed for five residues (TP62, EP68, EP70, HP76, and EP83) with a specific internal dielectric constant as suggested by Yan et al. 11 and according to the chemical-physical properties of the mutated amino acid ( i.e. , e i = 5 for charged residues; e i = 3 for polar residues; and e i = 1 for hydrophobic residues). An example of the input file for gmx_MMPBSA alanine scanning (EP68 residue) calculation is shown below: ============================ Sample input file for alanine scanning analysis &general startframe=1750, endframe=2400, interval=1, PBRadii=4, forcefields=\"oldff/leaprc.ff99SB\", interaction_entropy=1, ie_segment=25, temperature=298 / &gb igb=8, saltcon=0.150, / &alanine_scanning mutant='ALA', mutant_res='C:68', cas_intdiel=1 / ============================","title":"Example"},{"location":"cite_us/#authors","text":"Mario Sergio Vald\u00e9s Tresanco, PhD Student. University of Medellin, Colombia Mario Ernesto Vald\u00e9s Tresanco, PhD Student. University of Calgary, Canada. Pedro Alberto Valiente, PhD. University of Toronto, Canada Ernesto Moreno Fr\u00edas, PhD. University of Medellin, Colombia","title":"Authors"},{"location":"compatibility/","text":"Upgrading \u00b6 Upgrade to the latest version with: amber.python -m pip install --upgrade gmx_MMPBSA Inspect the currently installed version with: amber.python -m pip show gmx_MMPBSA or gmx_MMPBSA -v Upgrading from 1.4.3 to 1.5.0 \u00b6 The new gmx_MMPBSA version 1.5.0 includes major changes in calculation and processing modules, making it incompatible with previous versions. New variables have been included in the input file to perform new calculations or simply provide the user with full control over the ones already available in gmx_MMPBSA. A number of variables has been also updated, reworked or removed. See the list below for more details: Variables \u00b6 New variables &general namelist c2_entropy &gb namelist extdiel &pb namelist smoothopt , iprob , arcres , mprob , npbopt , accept , nbuffer , fscale , npbgrid , scalec , nsnba , decompopt , use_rmin , sprob , vprob , rhow_effect , use_sav , maxsph , npbverb &rism namelist noasympcorr , ljTolerance , asympKSpaceTolerance , treeDCF , treeTCF , treeCoulomb , treeDCFMAC , treeTCFMAC , treeCoulombMAC , treeDCFOrder , treeTCFOrder , treeCoulombOrder , treeDCFN0 , treeTCFN0 , treeCoulombN0 , mdiis_del , mdiis_nvec , mdiis_restart , maxstep , npropagate , entropicDecomp Updated variables &general namelist PBRadii , interaction_entropy , assign_chainID , solvated_trajectory , verbose Reworked variables &general namelist temperature Removed variables &general namelist protein_forcefield , ligand_forcefield , use_sander Calculations \u00b6 New calculations In the new version, it is possible to perform new calculations such as C2 Entropy and Binding free energy calculation with non-linear PB solver Updated calculations The addition of new variables (see above) provide more control over &pb and &rism calculations gmx_MMPBSA_ana \u00b6 gmx_MMPBSA_ana has been completely reworked, and it doesn't support files from previous versions. New functions for customizing/exporting graphs, change number of frames and showing/exporting data have been added. Upgrading from 1.3.x to 1.4.x \u00b6 The differences between both versions are small, you can see them below Variables \u00b6 New variables in input file qh_entropy replace entropy = 1 ( Since v1.4.2 ) interaction_entrpy replace entropy = 2 ( Since v1.4.2 ) ie_segment replace entropy_seg ( Since v1.4.2 ) forcefields replace protein_forcefield and ligand_forcefield ( Since v1.4.1 ) temperature replace entropy_temp ( Since v1.4.1 ) sys_name ( Since v1.4.0 ) exp_ki ( Since v1.4.0 ) Internal variables (the user only interact with it in the info file) complex_fixed ( Since v1.4.0 ) Modified variables print_res ( Since v1.4.0 ) Deprecated variables entropy use qh_entropy or interaction_entropy instead ( Deprecated: v1.4.2 \u00b7 Removed: v1.5.0 ) entropy_seg use ie_segment instead ( Deprecated: v1.4.2 \u00b7 Removed: v1.5.0 ) entropy_temp use temperature instaed ( Deprecated: v1.4.1 \u00b7 Removed: v1.5.0 ) protein_forcefield use forcefields instead ( Deprecated: v1.4.1 \u00b7 Removed: v1.5.0 ) ligand_forcefield use forcefields instead ( Deprecated: v1.4.1 \u00b7 Removed: v1.5.0 ) Tip Check the changes in &general namelist variables section Command-line \u00b6 gmx_MMPBSA_ana changes the -p option by -f with more flexibility. Please check the gmx_MMPBSA_ana command-line . ( Changed in v1.4.0 ) Results and info file \u00b6 We have ensured backwards compatibility with gmx_MMPBSA , however there are some changes you can make Old results New calculation Since the calculations are done, we only have two options. Define the variables in gmx_MMPBSA_ana As we described above, these variables can be defined or modified in the gmx_MMPBSA_ana start dialog (See the gmx_MMPBSA_ana documentation ) Modify the *info file (usually _GMXMMPBSA_info ) Added the new variables as we describe below. We have modified the description in the _GMXMMPBSA_info file a bit to aid editing. Add variables to _GMXMMPBSA_info file # You can alter the variables below INPUT['debug_printlevel'] = 0 INPUT['verbose'] = 2 INPUT['csv_format'] = 1 INPUT['dec_verbose'] = 0 INPUT['temperature'] = 298.15 INPUT['exp_ki'] = 0.0 INPUT['sys_name'] = 'My System' INPUT['entropy_seg'] = 25 Warning complex_fixed is an internal variable that cannot be defined in the input file. This variable stores the PDB file name of the fixed complex. This structure corresponds to the complex with the proper chain identifiers and amino acid numbers. If it does not exist, a warning will be displayed, and the complex structure extracted from the structure file defined with the -cs option will be used. Note that this can lead to inconsistencies, for example: if the file defined in the -cs option is in GRO format, it will not have the string IDs. You can generate a structure for this variable as follows: generate a copy of the _GMXMMPBSA_COM.pdb file Open it with your preferred editor (we recommend one with column editing capabilities, such as Kate, Geany, or Sublime Text) Check the chains ID, if they do not exist add them Do not change the numbering of amino acids Save the document as _GMXMMPBSA_COM_FIXED.pdb In the _GMXMMPBSA_info file add the following line FILES.complex_fixed = '_GMXMMPBSA_COM_FIXED.pdb' save the document Removing entropy_temp variable After defining the temperature variable, you can remove the entropy_temp variable. This avoids getting the related warning. As we describe in the &general namelist variables section in the input file, these three variables are optional since they can be defined or modified in the gmx_MMPBSA_ana start dialog. However, modifying a set of systems can be cumbersome. We recommend defining them in the input file Example &general sys_name=\"Protein-Ligand\", temperature=310 exp_ki=10 / Note exp_ki Only needed when performing correlation analysis","title":"Compatibility"},{"location":"compatibility/#upgrading","text":"Upgrade to the latest version with: amber.python -m pip install --upgrade gmx_MMPBSA Inspect the currently installed version with: amber.python -m pip show gmx_MMPBSA or gmx_MMPBSA -v","title":"Upgrading"},{"location":"compatibility/#upgrading-from-143-to-150","text":"The new gmx_MMPBSA version 1.5.0 includes major changes in calculation and processing modules, making it incompatible with previous versions. New variables have been included in the input file to perform new calculations or simply provide the user with full control over the ones already available in gmx_MMPBSA. A number of variables has been also updated, reworked or removed. See the list below for more details:","title":"Upgrading from 1.4.3 to 1.5.0"},{"location":"compatibility/#variables","text":"New variables &general namelist c2_entropy &gb namelist extdiel &pb namelist smoothopt , iprob , arcres , mprob , npbopt , accept , nbuffer , fscale , npbgrid , scalec , nsnba , decompopt , use_rmin , sprob , vprob , rhow_effect , use_sav , maxsph , npbverb &rism namelist noasympcorr , ljTolerance , asympKSpaceTolerance , treeDCF , treeTCF , treeCoulomb , treeDCFMAC , treeTCFMAC , treeCoulombMAC , treeDCFOrder , treeTCFOrder , treeCoulombOrder , treeDCFN0 , treeTCFN0 , treeCoulombN0 , mdiis_del , mdiis_nvec , mdiis_restart , maxstep , npropagate , entropicDecomp Updated variables &general namelist PBRadii , interaction_entropy , assign_chainID , solvated_trajectory , verbose Reworked variables &general namelist temperature Removed variables &general namelist protein_forcefield , ligand_forcefield , use_sander","title":"Variables"},{"location":"compatibility/#calculations","text":"New calculations In the new version, it is possible to perform new calculations such as C2 Entropy and Binding free energy calculation with non-linear PB solver Updated calculations The addition of new variables (see above) provide more control over &pb and &rism calculations","title":"Calculations"},{"location":"compatibility/#gmx_mmpbsa_ana","text":"gmx_MMPBSA_ana has been completely reworked, and it doesn't support files from previous versions. New functions for customizing/exporting graphs, change number of frames and showing/exporting data have been added.","title":"gmx_MMPBSA_ana"},{"location":"compatibility/#upgrading-from-13x-to-14x","text":"The differences between both versions are small, you can see them below","title":"Upgrading from 1.3.x to 1.4.x"},{"location":"compatibility/#variables_1","text":"New variables in input file qh_entropy replace entropy = 1 ( Since v1.4.2 ) interaction_entrpy replace entropy = 2 ( Since v1.4.2 ) ie_segment replace entropy_seg ( Since v1.4.2 ) forcefields replace protein_forcefield and ligand_forcefield ( Since v1.4.1 ) temperature replace entropy_temp ( Since v1.4.1 ) sys_name ( Since v1.4.0 ) exp_ki ( Since v1.4.0 ) Internal variables (the user only interact with it in the info file) complex_fixed ( Since v1.4.0 ) Modified variables print_res ( Since v1.4.0 ) Deprecated variables entropy use qh_entropy or interaction_entropy instead ( Deprecated: v1.4.2 \u00b7 Removed: v1.5.0 ) entropy_seg use ie_segment instead ( Deprecated: v1.4.2 \u00b7 Removed: v1.5.0 ) entropy_temp use temperature instaed ( Deprecated: v1.4.1 \u00b7 Removed: v1.5.0 ) protein_forcefield use forcefields instead ( Deprecated: v1.4.1 \u00b7 Removed: v1.5.0 ) ligand_forcefield use forcefields instead ( Deprecated: v1.4.1 \u00b7 Removed: v1.5.0 ) Tip Check the changes in &general namelist variables section","title":"Variables"},{"location":"compatibility/#command-line","text":"gmx_MMPBSA_ana changes the -p option by -f with more flexibility. Please check the gmx_MMPBSA_ana command-line . ( Changed in v1.4.0 )","title":"Command-line"},{"location":"compatibility/#results-and-info-file","text":"We have ensured backwards compatibility with gmx_MMPBSA , however there are some changes you can make Old results New calculation Since the calculations are done, we only have two options. Define the variables in gmx_MMPBSA_ana As we described above, these variables can be defined or modified in the gmx_MMPBSA_ana start dialog (See the gmx_MMPBSA_ana documentation ) Modify the *info file (usually _GMXMMPBSA_info ) Added the new variables as we describe below. We have modified the description in the _GMXMMPBSA_info file a bit to aid editing. Add variables to _GMXMMPBSA_info file # You can alter the variables below INPUT['debug_printlevel'] = 0 INPUT['verbose'] = 2 INPUT['csv_format'] = 1 INPUT['dec_verbose'] = 0 INPUT['temperature'] = 298.15 INPUT['exp_ki'] = 0.0 INPUT['sys_name'] = 'My System' INPUT['entropy_seg'] = 25 Warning complex_fixed is an internal variable that cannot be defined in the input file. This variable stores the PDB file name of the fixed complex. This structure corresponds to the complex with the proper chain identifiers and amino acid numbers. If it does not exist, a warning will be displayed, and the complex structure extracted from the structure file defined with the -cs option will be used. Note that this can lead to inconsistencies, for example: if the file defined in the -cs option is in GRO format, it will not have the string IDs. You can generate a structure for this variable as follows: generate a copy of the _GMXMMPBSA_COM.pdb file Open it with your preferred editor (we recommend one with column editing capabilities, such as Kate, Geany, or Sublime Text) Check the chains ID, if they do not exist add them Do not change the numbering of amino acids Save the document as _GMXMMPBSA_COM_FIXED.pdb In the _GMXMMPBSA_info file add the following line FILES.complex_fixed = '_GMXMMPBSA_COM_FIXED.pdb' save the document Removing entropy_temp variable After defining the temperature variable, you can remove the entropy_temp variable. This avoids getting the related warning. As we describe in the &general namelist variables section in the input file, these three variables are optional since they can be defined or modified in the gmx_MMPBSA_ana start dialog. However, modifying a set of systems can be cumbersome. We recommend defining them in the input file Example &general sys_name=\"Protein-Ligand\", temperature=310 exp_ki=10 / Note exp_ki Only needed when performing correlation analysis","title":"Results and info file"},{"location":"getting-started/","text":"Help needed for gmx_MMPBSA! To the content creators out there... \u00b6 gmx_MMPBSA is a new tool based on AMBER's MMPBSA.py aiming to perform end-state free energy calculations with GROMACS files. It works with all GROMACS versions along with AmberTools >=20 and brings improvements in compatibility, versatility, analyses, and parallelization compared to existing programs (see here for a detailed comparison) Cite gmx_MMPBSA gmx_MMPBSA official paper has been published on Journal of Chemical Theory and Computation and can be accessed here . If you use gmx_MMPBSA , please cite it as follows: Vald\u00e9s-Tresanco, M.S., Vald\u00e9s-Tresanco, M.E., Valiente, P.A. and Moreno E. gmx_MMPBSA: A New Tool to Perform End-State Free Energy Calculations with GROMACS . Journal of Chemical Theory and Computation, 2021 17 (10), 6281-6291. https://pubs.acs.org/doi/10.1021/acs.jctc.1c00645 . Download | *.bib | *.ris Please, also consider citing MMPBSA.py's paper: Bill R. Miller, T. Dwight McGee, Jason M. Swails, Nadine Homeyer, Holger Gohlke, and Adrian E. Roitberg. MMPBSA.py: An Efficient Program for End-State Free Energy Calculations . Journal of Chemical Theory and Computation, 2012 8 (9), 3314-3321. https://pubs.acs.org/doi/10.1021/ct300418h . Download | *.bib | *.ris | *.xml Please, visit Cite gmx_MMPBSA page for more information on how to cite gmx_MMPBSA and the programs/methods implemented in it. Installation \u00b6 Ready to use gmx_MMPBSA \ud83d\ude00? Check the installation page What can be done with gmx_MMPBSA? \u00b6 Multiple calculations can be performed with gmx_MMPBSA such as: Binding free energy calculations with PB , GB and/or 3D-RISM models Alanine scanning Binding free energy decomposition Entropy corrections ( IE , C2 , NMODE ) Stability QM/MMGBSA There is always more... You can check gmx_MMPBSA in a nutshell page for a more detailed overview of the types of calculations supported in gmx_MMPBSA. Also check our example page to see a detailed list of all the examples available In the current version, gmx_MMPBSA supports a number of different systems including but not limited to: Protein-protein Protein-ligand Protein-DNA Metalloprotein-ligand Protein-glycan Membrane proteins Multicomponent systems ( e.g. , Protein-DNA-RNA-Ions-Ligand ) Support for Amber, OPLS and CHARMM force fields In the current version, gmx_MMPBSA supports Amber, OPLS and CHARMM force fields. Any system built for GROMACS with either pdb2gmx or CHARMM-GUI is supported in gmx_MMPBSA. Likewise, any system built for NAMD and potentially any other software that uses *.psf - *.dcd files can be processed in gmx_MMPBSA \ud83d\ude00. Check our example page to see a detailed list of all the examples available. The following video shows how a typical binding free energy calculation with GB model and Interaction entropy method is performed in gmx_MMPBSA. gmx_MMPBSA a quick overview \u00b6 gmx_MMPBSA is a python module that contains 3 applications: gmx_MMPBSA is the fundamental application and carries out the calculations mentioned above gmx_MMPBSA_ana provides an intuitive way to analyze the data from gmx_MMPBSA calculations and save high-quality pictures gmx_MMPBSA_test is a tool designed to test if the installation was successful by running one or more available examples in gmx_MMPBSA. Easy to run gmx_MMPBSA can run in parallel and requires just few things in order to perform any kind of calculation. That is: an input parameters file ( *.in , contains all the specifications regarding the type of calculation that is going to be performed) a MD Structure+mass(db) file ( *.tpr , *.pdb ) an index file ( *.ndx ) receptor and ligand groups (group numbers in the index file) a trajectory file ( *.xtc , *.pdb , *.trr ) In certain occasions, defining a topology file ( *.top ) may be required. Once the calculation is done, you can analyze the results in gmx_MMPBSA_ana You can check How gmx_MMPBSA works page to get more details. Also check our example page to see how gmx_MMPBSA works with real examples If you prefer a more general overview of the gmx_MMPBSA suite, check this amazing video by Dr. Hymavathi Veeravarapu. Need help? \u00b6 Help section contains the most frequently asked questions and errors. Also, look at our Google group or the issues section to find out about specific cases and others. If you still have doubts or cannot solve the problem, please consider opening an issue or posting in our Google group Follow gmx_MMPBSA \u00b6 Visit Pypi Stats or PePy to see how gmx_MMPBSA is doing. Collaboration \u00b6 gmx_MMPBSA is rapidly becoming one of the main programs to perform end-point free energy calculations out there (~29k downloads so far). We are currently focused on optimizing the program, supporting new types of calculations, force fields, etc. However, the video tutorials are not that great. That being said, and here is where we need help , we will appreciate any collaboration in making video tutorials for the documentation. The video tutorial will be included as a link to YouTube in gmx_MMPBSA documentation with full acknowledgment of the person who created the video tutorial. It will be also acknowledged as a contributor of gmx_MMPBSA... \ud83d\ude03 Feel free to contact us through our google group ( https://groups.google.com/g/gmx_mmpbsa ) for more details... Acknowledgments \u00b6 First of all, to Amber and GROMACS developers. Without their incredible and hard work, gmx_MMPBSA would not exist. Jason Swails (Amber developer and ParmEd principal developer) for his continuous support on ParmEd issues. Dr. Hymavathi Veeravarapu for helping with the introductory video for gmx_MMPBSA To the Open Source license of the JetBrains programs. To the Sourcery team for supporting us with the Pro version . To all researchers that help improving gmx_MMPBSA with comments, feedback, and bug reports.","title":"Getting started"},{"location":"getting-started/#help-needed-for-gmx_mmpbsa-to-the-content-creators-out-there","text":"gmx_MMPBSA is a new tool based on AMBER's MMPBSA.py aiming to perform end-state free energy calculations with GROMACS files. It works with all GROMACS versions along with AmberTools >=20 and brings improvements in compatibility, versatility, analyses, and parallelization compared to existing programs (see here for a detailed comparison) Cite gmx_MMPBSA gmx_MMPBSA official paper has been published on Journal of Chemical Theory and Computation and can be accessed here . If you use gmx_MMPBSA , please cite it as follows: Vald\u00e9s-Tresanco, M.S., Vald\u00e9s-Tresanco, M.E., Valiente, P.A. and Moreno E. gmx_MMPBSA: A New Tool to Perform End-State Free Energy Calculations with GROMACS . Journal of Chemical Theory and Computation, 2021 17 (10), 6281-6291. https://pubs.acs.org/doi/10.1021/acs.jctc.1c00645 . Download | *.bib | *.ris Please, also consider citing MMPBSA.py's paper: Bill R. Miller, T. Dwight McGee, Jason M. Swails, Nadine Homeyer, Holger Gohlke, and Adrian E. Roitberg. MMPBSA.py: An Efficient Program for End-State Free Energy Calculations . Journal of Chemical Theory and Computation, 2012 8 (9), 3314-3321. https://pubs.acs.org/doi/10.1021/ct300418h . Download | *.bib | *.ris | *.xml Please, visit Cite gmx_MMPBSA page for more information on how to cite gmx_MMPBSA and the programs/methods implemented in it.","title":"Help needed for gmx_MMPBSA! To the content creators out there..."},{"location":"getting-started/#installation","text":"Ready to use gmx_MMPBSA \ud83d\ude00? Check the installation page","title":"Installation"},{"location":"getting-started/#what-can-be-done-with-gmx_mmpbsa","text":"Multiple calculations can be performed with gmx_MMPBSA such as: Binding free energy calculations with PB , GB and/or 3D-RISM models Alanine scanning Binding free energy decomposition Entropy corrections ( IE , C2 , NMODE ) Stability QM/MMGBSA There is always more... You can check gmx_MMPBSA in a nutshell page for a more detailed overview of the types of calculations supported in gmx_MMPBSA. Also check our example page to see a detailed list of all the examples available In the current version, gmx_MMPBSA supports a number of different systems including but not limited to: Protein-protein Protein-ligand Protein-DNA Metalloprotein-ligand Protein-glycan Membrane proteins Multicomponent systems ( e.g. , Protein-DNA-RNA-Ions-Ligand ) Support for Amber, OPLS and CHARMM force fields In the current version, gmx_MMPBSA supports Amber, OPLS and CHARMM force fields. Any system built for GROMACS with either pdb2gmx or CHARMM-GUI is supported in gmx_MMPBSA. Likewise, any system built for NAMD and potentially any other software that uses *.psf - *.dcd files can be processed in gmx_MMPBSA \ud83d\ude00. Check our example page to see a detailed list of all the examples available. The following video shows how a typical binding free energy calculation with GB model and Interaction entropy method is performed in gmx_MMPBSA.","title":"What can be done with gmx_MMPBSA?"},{"location":"getting-started/#gmx_mmpbsa-a-quick-overview","text":"gmx_MMPBSA is a python module that contains 3 applications: gmx_MMPBSA is the fundamental application and carries out the calculations mentioned above gmx_MMPBSA_ana provides an intuitive way to analyze the data from gmx_MMPBSA calculations and save high-quality pictures gmx_MMPBSA_test is a tool designed to test if the installation was successful by running one or more available examples in gmx_MMPBSA. Easy to run gmx_MMPBSA can run in parallel and requires just few things in order to perform any kind of calculation. That is: an input parameters file ( *.in , contains all the specifications regarding the type of calculation that is going to be performed) a MD Structure+mass(db) file ( *.tpr , *.pdb ) an index file ( *.ndx ) receptor and ligand groups (group numbers in the index file) a trajectory file ( *.xtc , *.pdb , *.trr ) In certain occasions, defining a topology file ( *.top ) may be required. Once the calculation is done, you can analyze the results in gmx_MMPBSA_ana You can check How gmx_MMPBSA works page to get more details. Also check our example page to see how gmx_MMPBSA works with real examples If you prefer a more general overview of the gmx_MMPBSA suite, check this amazing video by Dr. Hymavathi Veeravarapu.","title":"gmx_MMPBSA a quick overview"},{"location":"getting-started/#need-help","text":"Help section contains the most frequently asked questions and errors. Also, look at our Google group or the issues section to find out about specific cases and others. If you still have doubts or cannot solve the problem, please consider opening an issue or posting in our Google group","title":"Need help?"},{"location":"getting-started/#follow-gmx_mmpbsa","text":"Visit Pypi Stats or PePy to see how gmx_MMPBSA is doing.","title":"Follow gmx_MMPBSA"},{"location":"getting-started/#collaboration","text":"gmx_MMPBSA is rapidly becoming one of the main programs to perform end-point free energy calculations out there (~29k downloads so far). We are currently focused on optimizing the program, supporting new types of calculations, force fields, etc. However, the video tutorials are not that great. That being said, and here is where we need help , we will appreciate any collaboration in making video tutorials for the documentation. The video tutorial will be included as a link to YouTube in gmx_MMPBSA documentation with full acknowledgment of the person who created the video tutorial. It will be also acknowledged as a contributor of gmx_MMPBSA... \ud83d\ude03 Feel free to contact us through our google group ( https://groups.google.com/g/gmx_mmpbsa ) for more details...","title":"Collaboration"},{"location":"getting-started/#acknowledgments","text":"First of all, to Amber and GROMACS developers. Without their incredible and hard work, gmx_MMPBSA would not exist. Jason Swails (Amber developer and ParmEd principal developer) for his continuous support on ParmEd issues. Dr. Hymavathi Veeravarapu for helping with the introductory video for gmx_MMPBSA To the Open Source license of the JetBrains programs. To the Sourcery team for supporting us with the Pro version . To all researchers that help improving gmx_MMPBSA with comments, feedback, and bug reports.","title":"Acknowledgments"},{"location":"gmx_MMPBSA_ana_command-line/","text":"gmx_MMPBSA_ana command-line \u00b6 $ gmx_MMPBSA_ana -h usage: run_ana.py [-h] [-v] [-f [FILES [FILES ...]]] [-r] This program is part of gmx_MMPBSA and will show a workspace to analyze the gmx_MMPBSA results optional arguments: -h, --help show this help message and exit -v, --version show program's version number and exit Info file: -f [FILES [FILES ...]], --files [FILES [FILES ...]] gmx_MMPBSA info files or container folder or list of them (default: [.] Current working dir) -r, --recursive Search recursively in this folder at depth = 1 (default: False) gmx_MMPBSA is an effort to implement the GB/PB and others calculations in GROMACS. Based on MMPBSA.py (version 16.0) and AmberTools20","title":"Command-line"},{"location":"gmx_MMPBSA_ana_command-line/#gmx_mmpbsa_ana-command-line","text":"$ gmx_MMPBSA_ana -h usage: run_ana.py [-h] [-v] [-f [FILES [FILES ...]]] [-r] This program is part of gmx_MMPBSA and will show a workspace to analyze the gmx_MMPBSA results optional arguments: -h, --help show this help message and exit -v, --version show program's version number and exit Info file: -f [FILES [FILES ...]], --files [FILES [FILES ...]] gmx_MMPBSA info files or container folder or list of them (default: [.] Current working dir) -r, --recursive Search recursively in this folder at depth = 1 (default: False) gmx_MMPBSA is an effort to implement the GB/PB and others calculations in GROMACS. Based on MMPBSA.py (version 16.0) and AmberTools20","title":"gmx_MMPBSA_ana command-line"},{"location":"gmx_MMPBSA_ana_running/","text":"Running gmx_MMPBSA_ana \u00b6 In order to analyze multiple systems in the same section and implement the correlation between them, we improved the file input to gmx_MMPBSA_ana. Currently, gmx_MMPBSA_ana supports either several info files, a folder that contains the info file, or a list of folders containing info files. Make sure to use the following structure when working with several folders: Valid folder structure Valid folders + files structure Wrong folder structure Here all folders (5 systems) will be processed by gmx_MMPBSA_ana Defined folder \u251c\u2500\u2500 System-1 \u2502 \u2514\u2500\u2500 _GMXMMPBSA_info \u251c\u2500\u2500 System-2 \u2502 \u2514\u2500\u2500 _GMXMMPBSA_info \u251c\u2500\u2500 System-3 \u2502 \u2514\u2500\u2500 _GMXMMPBSA_info \u251c\u2500\u2500 System-4 \u2502 \u2514\u2500\u2500 _GMXMMPBSA_info \u2514\u2500\u2500 System-5 \u2514\u2500\u2500 _GMXMMPBSA_info Here all systems (4) will be processed by gmx_MMPBSA_ana System-1 \u2514\u2500\u2500_GMXMMPBSA_info Folder-1 \u251c\u2500\u2500 System-2.1 \u2502 \u2514\u2500\u2500 _GMXMMPBSA_info \u2514\u2500\u2500 System-2.2 \u2514\u2500\u2500 _GMXMMPBSA_info System-3 (_GMXMMPBSA_info) The command-line for this is: gmx_MMPBSA_ana -f /path/to/System-1 /path/to/System-3/_GMXMMPBSA_info /path/to/Folder-1 -r This estructure only work if recursive option was defined. See the examples below Note that: System-1 is defined as folder that contain a _GMXMMPBSA_info Folder-1 contain two folder (Systems), each containing a _GMXMMPBSA_info System-3 is defined as a _GMXMMPBSA_info file Here only 4 (systems) folders will be processed by gmx_MMPBSA_ana. The systems in the Internal folder will be ignored Defined folder \u251c\u2500\u2500 System-1 \u2502 \u2514\u2500\u2500 _GMXMMPBSA_info \u251c\u2500\u2500 System-2 \u2502 \u2514\u2500\u2500 _GMXMMPBSA_info \u251c\u2500\u2500 Internal folder \u2502 \u251c\u2500X\u2500 System-3.1 \u2502 \u2502 \u2514\u2500\u2500 _GMXMMPBSA_info \u2502 \u2514\u2500X\u2500 System-3.2 \u2502 \u2514\u2500\u2500 _GMXMMPBSA_info \u251c\u2500\u2500 System-4 \u2502 \u2514\u2500\u2500 _GMXMMPBSA_info \u2514\u2500\u2500 System-5 \u2514\u2500\u2500 _GMXMMPBSA_info Examples One file One folder Files + Folders Recursive option Passing a _GMXMMPBSA_info file as input: Current directory gmx_MMPBSA_ana -f _GMXMMPBSA_info other location Version: 1.4.0 gmx_MMPBSA_ana -f /path/to/_GMXMMPBSA_info Version: 1.4.0 Passing a folder as input: Current directory gmx_MMPBSA_ana -f . other location gmx_MMPBSA_ana -f /path/to/folder Remember This folder must contain a valid _GMXMMPBSA_info file Version: 1.4.0 gmx_MMPBSA_ana -f /path/to/folder-1 /path/to/_GMXMMPBSA_info-1 /path/to/folder-2 Remember All defined folders must contain a valid _GMXMMPBSA_info file All _GMXMMPBSA_info files defined must be valid Version: 1.4.0 Passing a folder as input with recursive option: Current directory gmx_MMPBSA_ana -f . -r other location gmx_MMPBSA_ana -f /path/to/folder --recursive combine multiple folders gmx_MMPBSA_ana -f /path/to/folder-1 /path/to/folder-2 /path/to/folder-3 -r Folders can contain one or more systems combine multiple folders and files gmx_MMPBSA_ana -f /path/to/folder-1 /path/to/_GMXMMPBSA_info-1 /path/to/folder-3 -r Folders can contain one or more systems Note that if you remove the option -r, each folder must contain a valid _GMXMMPBSA_info file.","title":"Running gmx_MMPBSA_ana"},{"location":"gmx_MMPBSA_ana_running/#running-gmx_mmpbsa_ana","text":"In order to analyze multiple systems in the same section and implement the correlation between them, we improved the file input to gmx_MMPBSA_ana. Currently, gmx_MMPBSA_ana supports either several info files, a folder that contains the info file, or a list of folders containing info files. Make sure to use the following structure when working with several folders: Valid folder structure Valid folders + files structure Wrong folder structure Here all folders (5 systems) will be processed by gmx_MMPBSA_ana Defined folder \u251c\u2500\u2500 System-1 \u2502 \u2514\u2500\u2500 _GMXMMPBSA_info \u251c\u2500\u2500 System-2 \u2502 \u2514\u2500\u2500 _GMXMMPBSA_info \u251c\u2500\u2500 System-3 \u2502 \u2514\u2500\u2500 _GMXMMPBSA_info \u251c\u2500\u2500 System-4 \u2502 \u2514\u2500\u2500 _GMXMMPBSA_info \u2514\u2500\u2500 System-5 \u2514\u2500\u2500 _GMXMMPBSA_info Here all systems (4) will be processed by gmx_MMPBSA_ana System-1 \u2514\u2500\u2500_GMXMMPBSA_info Folder-1 \u251c\u2500\u2500 System-2.1 \u2502 \u2514\u2500\u2500 _GMXMMPBSA_info \u2514\u2500\u2500 System-2.2 \u2514\u2500\u2500 _GMXMMPBSA_info System-3 (_GMXMMPBSA_info) The command-line for this is: gmx_MMPBSA_ana -f /path/to/System-1 /path/to/System-3/_GMXMMPBSA_info /path/to/Folder-1 -r This estructure only work if recursive option was defined. See the examples below Note that: System-1 is defined as folder that contain a _GMXMMPBSA_info Folder-1 contain two folder (Systems), each containing a _GMXMMPBSA_info System-3 is defined as a _GMXMMPBSA_info file Here only 4 (systems) folders will be processed by gmx_MMPBSA_ana. The systems in the Internal folder will be ignored Defined folder \u251c\u2500\u2500 System-1 \u2502 \u2514\u2500\u2500 _GMXMMPBSA_info \u251c\u2500\u2500 System-2 \u2502 \u2514\u2500\u2500 _GMXMMPBSA_info \u251c\u2500\u2500 Internal folder \u2502 \u251c\u2500X\u2500 System-3.1 \u2502 \u2502 \u2514\u2500\u2500 _GMXMMPBSA_info \u2502 \u2514\u2500X\u2500 System-3.2 \u2502 \u2514\u2500\u2500 _GMXMMPBSA_info \u251c\u2500\u2500 System-4 \u2502 \u2514\u2500\u2500 _GMXMMPBSA_info \u2514\u2500\u2500 System-5 \u2514\u2500\u2500 _GMXMMPBSA_info Examples One file One folder Files + Folders Recursive option Passing a _GMXMMPBSA_info file as input: Current directory gmx_MMPBSA_ana -f _GMXMMPBSA_info other location Version: 1.4.0 gmx_MMPBSA_ana -f /path/to/_GMXMMPBSA_info Version: 1.4.0 Passing a folder as input: Current directory gmx_MMPBSA_ana -f . other location gmx_MMPBSA_ana -f /path/to/folder Remember This folder must contain a valid _GMXMMPBSA_info file Version: 1.4.0 gmx_MMPBSA_ana -f /path/to/folder-1 /path/to/_GMXMMPBSA_info-1 /path/to/folder-2 Remember All defined folders must contain a valid _GMXMMPBSA_info file All _GMXMMPBSA_info files defined must be valid Version: 1.4.0 Passing a folder as input with recursive option: Current directory gmx_MMPBSA_ana -f . -r other location gmx_MMPBSA_ana -f /path/to/folder --recursive combine multiple folders gmx_MMPBSA_ana -f /path/to/folder-1 /path/to/folder-2 /path/to/folder-3 -r Folders can contain one or more systems combine multiple folders and files gmx_MMPBSA_ana -f /path/to/folder-1 /path/to/_GMXMMPBSA_info-1 /path/to/folder-3 -r Folders can contain one or more systems Note that if you remove the option -r, each folder must contain a valid _GMXMMPBSA_info file.","title":"Running gmx_MMPBSA_ana"},{"location":"gmx_MMPBSA_command-line/","text":"gmx_MMPBSA command-line \u00b6 // All flags available in `gmx_MMPBSA` are shown below: $ gmx_MMPBSA -h usage: gmx_MMPBSA [-h] [-v] [--input-file-help] [--create_input [{gb,pb,rism,ala,decomp,nmode,all}] [-O] [-prefix <file prefix>] [-i FILE] [-xvvfile XVVFILE] [-o FILE] [-do FILE] [-eo FILE] [-deo FILE] [-nogui] [-s] [-cs <Structure File>] [-ci <Index File>] [-cg index index] [-ct [TRJ [TRJ ...]]] [-cp <Topology>] [-cr <PDB File>] [-rs <Structure File>] [-ri <Index File>] [-rg index] [-rt [TRJ [TRJ ...]]] [-rp <Topology>] [-lm <Structure File>] [-ls <Structure File>] [-li <Index File>] [-lg index] [-lt [TRJ [TRJ ...]]] [-lp <Topology>] [--rewrite-output] [--clean] gmx_MMPBSA is a new tool based on AMBER's MMPBSA.py aiming to perform end-state free energy calculations with GROMACS files. This program is an adaptation of Amber's MMPBSA.py and essentially works as such. gmx_MMPBSA works with any GROMACS version. This program will calculate binding free energies using end-state free energy methods on an ensemble of snapshots using a variety of implicit solvent models. This is the core of gmx_MMPBSA and it will do all the calculations optional arguments: -h, --help show this help message and exit -v, --version show program's version number and exit --input-file-help Print all available options in the input file. (default: False) --create_input Create an new input file with selected calculation type. (default: None) [{gb,pb,rism,ala,decomp,nmode,all}] Miscellaneous Options: -O, --overwrite Allow output files to be overwritten (default: False) -prefix <file prefix> Prefix for intermediate files. (default: _GMXMMPBSA_) Input and Output Files: These options specify the input files and optional output files. -i FILE MM/PBSA input file. (default: None) -xvvfile XVVFILE XVV file for 3D-RISM. (default: $AMBERHOME/AmberTools/test/rism1d/tip3p-kh/tip3p.xvv.save) -o FILE Output file with MM/PBSA statistics. (default: FINAL_RESULTS_MMPBSA.dat) -do FILE Output file for decomposition statistics summary. (default: FINAL_DECOMP_MMPBSA.dat) -eo FILE CSV-format output of all energy terms for every frame in every calculation. File name forced to end in [.csv]. This file is only written when specified on the command-line. (default: None) -deo FILE CSV-format output of all energy terms for each printed residue in decomposition calculations. File name forced to end in [.csv]. This file is only written when specified on the command-line. (default: None) -nogui No open gmx_MMPBSA_ana after all calculations finished (default: True) -s, --stability Perform stability calculation. Only the complex parameters are required. Only If the ligand is non-Protein (small molecule) type and you not define a complex topology, then ligand *.mol2 file is required. In any other case receptor and ligand parameters will be ignored. See description bellow (default: False) Complex: Complex files and info that are needed to perform the calculation. If the receptor and/or the ligand info is not defined, we generate them from that of the complex. -cs <Structure File> Structure file of the complex. If it is Protein-Ligand (small molecule) complex and -cp is not defined, make sure that you define -lm option. See -lm description below Allowed formats: *.tpr (recommended), *.pdb, *.gro (default: None) -ci <Index File> Index file of the bound complex. (default: None) -cg index index Groups of receptor and ligand in complex index file. The notation is as follows: \"-cg <Receptor group> <Ligand group>\", ie. -cg 1 13 (default: None) -ct [TRJ [TRJ ...]] Complex trajectories. Make sure the trajectory is fitted and pbc have been removed. Allowed formats: *.xtc (recommended), *.trr, *.pdb (specify as many as you'd like). (default: None) -cp <Topology> The complex Topology file. When it is defined -lm option is not needed (default: None) -cr <PDB File> Complex Reference Structure file. This option is optional but recommended (Use the PDB file used to generate the topology in GROMACS). If not defined, the chains ID assignment (if the structure used in -cs does not have chain IDs) will be done automatically according to the structure (can generate wrong mapping). (default: None) Receptor: Receptor files and info that are needed to perform the calculation. If the receptor info is not defined, we generate it from that of the complex. -rs <Structure File> Structure file of the unbound receptor for multiple trajectory approach. Allowed formats: *.tpr (recommended), *.pdb (default: None) -ri <Index File> Index file of the unbound receptor. (default: None) -rg index Receptor group in receptor index file. Notation: \"-lg <Receptor group>\", e.g. -rg 1 (default: None) -rt [TRJ [TRJ ...]] Input trajectories of the unbound receptor for multiple trajectory approach. Allowed formats: *.xtc (recommended), *.trr, *.pdb (specify as many as you'd like). (default: None) -rp <Topology> Topology file of the receptor. (default: None) Ligand: Ligand files and info that are needed to perform the calculation. If the ligand are not defined, we generate it from that of the complex. -lm <Structure File> A *.mol2 file of the unbound ligand used to parametrize ligand for GROMACS using Antechamber. Must be defined if Protein-Ligand (small molecule) complex was define and -cp or -lp option are not defined. No needed for Proteins, DNA, RNA, Ions, Glycans or any ligand parametrized in the Amber force fields. Must be the Antechamber output *.mol2. (default: None) -ls <Structure File> Structure file of the unbound ligand. If ligand is a small molecule and -lp is not defined, make sure that you define above -lm option. Allowed formats: *.tpr (recommended), *.pdb (default: None) -li <Index File> Index file of the unbound ligand. Only if tpr file was define in -ls. (default: None) -lg index Ligand group in ligand index file. Notation: \"-lg <Ligand group>\", e.g. -lg 13 (default: None) -lt [TRJ [TRJ ...]] Input trajectories of the unbound ligand for multiple trajectory approach. Allowed formats: *.xtc (recommended), *.trr, *.pdb (specify as many as you'd like). (default: None) -lp <Topology> Topology file of the ligand. (default: None) Miscellaneous Actions: -rewrite-output Do not re-run any calculations, just parse the output files from the previous calculation and rewrite the output files. (default: False) --clean Clean temporary files and quit. (default: False) gmx_MMPBSA is an effort to implement the GB/PB and others calculations in GROMACS. Based on MMPBSA.py (version 16.0) and AmberTools20","title":"Command-line"},{"location":"gmx_MMPBSA_command-line/#gmx_mmpbsa-command-line","text":"// All flags available in `gmx_MMPBSA` are shown below: $ gmx_MMPBSA -h usage: gmx_MMPBSA [-h] [-v] [--input-file-help] [--create_input [{gb,pb,rism,ala,decomp,nmode,all}] [-O] [-prefix <file prefix>] [-i FILE] [-xvvfile XVVFILE] [-o FILE] [-do FILE] [-eo FILE] [-deo FILE] [-nogui] [-s] [-cs <Structure File>] [-ci <Index File>] [-cg index index] [-ct [TRJ [TRJ ...]]] [-cp <Topology>] [-cr <PDB File>] [-rs <Structure File>] [-ri <Index File>] [-rg index] [-rt [TRJ [TRJ ...]]] [-rp <Topology>] [-lm <Structure File>] [-ls <Structure File>] [-li <Index File>] [-lg index] [-lt [TRJ [TRJ ...]]] [-lp <Topology>] [--rewrite-output] [--clean] gmx_MMPBSA is a new tool based on AMBER's MMPBSA.py aiming to perform end-state free energy calculations with GROMACS files. This program is an adaptation of Amber's MMPBSA.py and essentially works as such. gmx_MMPBSA works with any GROMACS version. This program will calculate binding free energies using end-state free energy methods on an ensemble of snapshots using a variety of implicit solvent models. This is the core of gmx_MMPBSA and it will do all the calculations optional arguments: -h, --help show this help message and exit -v, --version show program's version number and exit --input-file-help Print all available options in the input file. (default: False) --create_input Create an new input file with selected calculation type. (default: None) [{gb,pb,rism,ala,decomp,nmode,all}] Miscellaneous Options: -O, --overwrite Allow output files to be overwritten (default: False) -prefix <file prefix> Prefix for intermediate files. (default: _GMXMMPBSA_) Input and Output Files: These options specify the input files and optional output files. -i FILE MM/PBSA input file. (default: None) -xvvfile XVVFILE XVV file for 3D-RISM. (default: $AMBERHOME/AmberTools/test/rism1d/tip3p-kh/tip3p.xvv.save) -o FILE Output file with MM/PBSA statistics. (default: FINAL_RESULTS_MMPBSA.dat) -do FILE Output file for decomposition statistics summary. (default: FINAL_DECOMP_MMPBSA.dat) -eo FILE CSV-format output of all energy terms for every frame in every calculation. File name forced to end in [.csv]. This file is only written when specified on the command-line. (default: None) -deo FILE CSV-format output of all energy terms for each printed residue in decomposition calculations. File name forced to end in [.csv]. This file is only written when specified on the command-line. (default: None) -nogui No open gmx_MMPBSA_ana after all calculations finished (default: True) -s, --stability Perform stability calculation. Only the complex parameters are required. Only If the ligand is non-Protein (small molecule) type and you not define a complex topology, then ligand *.mol2 file is required. In any other case receptor and ligand parameters will be ignored. See description bellow (default: False) Complex: Complex files and info that are needed to perform the calculation. If the receptor and/or the ligand info is not defined, we generate them from that of the complex. -cs <Structure File> Structure file of the complex. If it is Protein-Ligand (small molecule) complex and -cp is not defined, make sure that you define -lm option. See -lm description below Allowed formats: *.tpr (recommended), *.pdb, *.gro (default: None) -ci <Index File> Index file of the bound complex. (default: None) -cg index index Groups of receptor and ligand in complex index file. The notation is as follows: \"-cg <Receptor group> <Ligand group>\", ie. -cg 1 13 (default: None) -ct [TRJ [TRJ ...]] Complex trajectories. Make sure the trajectory is fitted and pbc have been removed. Allowed formats: *.xtc (recommended), *.trr, *.pdb (specify as many as you'd like). (default: None) -cp <Topology> The complex Topology file. When it is defined -lm option is not needed (default: None) -cr <PDB File> Complex Reference Structure file. This option is optional but recommended (Use the PDB file used to generate the topology in GROMACS). If not defined, the chains ID assignment (if the structure used in -cs does not have chain IDs) will be done automatically according to the structure (can generate wrong mapping). (default: None) Receptor: Receptor files and info that are needed to perform the calculation. If the receptor info is not defined, we generate it from that of the complex. -rs <Structure File> Structure file of the unbound receptor for multiple trajectory approach. Allowed formats: *.tpr (recommended), *.pdb (default: None) -ri <Index File> Index file of the unbound receptor. (default: None) -rg index Receptor group in receptor index file. Notation: \"-lg <Receptor group>\", e.g. -rg 1 (default: None) -rt [TRJ [TRJ ...]] Input trajectories of the unbound receptor for multiple trajectory approach. Allowed formats: *.xtc (recommended), *.trr, *.pdb (specify as many as you'd like). (default: None) -rp <Topology> Topology file of the receptor. (default: None) Ligand: Ligand files and info that are needed to perform the calculation. If the ligand are not defined, we generate it from that of the complex. -lm <Structure File> A *.mol2 file of the unbound ligand used to parametrize ligand for GROMACS using Antechamber. Must be defined if Protein-Ligand (small molecule) complex was define and -cp or -lp option are not defined. No needed for Proteins, DNA, RNA, Ions, Glycans or any ligand parametrized in the Amber force fields. Must be the Antechamber output *.mol2. (default: None) -ls <Structure File> Structure file of the unbound ligand. If ligand is a small molecule and -lp is not defined, make sure that you define above -lm option. Allowed formats: *.tpr (recommended), *.pdb (default: None) -li <Index File> Index file of the unbound ligand. Only if tpr file was define in -ls. (default: None) -lg index Ligand group in ligand index file. Notation: \"-lg <Ligand group>\", e.g. -lg 13 (default: None) -lt [TRJ [TRJ ...]] Input trajectories of the unbound ligand for multiple trajectory approach. Allowed formats: *.xtc (recommended), *.trr, *.pdb (specify as many as you'd like). (default: None) -lp <Topology> Topology file of the ligand. (default: None) Miscellaneous Actions: -rewrite-output Do not re-run any calculations, just parse the output files from the previous calculation and rewrite the output files. (default: False) --clean Clean temporary files and quit. (default: False) gmx_MMPBSA is an effort to implement the GB/PB and others calculations in GROMACS. Based on MMPBSA.py (version 16.0) and AmberTools20","title":"gmx_MMPBSA command-line"},{"location":"gmx_MMPBSA_running/","text":"Before running gmx_MMPBSA \u00b6 gmx_MMPBSA requires minimum processing on the input structure and trajectory files. Before running gmx_MMPBSA, please make sure: The structure defined in -cs , -rs , or -ls options is consistent Visualize the structure contained in the structure input file given in the -cs , -rs , or -ls options and make sure it is consistent (as shown in Fig 1, right panel). On the other hand, if the structure is \"broken\" (as shown in Fig 1, left panel) this could generate inconsistent results. Generate the structure from tpr file: gmx editconf -f md.tpr -o md.pdb Figure 1. Vizualization of two different input structures files. Left: \"Broken\" structure; Right: Centered structure The trajectory defined in -ct , -rt , or -lt doesn't contain PBC Visualize the trajectory given in the -ct , -rt , or -lt options and make sure the PBC has been removed (as shown in Fig 2, right panel). On the other hand, if the trajectory has not been fitted (as shown in Fig 2, left panel) this could generate inconsistent results. Steps: Generate a group that contains both molecules gmx make_ndx -n index.ndx >1 | 12 >q Assuming 1 is the receptor and 12 is the ligand. This creates a new group (number 20 in this example) remove the PBC gmx trjconv -s md.tpr -f md.xtc -o md_noPBC.xtc -pbc mol -center -n -ur compact center: 20 (created group) output: 0 remove the rotation and translation with respect to the reference structure (optional) gmx trjconv -s md.tpr -f md_noPBC.xtc -o md_fit.xtc -n -fit rot+trans fit: 20 (created group) output: 0 Visualization Make sure that the trajectory is consistent (as shown in Fig 2, right panel) If the process is not succesful, consider using other options like -pbc nojump (as suggested here ) Figure 2. Vizualization of two different input trajectory files. Left: Trajectory with PBC; Right: Trajectory centered, fitted and with PBC removed. Running gmx_MMPBSA \u00b6 Tip Since version 1.4.0 we have fixed the gmx_MMPBSA inconsistencies when using MPI . We currently recommend the use of MPI since the computation time decreases considerably. Parallel (MPI) version Serial version gmx_MMPBSA as MMPBSA.py uses the MPI only to perform the calculations, the rest of the process ( i.e , Generation/conversion of Amber topologies, mutation, division of the trajectories, etc) occurs in a single thread (See Figure 3 for better reference). This means that it is not necessary to install any program (AmberTools or GROMACS) with MPI , which can be used in any circumstance, and the time required to process the data prior to the calculation depends on the system and will be the same for both versions ( Serial and MPI ). Note Note that gmx_MMPBSA processes, converts, or builds topologies from GROMACS files, so it takes slightly longer than MMPBSA.py at the same stage of the process. However, this is not really significant. Remember Make sure that you install the OpenMPI library sudo apt install openmpi-bin libopenmpi-dev openssh-client A usage example is shown below: Local HPC mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc #!/bin/sh #PBS -N nmode #PBS -o nmode.out #PBS -e nmode.err #PBS -m abe #PBS -M email@domain.edu #PBS -q brute #PBS -l nodes=1:surg:ppn=3 #PBS -l pmem=1450mb or > 5gb for nmode calculation cd $PBS_O_WORKDIR mpirun -np 3 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc > progress.log Danger Unfortunately, when running gmx_MMPBSA with MPI , GROMACS's gmx_mpi can't be used. This is probably because of gmx_mpi conflicts with mpirun. In any case, this is not a problem since gmx works correctly and gmx_mpi only parallels mdrun , the rest of the GROMACS tools work in a single thread. See this issue to see the output. Warning The nmode calculations require a considerable amount of RAM. Consider that the total amount of RAM will be: RAM total = RAM 1_frame * NUM of Threads If it consumes all the RAM of the system it can cause crashes, instability or system shutdown! Note At a certain level, running RISM in parallel may actually hurt performance, since previous solutions are used as an initial guess for the next frame, hastening convergence. Running in parallel loses this advantage. Also, due to the overhead involved in which each thread is required to load every topology file when calculating energies, parallel scaling will begin to fall off as the number of threads reaches the number of frames. This version is installed via pip as described above. AMBERHOME variable must be set, or it will quit with an error. An example command-line call is shown below: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc You can found test files on GitHub Figure 3 . MPI benchmark description from MMPBSA.py paper . MMPBSA.py scaling comparison for MM-PBSA and MM-GBSA calculations on 200 frames of a 5910-atom complex. Times shown are the times required for the calculation to finish. Note that MM-GBSA calculations are \u223c5 times faster than MM-PBSA calculations. All calculations were performed on NICS Keeneland (2 Intel Westmere 6-core CPUs per node, QDR infiniband interconnect)","title":"Running gmx_MMPBSA"},{"location":"gmx_MMPBSA_running/#before-running-gmx_mmpbsa","text":"gmx_MMPBSA requires minimum processing on the input structure and trajectory files. Before running gmx_MMPBSA, please make sure: The structure defined in -cs , -rs , or -ls options is consistent Visualize the structure contained in the structure input file given in the -cs , -rs , or -ls options and make sure it is consistent (as shown in Fig 1, right panel). On the other hand, if the structure is \"broken\" (as shown in Fig 1, left panel) this could generate inconsistent results. Generate the structure from tpr file: gmx editconf -f md.tpr -o md.pdb Figure 1. Vizualization of two different input structures files. Left: \"Broken\" structure; Right: Centered structure The trajectory defined in -ct , -rt , or -lt doesn't contain PBC Visualize the trajectory given in the -ct , -rt , or -lt options and make sure the PBC has been removed (as shown in Fig 2, right panel). On the other hand, if the trajectory has not been fitted (as shown in Fig 2, left panel) this could generate inconsistent results. Steps: Generate a group that contains both molecules gmx make_ndx -n index.ndx >1 | 12 >q Assuming 1 is the receptor and 12 is the ligand. This creates a new group (number 20 in this example) remove the PBC gmx trjconv -s md.tpr -f md.xtc -o md_noPBC.xtc -pbc mol -center -n -ur compact center: 20 (created group) output: 0 remove the rotation and translation with respect to the reference structure (optional) gmx trjconv -s md.tpr -f md_noPBC.xtc -o md_fit.xtc -n -fit rot+trans fit: 20 (created group) output: 0 Visualization Make sure that the trajectory is consistent (as shown in Fig 2, right panel) If the process is not succesful, consider using other options like -pbc nojump (as suggested here ) Figure 2. Vizualization of two different input trajectory files. Left: Trajectory with PBC; Right: Trajectory centered, fitted and with PBC removed.","title":"Before running gmx_MMPBSA"},{"location":"gmx_MMPBSA_running/#running-gmx_mmpbsa","text":"Tip Since version 1.4.0 we have fixed the gmx_MMPBSA inconsistencies when using MPI . We currently recommend the use of MPI since the computation time decreases considerably. Parallel (MPI) version Serial version gmx_MMPBSA as MMPBSA.py uses the MPI only to perform the calculations, the rest of the process ( i.e , Generation/conversion of Amber topologies, mutation, division of the trajectories, etc) occurs in a single thread (See Figure 3 for better reference). This means that it is not necessary to install any program (AmberTools or GROMACS) with MPI , which can be used in any circumstance, and the time required to process the data prior to the calculation depends on the system and will be the same for both versions ( Serial and MPI ). Note Note that gmx_MMPBSA processes, converts, or builds topologies from GROMACS files, so it takes slightly longer than MMPBSA.py at the same stage of the process. However, this is not really significant. Remember Make sure that you install the OpenMPI library sudo apt install openmpi-bin libopenmpi-dev openssh-client A usage example is shown below: Local HPC mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc #!/bin/sh #PBS -N nmode #PBS -o nmode.out #PBS -e nmode.err #PBS -m abe #PBS -M email@domain.edu #PBS -q brute #PBS -l nodes=1:surg:ppn=3 #PBS -l pmem=1450mb or > 5gb for nmode calculation cd $PBS_O_WORKDIR mpirun -np 3 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc > progress.log Danger Unfortunately, when running gmx_MMPBSA with MPI , GROMACS's gmx_mpi can't be used. This is probably because of gmx_mpi conflicts with mpirun. In any case, this is not a problem since gmx works correctly and gmx_mpi only parallels mdrun , the rest of the GROMACS tools work in a single thread. See this issue to see the output. Warning The nmode calculations require a considerable amount of RAM. Consider that the total amount of RAM will be: RAM total = RAM 1_frame * NUM of Threads If it consumes all the RAM of the system it can cause crashes, instability or system shutdown! Note At a certain level, running RISM in parallel may actually hurt performance, since previous solutions are used as an initial guess for the next frame, hastening convergence. Running in parallel loses this advantage. Also, due to the overhead involved in which each thread is required to load every topology file when calculating energies, parallel scaling will begin to fall off as the number of threads reaches the number of frames. This version is installed via pip as described above. AMBERHOME variable must be set, or it will quit with an error. An example command-line call is shown below: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc You can found test files on GitHub Figure 3 . MPI benchmark description from MMPBSA.py paper . MMPBSA.py scaling comparison for MM-PBSA and MM-GBSA calculations on 200 frames of a 5910-atom complex. Times shown are the times required for the calculation to finish. Note that MM-GBSA calculations are \u223c5 times faster than MM-PBSA calculations. All calculations were performed on NICS Keeneland (2 Intel Westmere 6-core CPUs per node, QDR infiniband interconnect)","title":"Running gmx_MMPBSA"},{"location":"howworks/","text":"How gmx_MMPBSA works \u00b6 gmx_MMPBSA is a new tool based on AMBER's MMPBSA.py aiming to perform end-state free energy calculations with GROMACS files. But, what does that mean? Basically, gmx_MMPBSA provides all the MMPBSA.py functionalities and more to GROMACS users. MMPBSA.py is an excellent and well-known tool to perform end-point binding free energy calculations in AMBER (January/2022 more than 1500 citations). On the other hand, there are tools like g_mmpbsa that are well known within the GROMACS community (January/2022 more than 1700 citations). Interestingly, MMPBSA.py is more robust and was published first, however, g_mmpbsa has higher number of citations. This is probably due to the fact that the GROMACS (Open source and free) community is large, while AMBER has the restriction of a paid license, or a small community with free academic license. The use of MMPBSA.py for GROMACS users requires enormous effort to successfully complete the process. In that regard, we have decided to make our experience in this process available to the community. We have not limited ourselves only to the extent of utility itself, but added additional value. We have designed a tool gmx_MMPBSA that allows to perform a number of calculations in an effortless way with a graphical tool gmx_MMPBSA_ana incorporated, which we believe has great potential for the analysis of the results obtained. We also have incorporated some functionalities that aren't present in MMPBSA.py and made others more accessible to the beginner user in Amber. gmx_MMPBSA general workflow \u00b6 gmx_MMPBSA functioning can be divided into 3 parts as shown in figure 1. In the first part, Preparation , the topologies and trajectories are generated, among other elements depending on the calculations, such as the mutants for the alanine/glycine scanning or the list of interacting residues during decomposition analysis. In the second part, Calculation , the binding free energies and/or entropies are estimated using the selected models. Finally, in the last step Analysis , the results can be analyzed by using the graphical user interface gmx_MMPBSA_ana . Figure 1 . gmx_MMPBSA general workflow Required input files \u00b6 Currently, gmx_MMPBSA supports two families of force fields: Amber and CHARMM. Although these force fileds are quite similar, the generation of topologies differs. When Amber force filed was used to prepare the system(s), the topologies compatible with AMBER package can be generated from either GROMACS topologies or structures. Meanwhile, when CHARMM force field is used, AMBER's topologies are generated from GROMACS topologies exclusively. (Table 1). Table 1: Required input files for every force field Force field Structure Index Trajectory Topology Reference Structure Small Molecule Mol2 AMBER tpr, pdb ndx xtc, trr, pdb Optional Optional Only if not top defined CHARMM tpr, pdb ndx xtc, trr, pdb Always Optional No Topology preparation \u00b6 In this section, we will go in detail about each file and what they are used for. GROMACS files MD Structure+mass(db) (*.tpr, *.pdb) This file is used to generate the structure in pdb format of the complex with editconf or trjconv . We recommend using the *.tpr (production *.tpr ) format. Index (*.ndx) This the file that contains the index of each element contained in the *.tpr file, organized as groups. This file is required for the definition of the groups corresponding to the receptor and the ligand. Trajectory (*.xtc, *.trr, *.pdb) Trajectory files. Topology (top) This file contains all the parameters corresponding to the force field selected during the system setup. When using a GROMACS topology, parmed is used for converting the topologies. This method can be useful when studying a complex systems with many elements or systems containing elements that have been parameterized independently and don't appear in standard force fields. If you use Amber force field, you can consider whether using the topology or not. However, when using CHARMM (any version) force field, the topology is always required. Reference Structure It corresponds to a file in *.pdb format that must contain a complete structure. That is, the user must make sure that this structure contains the same number of atoms and residues as the complex that he initially defined, the correct residue numbering, as well as its chain ID. This structure is optional, but we recommend using it since it should guarantee a smooth processing of the files in gmx_MMPBSA . Essentially, the objective is to be able to correctly assign the mentioned parameters since internally gmx_MMPBSA handles sensitive information, for example: when it extracts the receptor and the ligand from the complex structure, the mutation in the alanine scan, etc. Small molecule parameters (*.mol2) This file contains a ligand parameterization with antechamber that is not found in the selected force field (Amber family). It is only necessary to define it when studying a system that contains this type of ligand, and a topology has not been defined. This is used to build Amber topology from structure using tleap . Here are the steps that gmx_MMPBSA follows to generate the topologies: Specific steps for the topology are highlighted like this Generates a new index and registers the groups defined by the user Generates the pdb of the complex, receptor, and ligand Topologies are cleaned (remove water and ions) The structures or parameters for the receptor and the ligand are generated if it is an ST approximation. If Alanine scanning: the mutant of the complex, and the mutant receptor or ligand are generated If decomposition: interaction residues are extracted The complex is mapped. Registers the continuity of the receptor (example: Metalloprotein structure files are generally structured as follows: Receptor protein + Ligand + Receptor Ions) The PBRadii is assigned Topologies are converted with parmed or generated with tleap The following figure shows the process to generate AMBER topologies depending on the force field. Figure 1 . Topology generation workflow for Single Trajectory Approximation","title":"How gmx_MMPBSA works"},{"location":"howworks/#how-gmx_mmpbsa-works","text":"gmx_MMPBSA is a new tool based on AMBER's MMPBSA.py aiming to perform end-state free energy calculations with GROMACS files. But, what does that mean? Basically, gmx_MMPBSA provides all the MMPBSA.py functionalities and more to GROMACS users. MMPBSA.py is an excellent and well-known tool to perform end-point binding free energy calculations in AMBER (January/2022 more than 1500 citations). On the other hand, there are tools like g_mmpbsa that are well known within the GROMACS community (January/2022 more than 1700 citations). Interestingly, MMPBSA.py is more robust and was published first, however, g_mmpbsa has higher number of citations. This is probably due to the fact that the GROMACS (Open source and free) community is large, while AMBER has the restriction of a paid license, or a small community with free academic license. The use of MMPBSA.py for GROMACS users requires enormous effort to successfully complete the process. In that regard, we have decided to make our experience in this process available to the community. We have not limited ourselves only to the extent of utility itself, but added additional value. We have designed a tool gmx_MMPBSA that allows to perform a number of calculations in an effortless way with a graphical tool gmx_MMPBSA_ana incorporated, which we believe has great potential for the analysis of the results obtained. We also have incorporated some functionalities that aren't present in MMPBSA.py and made others more accessible to the beginner user in Amber.","title":"How gmx_MMPBSA works"},{"location":"howworks/#gmx_mmpbsa-general-workflow","text":"gmx_MMPBSA functioning can be divided into 3 parts as shown in figure 1. In the first part, Preparation , the topologies and trajectories are generated, among other elements depending on the calculations, such as the mutants for the alanine/glycine scanning or the list of interacting residues during decomposition analysis. In the second part, Calculation , the binding free energies and/or entropies are estimated using the selected models. Finally, in the last step Analysis , the results can be analyzed by using the graphical user interface gmx_MMPBSA_ana . Figure 1 . gmx_MMPBSA general workflow","title":"gmx_MMPBSA general workflow"},{"location":"howworks/#required-input-files","text":"Currently, gmx_MMPBSA supports two families of force fields: Amber and CHARMM. Although these force fileds are quite similar, the generation of topologies differs. When Amber force filed was used to prepare the system(s), the topologies compatible with AMBER package can be generated from either GROMACS topologies or structures. Meanwhile, when CHARMM force field is used, AMBER's topologies are generated from GROMACS topologies exclusively. (Table 1). Table 1: Required input files for every force field Force field Structure Index Trajectory Topology Reference Structure Small Molecule Mol2 AMBER tpr, pdb ndx xtc, trr, pdb Optional Optional Only if not top defined CHARMM tpr, pdb ndx xtc, trr, pdb Always Optional No","title":"Required input files"},{"location":"howworks/#topology-preparation","text":"In this section, we will go in detail about each file and what they are used for. GROMACS files MD Structure+mass(db) (*.tpr, *.pdb) This file is used to generate the structure in pdb format of the complex with editconf or trjconv . We recommend using the *.tpr (production *.tpr ) format. Index (*.ndx) This the file that contains the index of each element contained in the *.tpr file, organized as groups. This file is required for the definition of the groups corresponding to the receptor and the ligand. Trajectory (*.xtc, *.trr, *.pdb) Trajectory files. Topology (top) This file contains all the parameters corresponding to the force field selected during the system setup. When using a GROMACS topology, parmed is used for converting the topologies. This method can be useful when studying a complex systems with many elements or systems containing elements that have been parameterized independently and don't appear in standard force fields. If you use Amber force field, you can consider whether using the topology or not. However, when using CHARMM (any version) force field, the topology is always required. Reference Structure It corresponds to a file in *.pdb format that must contain a complete structure. That is, the user must make sure that this structure contains the same number of atoms and residues as the complex that he initially defined, the correct residue numbering, as well as its chain ID. This structure is optional, but we recommend using it since it should guarantee a smooth processing of the files in gmx_MMPBSA . Essentially, the objective is to be able to correctly assign the mentioned parameters since internally gmx_MMPBSA handles sensitive information, for example: when it extracts the receptor and the ligand from the complex structure, the mutation in the alanine scan, etc. Small molecule parameters (*.mol2) This file contains a ligand parameterization with antechamber that is not found in the selected force field (Amber family). It is only necessary to define it when studying a system that contains this type of ligand, and a topology has not been defined. This is used to build Amber topology from structure using tleap . Here are the steps that gmx_MMPBSA follows to generate the topologies: Specific steps for the topology are highlighted like this Generates a new index and registers the groups defined by the user Generates the pdb of the complex, receptor, and ligand Topologies are cleaned (remove water and ions) The structures or parameters for the receptor and the ligand are generated if it is an ST approximation. If Alanine scanning: the mutant of the complex, and the mutant receptor or ligand are generated If decomposition: interaction residues are extracted The complex is mapped. Registers the continuity of the receptor (example: Metalloprotein structure files are generally structured as follows: Receptor protein + Ligand + Receptor Ions) The PBRadii is assigned Topologies are converted with parmed or generated with tleap The following figure shows the process to generate AMBER topologies depending on the force field. Figure 1 . Topology generation workflow for Single Trajectory Approximation","title":"Topology preparation"},{"location":"input_file/","text":"The input file \u00b6 Description \u00b6 gmx_MMPBSA input file contains all the specifications for the calculations. The input file is syntactically similar to other programs in Amber, although we incorporated a new format more similar to the one used on GROMACS *.mdp files (see bleow). The input file contains sections called namelist where the variables are defined for each calculation. The allowed namelists are: &general : contains variables that apply to all aspects of the calculation or parameters required for building AMBER topologies from GROMACS files. &gb : unique variables to Generalized Born (GB) calculations. &gbnsr6 : unique variables to GBNSR6 calculations. &pb : unique variables to Poisson Boltzmann (PB) calculations. &rism : unique variables to 3D-RISM calculations. &alanine_scanning : unique variables to alanine scanning calculations. &decomp : unique variables to the decomposition scheme. &nmode : unique variables to the normal mode (NMODE) calculations used to approximate vibrational entropies. Generation of input files with gmx_MMPBSA \u00b6 The input file can be created using gmx_MMPBSA by selecting the calculations you want to perform. Command-line gmx_MMPBSA --create_input args where `args` can be: gb, gbnsr6, pb, rism, ala, decomp, nmode, all Example: GB calculation PB calculation GB, PB and Decomposition calculations All calculations gmx_MMPBSA --create_input gb gmx_MMPBSA --create_input pb gmx_MMPBSA --create_input gb pb decomp gmx_MMPBSA --create_input or gmx_MMPBSA --create_input all Danger Note that several variables must be explicitly defined in the input file Implemented in v1.5.0 Format \u00b6 All the input variables are described below according to their respective namelists. Descriptions are taken from original sources and modified accordingly when needed. Integers and floating point variables should be typed as-is while strings should be put in either single- or double-quotes. All variables should be set with variable = value and separated by commas is they appear in the same line. If the variables appear in different lines, the comma is no longer needed. See several examples are shown below. As you will see, several calculations can be performed in the same run ( i.e. &gb and &pb ; &gb and &alanine_scanning ; &pb and &decomp ; etc). As we have mentioned, the input file can be generated using the create_input option of gmx_MMPBSA . This style, while retaining the same Amber format (derived from Fortran), is aesthetically more familiar to the GROMACS style ( *.mdp ). However, it maintains the same essence, so it could be defined in any of the two format styles or even combined. See the formats below: New format style Old format style New format style Input file example # General namelist variables &general sys_name = \"\" # System name startframe = 1 # First frame to analyze endframe = 9999999 # Last frame to analyze ... interval = 1 # The offset from which to choose frames from each trajectory file / # Generalized-Born namelist variables &gb igb = 5 # GB model to use ... probe = 1.4 # Solvent probe radius for surface area calc / Old format style Input file example # General namelist variables &general sys_name = \"\", startframe = 1, endframe = 9999999 ... interval = 1 / # Generalized-Born namelist variables &gb igb = 5, ... probe = 1.4 / Namelists \u00b6 &general namelist variables \u00b6 Basic input options \u00b6 sys_name (Default = None) Define the System Name. This is useful when trying to analyze several systems at the same time or calculating the correlation between the predicted and the experimental energies. If the name is not defined, one will be assigned when loading the system in gmx_MMPBSA_ana on a first-come, first-served basis. Tip The definition of the system name is entirely optional, however it can provide a better clarity during the results analysis. All files associated with this system will be saved using its name. Implemented in v1.4.0 startframe (Default = 1) The frame from which to begin extracting snapshots from the full, concatenated trajectory comprised of every trajectory file placed on the command-line. This is always the first frame read. endframe (Default = 9999999) The frame from which to stop extracting snapshots from the full, concatenated trajectory comprised of every trajectory file supplied on the command-line. interval (Default = 1) The offset from which to choose frames from each trajectory file. For example, an interval of 2 will pull every 2 nd frame beginning at startframe and ending less than or equal to endframe. Parameter options \u00b6 forcefields (Default = \"oldff/leaprc.ff99SB,leaprc.gaff\") Comma-separated list of force fields used to build Amber topologies. This variable is more flexible than the previous ones ( protein_forcefield and ligand_forcefield ). The goal of this variable is to provide convenient support for complex systems with several components. It supports all force fields tested in previous protein_forcefield and ligand_forcefield variables. Tip The value of this variable depends on the force field you used for your system in GROMACS You don't need to define forcefields` variable when you using a topology. Please refer to the section \"How gmx_MMPBSA works\" The notation format is the one used in tleap In general, any forcefield present in $AMBERHOME/dat/leap/cmd could be use with forcefields variable. (Check \u00a73 for more information) Be cautious when defining this variable since you can define two forces fields with a similar purpose which can generate inconsistencies. Input files samples: Protein and/or Nucleic acids Protein only Protein + DNA Protein + RNA + Organic mol. Input file with forcefield variable defined for a system with protein and/or nucleic acids &general forcefields=\"oldff/leaprc.ff99SB\" / Input file with forcefield variable defined for a system with only protein &general forcefields=\"leaprc.protein.ff14SB\" / Input file with forcefield variable defined for a system with protein and nucleic acids (DNA) &general forcefields=\"leaprc.protein.ff14SB,leaprc.DNA.bsc1\" / Input file with forcefield variable defined for a system with protein, nucleic acids (RNA) and a organic molecule &general forcefields=\"leaprc.protein.ff14SB,leaprc.RNA.OL3,leaprc.gaff2\" / Forcefields for Protein/Nucleic Acids Name Description \"oldff/leaprc.ff99\" ff99 for proteins and nucleic acids \"oldff/leaprc.ff03\" ff03 (Duan et al.) for proteins and nucleic acids \"oldff/leaprc.ff99SB\" ff99SB for proteins and nucleic acids \"oldff/leaprc.ff99SBildn\" ff99SB modified for the \"ILDN\" changes for proteins and nucleic acids \"oldff/leaprc.ff99bsc0\" ff99SB force field using parmbsc0 for nucleic acid Forcefields only for proteins Name Description \"leaprc.protein.ff14SB\" ff14SB only for proteins \"leaprc.protein.ff19SB\" ff19SB only for proteins Forcefields only for Nucleic Acids Name Description \"leaprc.DNA.bsc1\" ff99bsc0+bsc1 only for DNA \"leaprc.DNA.OL15\" ff99bsc0+OL15 only for DNA \"leaprc.RNA.OL3\" ff99bsc0_chiOL3 only for RNA Forcefields for organic molecules, glycans and zwitterionic amino acids Name Description \"leaprc.gaff\" General Amber Force Field for organic molecules \"leaprc.gaff2\" General Amber Force Field 2 for organic molecules \"leaprc.GLYCAM_06j-1\" Glycam_06j-1 carbohydrate ff ( Compatible with ff12SB and later ) \"leaprc.GLYCAM_06EPb\" GLYCAM-06EPb carbohydrate ff ( Compatible with ff12SB and later ) \"gmxMMPBSA/leaprc.GLYCAM_06h-1\" * GLYCAM-0606h-1 carbohydrate ff ( Compatible with ff99SB and earlier ) \"gmxMMPBSA/leaprc.zaa99SB\" * Force field for Zwitterionic amino acids ( Compatible with ff99SB ) Tip * We added the gmxMMPBSA data to the tleap path. This way, we keep gmx_MMPBSA data separated from Amber's. Implemented in v1.4.1 Modified in v1.4.3: Internal change Updated in v1.5.0: Documentation updated protein_forcefield Define the force field to build Amber topology for protein Removed in v1.5.0: Use forcefields variable ligand_forcefield Define the force field to build Amber topology for ligand (small molecule) Removed in v1.5.0: Use forcefields variable ions_parameters (Default = 1) Define ions parameters to build the Amber topology (see \u00a73.6 ). 1: frcmod.ions234lm_126_tip3p (Li/Merz ion parameters for +2 to +4 ions in TIP3P water (12-6 normal usage set)) 2: frcmod.ions234lm_126_spce (same, but in SPC/E water) 3: frcmod.ions234lm_126_tip4pew (same, but in TIP4P/EW water) 4: frcmod.ions234lm_hfe_tip3p (Li/Merz ion parameters for +2 to +4 ions in TIP3P water (12-6 HFE set)) 5: frcmod.ions234lm_hfe_spce (same, but in SPC/E water) 6: frcmod.ions234lm_hfe_tip4pew (same, but in TIP4P/EW water) 7: frcmod.ions234lm_iod_tip3p (Li/Merz ion parameters for +2 to +4 ions in TIP3P water (12-6 IOD set)) 8: frcmod.ions234lm_iod_spce (same, but in SPC/E water) 9: frcmod.ions234lm_iod_tip4pew (same, but in TIP4P/EW water) 10: frcmod.ionslm_126_opc (Li/Merz ion parameters for -1 to +4 in OPC water (12-6 normal usage set)) 11: frcmod.ionslm_hfe_opc (Li/Merz ion parameters for -1 to +4 in OPC water (12-6 HFE set)) 12: frcmod.ionslm_iod_opc (Li/Merz ion parameters for -1 to +4 in OPC water (12-6 IOD set)) 13: frcmod.ions1lm_126_tip3p (Li/Merz ion parameters for +1 and -1 ions in TIP3P water (12-6 normal usage set)) 14: frcmod.ions1lm_126_spce (same, but in SPC/E water) 15: frcmod.ions1lm_126_tip4pew (same, but in TIP4P/EW water) 16: frcmod.ions1lm_iod (Li/Merz ion parameters for +1/-1 ions in TIP3P, SPC/E, and TIP4P/EW waters (12-6 IOD set)) Keep in mind You don't need to define it when you use a topology. Please refer to the section \"How gmx_MMPBSA works\" This notation is simpler since these parameter files are generally the same for all systems Updated in v1.5.0: Add new ion parameters sets PBRadii (Default = 3) PBRadii to build amber topology files: 1: bondi, recommended when igb = 7 2: mbondi, recommended when igb = 1 3: mbondi2, recommended when igb = 2 or 5 4: mbondi3, recommended when igb = 8 5: mbondi_pb2 mbondi_pb2 radii set This raddi set haven been added in gmx_MMPBSA v1.5.0 . It is based on mbondi radii set and contains a new optimized set of halogen PB radii for halogenated compounds (without extra point (EP) of charge) parametrized with General Amber Force Field (GAFF): Values from Table 3 in \u00a73.1 Halogen Radii Optimization Without EP : Cl: 1.76 Br: 1.97 I: 2.09 Warning Make sure that you installed the updated ParmEd python -m pip install git+https://github.com/ParmEd/ParmEd.git@16fb236 This radii set should be used with the following PBSA setup: Sample input file for PB calculation with halogenated compounds &general sys_name=\"PB_Halogens\", forcefields=\"oldff/leaprc.ff99SB,leaprc.gaff\" PBRadii=5, / &pb radiopt=0, istrng=0.150, inp=1, / 6: mbondi_pb3 mbondi_pb3 radii set This raddi set haven been added in gmx_MMPBSA v1.5.x . It is based on mbondi radii set and contains a new optimized set of halogen PB radii for halogenated compounds (without extra point (EP) of charge) parametrized with General Amber Force Field (GAFF): Values from Table 3 in \u00a73.1 Halogen Radii Optimization Without EP : Cl: 2.20 Br: 2.04 I: 2.19 Warning Make sure that you installed the updated ParmEd python -m pip install git+https://github.com/ParmEd/ParmEd.git@16fb236 This radii set should be used with the following PBSA setup: Sample input file for PB calculation with halogenated compounds &general sys_name=\"PB_Halogens\", forcefields=\"oldff/leaprc.ff99SB,leaprc.gaff\" PBRadii=6, / &pb radiopt=0, istrng=0.150, inp=2, / 7: charmm_radii (compatible only with &pb) charmm_radii radii set This raddi set haven been added in gmx_MMPBSA v1.5.0 . Use only with systems prepared with CHARMM force fields . This atomic radii set for Poisson-Boltzmann calculations has been derived from average solvent electrostatic charge distribution with explicit solvent. The accuracy has been tested with free energy perturbation with explicit solvent. Most of the values were taken from a *radii.str file used in PBEQ Solver in charmm-gui . Radii for protein atoms in 20 standard amino acids from Nina, Belogv, and Roux Radii for nucleic acid atoms (RNA and DNA) from Banavali and Roux Halogens and other atoms from Fortuna and Costa Warning Make sure that you installed the updated ParmEd python -m pip install git+https://github.com/ParmEd/ParmEd.git@16fb236 Updated in v1.5.0: New PB radii sets have been added temperature (Default = 298.15) Specify the temperature (in K) used in the calculations. Implemented in v1.4.0: Replace entropy_temp _Reworked in v1.5.0: Temperature value used not only for entropy but all calculations Entropy options \u00b6 qh_entropy (Default = 0) It specifies whether to perform a quasi-harmonic entropy (QH) approximation with cpptraj or not. 0: Do not perform QH 1: perform QH Keep in mind The number of frames used for QH analyses should be higher than 3N, N being the number of atoms in the complex Check this thread for more info on QH analysis Implemented in v1.4.2: Equivalent to (Removed) entropy = 1 interaction_entropy (default = 0) It specifies whether to use the Interaction Entropy (IE) approximation. 0: Do not perform IE calculation 1: Perform IE calculation Keep in mind The Interaction Entropy can be calculated independently of the solvent model used. A sample Interaction Entropy input file is shown here A tutorial on the use of Interaction Entropy is available here The standard deviation of the interaction energy ( \u03c3IE ) should always be reported when using the Interaction Entropy method. The Interaction Entropy method should be avoided if \u03c3IE > ~ 3.6 kcal/mol because it is impossible to converge the exponential average. It is advisable to study how the Interaction Entropy depends on N by block averaging (which also provide an estimate of the precision of the calculated entropies). A sampling frequency of 10 fs, as reported in the original IE publication , seems to be 3\u201340 times too dense. A sampling frequency of 0.1 ps would be more appropriate. The Interaction Entropy results may vary depending on the system flexibility or whether constraints were used or not in the MD simulation. Please, check this paper for further details. Implemented in v1.4.2: Equivalent to (Removed) entropy = 2 Updated in v1.5.0: Now reports the \u03c3IE . Chart improved in gmx_MMPBSA_ana ie_segment (Default = 25) Representative segment (in %), starting from the last frame, for the calculation of the Interaction Entropy, e.g. : ie_segment = 25 means that the last quartile of the total number of frames ( (endframe-startframe)/interval ) will be used to calculate the average Interaction Entropy. Implemented in v1.4.2 c2_entropy (default = 0) It specifies whether to use the C2 Entropy approximation. 0: Do not perform C2 calculation 1: Perform C2 calculation Keep in mind The C2 Entropy can be calculated independently of the solvent model used. A tutorial on the use of C2 Entropy is available here The standard deviation of the interaction energy ( \u03c3IE ) should always be reported. The C2 Entropy method should be avoided if \u03c3IE > ~ 3.6 kcal/mol because it gives unrealistically large entropies. It is advisable to study how the C2 Entropy depends on N by block averaging (which also provide an estimate of the precision of the calculated entropies). A sampling frequency of 10 fs, seems to be 3\u201340 times too dense. A sampling frequency of 0.1 ps would be more appropriate. The C2 Entropy results may vary depending on the system flexibility or whether constraints were used or not in the MD simulation. Please, check this paper for further details. Implemented in v1.5.0 Miscellaneous options \u00b6 assign_chainID (Default = 0) Defines the chains ID assignment mode. It is ignored when defining a reference structure (recommended) . If assign_chainID = 1 , gmx_MMPBSA check if the structure has no chains ID, and it is assigned according to the structure 1 . If assign_chainID = 2 , gmx_MMPBSA assign the chains ID, exist or not, according to the structure 1 (can generate inconsistencies). Implemented in v1.2.0 Updated in v1.5.0: Internal changes exp_ki (Default = 0.0) Specify the experimental Ki (in nM) for correlations analysis. If not defined or exp_ki = 0 then this system will be omitted in the correlation analysis Implemented in v1.4.0 full_traj (Default = 0) Print trajectories 0: Print only thread trajectories in *.mdcrd format 1: Print a full traj and the thread trajectories in *.mdcrd format gmx_path Define a path to search for GROMACS executables. This path takes precedence over the path defined in the PATH variable. In this path the following executables will be searched: gmx , gmx_mpi , gmx_d , or gmx_mpi_d (GROMACS > 5.x.x), and make_ndx , editconf and trjconv (GROMACS 4.x.x) Keep in mind This variable is used when the GROMACS used to run the system differs from that of will be used for running the analyses. It takes the path to the GROMACS bin folder where the executables will be searched on. An example of the use of this variable is given below: &general sys_name=\"my_system\", verbose=2, forcefields=\"oldff/leaprc.ff99SBildn\",leaprc.gaff\" gmx_path=\"/home/programs/gromacs/bin\" / &gb igb=5, saltcon=0.150 / # replace this \"/home/programs/gromacs/bin\" with the path to the GROMACS you want to use. Implemented in v1.1.1 keep_files (Default = 2) Specifies which files are kept. 0: Keep only binary file ( COMPACT_gmx_MMPBSA_RESULTS.mmxsa ) 1: Keep all temporary files ( prefix *) 2: Keep all temporary files ( prefix *) and binary file Keep in mind The binary file contains all the information necessary to analyze the data with gmx_MMPBSA_ana. Its use is only recommended in special cases where the original raw data is not present. We recommnend to use keep_files = 1 or keep_files = 2 to avoid errors when using gmx_MMPBSA_ana netcdf (Default = 0) Specifies whether to use NetCDF trajectories internally rather than writing temporary ASCII trajectory files. For very large trajectories, this could offer significant speedups, and requires less temporary space. However, this option is incompatible with alanine scanning. 0: Do NOT use temporary NetCDF trajectories 1: Use temporary NetCDF trajectories solvated_trajectory (Default = 1) Define if it is necessary to generate a clean trajectory with no water and ions. 0: Do not generate clean trajectory 1: Generate clean trajectory Implemented in v1.3.0 Updated in v1.5.0. Bugs fixed use_sander Use sander for energy calculations, even when mmpbsa_py_energy will suffice. Removed in v1.5.0: Now sander is used in all calculations verbose (Default = 1) Specifies how much output is printed in the output file. 0: Print only difference terms 1: Print all complex, receptor, ligand, and difference terms Updated in v1.5.0 &gb namelist variables \u00b6 Keep in mind A default GB input file can be created as follows: gmx_MMPBSA --create_input gb A sample GB input file is shown here A tutorial on binding free energy calculation with GB model is available here Basic input options \u00b6 igb (Default = 5) Generalized Born method to use (see \u00a74 for more info). 1: The Hawkins, Cramer, Truhlar pairwise GB model (GB-HCT) 2: Modified GB model 1 developed by A. Onufriev, D. Bashford and D.A. Case (GB-OBC1) 5: Modified GB model 2 developed by A. Onufriev, D. Bashford and D.A. Case (GB-OBC2) 7: GBn model described by Mongan, Simmerling, McCammon, Case and Onufriev (GB-Neck) 8: Same GB functional form as the GBn model (igb=7), but with different parameters. Developed by Nguyen, P\u00e9rez, Bermeo, and Simmerling (GB-Neck2) alpb (Default = 0) Use Analytical Linearized Poisson-Boltzmann (ALPB) approximation to handle electrostatic interactions within the implicit solvent model (see \u00a74.2 ): where \u03b2 = \u03b5 in /\u03b5 ex is the ratio of the internal and external dielectrics, \u03b1=0.571412, and A is the so-called effective electrostatic size of the molecule (see arad_method below). The ALPB requires one of the analytical GB models to be set, that is igb = 1, 2, 5, or 7, for computing the effective Born radii. It uses the same sets of radii as required by the particular GB model. 0: Do not use ALPB 1: Use ALPB arad_method (Default = 1) Method used to estimate the effective electrostatic size/radius ( A in ALPB equation) of the molecule (See Sigalov, Fenley, and Onufriev ). 1: Use structural invariants 2: Use elementary functions 3: Use elliptic integral (numerical) intdiel (Default = 1.0) Define Internal dielectric constant. extdiel (Default = 78.5) Define External dielectric constant. Implemented in v1.5.0: This variable = 80.0 in previous versions saltcon (Default = 0.0) Salt concentration in Molarity (M). rgbmax (Default = 999.0) Distance cutoff in \u00c5 to use when computing effective GB radii. surften (Default = 0.0072) Surface tension value. Units in kcal/mol/\u00c5 2 surfoff (Default = 0.0) Offset to correct (by addition) the value of the non-polar contribution to the solvation free energy term. molsurf (Default = 0) Define the algorithm to calculate the surface area for the non-polar solvation term. 0: Use LCPO (Linear Combination of Pairwise Overlaps) 1: Use molsurf algorithm msoffset (Default = 0) Offset to apply to the individual atomic radii in the system when calculating the molsurf surface. See the description of the molsurf action command in cpptraj . probe (Default = 1.4) Radius in \u00c5 of the probe molecule (supposed to be the size of a solvent molecule), to use when determining the molecular surface. Note Only applicable when molsurf is set to 1 QM options \u00b6 ifqnt (Default = 0) Specifies whether a part of the system is treated with quantum mechanics. 0: Potential function is strictly classical 1: Use QM/MM Keep in mind Calculations where part of the system is treated with quantum mechanics can be performed only with GB A sample QM/MMGBSA input file is shown here A tutorial on binding free energy calculation with QM/MMGBSA is available here qm_theory Which semi-empirical Hamiltonian should be used for the quantum calculation. Options are PM3 , AM1 , MNDO , PDDG-PM3 , PM3PDDG , PDDG-MNDO , PDDGMNDO , PM3-CARB1 , PM3CARB1 , DFTB , SCC-DFTB , RM1 , PM6 , PM3-ZnB , PM3-MAIS , PM3ZNB , MNDO/D , MNDOD . The dispersion correction can be switched on for AM1 and PM6 by choosing AM1-D* and PM6-D , respectively. The dispersion and hydrogen bond correction will be applied for AM1-DH+ and PM6-DH+ . Danger No qm_theory default, this must be specified if ifqnt = 1. qm_residues Complex residues to treat with quantum mechanics. All residues treated with quantum mechanics in the complex must be treated with quantum mechanics in the receptor or ligand to obtain meaningful results. This notation is the same used for print_res variable in &decomp namelist. Danger No qm_residues default, this must be specified if ifqnt = 1 except when using user defined masks. Selection schemes By Distance (recommended) Amino acid selection Notation: [ within distance ] within corresponds to the keyword and distance to the maximum distance criterion in \u00c5 necessary to select the residues from both the receptor and the ligand. In case the cutoff used is so small that the number of qm_residues = 0, the cutoff value will be increased by 0.1 until the number of qm_residues > 0. Example qm_residues=\"within 5\" Residues within 5 \u00c5 between receptor and ligand will be treated with quantum mechanic. Notation: [ CHAIN /( RESNUM or RESNUM-RESNUM ) ] Treat with quantum mechanics residues individual or ranges. This notation also supports insertion codes, in which case you must define them individually qm_residues=\"A/1,3-10,15,100\" This treat with quantum mechanic Chain A residues 1, 3 through 10, 15, and 100 from the complex topology file and the corresponding residues in either the ligand and/or receptor topology files. Let's suppose that we can have the following sequence: - A:LEU:5 - A:GLY:6:A - A:THR:6:B - A:SER:6:C - A:ASP:6:D - A:ILE:7 with the format CHAIN / RESNUMBER : INSERTION_CODE Right notation Wrong notation Ranges selection qm_residues=\"A/5-7 Will treat with quantum mechanic all mentioned residues because all residues with insertion code are contained in the range Individual selection qm_residues=\"A/5,6B,6C,7 Will treat with quantum mechanic all mentioned residues except the residues 6A and 6D from chain A Multiple chain selection qm_residues=\"A/5-10,100 B/34,56 Will treat with quantum mechanic residues 5 through 10, and 100 from chain A, and residues 34 and 56 from Chain B. qm_residues=\"A/5-6B,6D-7 Will end in error. com_qmmask (Default = '') Amber mask specifying the quantum atoms in the complex. If defined, residues selected with qm_residues variable are ignored. When using user defined masks, com_qmmask , rec_qmmask , and lig_qmmask must be defined. Danger When using user defined masks, automatic assigment of qmcharge_com is overrided and default or user defined qmcharge_com is used. rec_qmmask (Default = '') Amber mask specifying the quantum atoms in the receptor. When using user defined masks, com_qmmask , rec_qmmask , and lig_qmmask must be defined. Danger When using user defined masks, automatic assigment of qmcharge_rec is overrided and default or user defined qmcharge_rec is used. lig_qmmask (Default = '') Amber mask specifying the quantum atoms in the receptor. When using user defined masks, com_qmmask , rec_qmmask , and lig_qmmask must be defined. Danger When using user defined masks, automatic assigment of qmcharge_lig is overrided and default or user defined qmcharge_lig is used. qmcharge_com (Default = 0) The charge of the quantum section for the complex. qmcharge_com is automatically assigned based on the selection qm_residues . When using user defined masks, automatic assigment of qmcharge_com is overrided and default or user defined qmcharge_com is used. qmcharge_rec (Default = 0) The charge of the quantum section for the receptor. qmcharge_rec is automatically assigned based on the selection qm_residues . When using user defined masks, automatic assigment of qmcharge_rec is overrided and default or user defined qmcharge_rec is used. qmcharge_lig (Default = 0) The charge of the quantum section for the ligand. qmcharge_lig is automatically assigned based on the selection qm_residues . When using user defined masks, automatic assigment of qmcharge_lig is overrided and default or user defined qmcharge_lig is used. qmcut (Default = 9999.0) The cutoff for the qm/mm charge interactions. scfconv (Default = 1.0e-8) Controls the convergence criteria for the SCF calculation, in kcal/mol. The tighter the convergence the longer the calculation will take. Values tighter than 1.0e-11 are not recommended as these can lead to oscillations in the SCF, due to limitations in machine precision, that can lead to convergence failures. writepdb (Default = 1) Write a PDB file of the selected QM region. This option is designed to act as an aid to the user to allow easy checking of what atoms were included in the QM region. Write a PDB file of the atoms in the QM region on the very first step to a file named qmmm_region.pdb. 0: Do not write a PDB file of the selected QM region 1: Write a PDB file of the selected QM region peptide_corr (Default = 0) Apply MM correction to peptide linkages. This correction is of the form: where \u03d5 is the dihedral angle of the H-N-C-O linkage and h type is a constant dependent on the Hamiltonian used. Recommended, except for DFTB/SCC-DFTB. 0: Do not apply a MM correction to peptide linkages 1: Apply a MM correction to peptide linkages verbosity (Default = 0) Controls the verbosity of QM/MM related output. Values of 2 or higher will produce a lot of output. 0: only minimal information is printed - Initial QM geometry and link atom positions as well as the SCF energy at every ntpr steps. 1: Print SCF energy at every step to many more significant figures than usual. Also print the number of SCF cycles needed on each step. 2: As 1 and also print info about memory reallocations, number of pairs per QM atom, QM core - QM core energy, QM core - MM atom energy, and total energy. 3: As 2 and also print SCF convergence information at every step. 4: As 3 and also print forces on the QM atoms due to the SCF calculation and the coordinates of the link atoms at every step. 5: As 4 and also print all of the info in kJ/mol as well as kcal/mol. &gbnsr6 namelist variables \u00b6 Keep in mind GBNSR6 is an implementation of the Generalized Born (GB) model in which the effective Born radii are computed numerically, via the so-called \"R6\" integration ( ref. ) over molecular surface of the solute. In contrast to most GB practical models, GBNSR6 model is parameter free in the same sense as the numerical PB framework is. Thus, accuracy of GBNSR6 relative to the PB standard is virtually unaffected by the choice of input atomic radii. Check Chapter \u00a75 in Amber manual for a more thorough description of the GBNSR6 model and its parameters. A default GBNSR6 input file can be created as follows: gmx_MMPBSA --create_input gbnsr6 A sample GBNSR6 input file is shown here A tutorial on binding free energy calculation with GBNSR6 model is available here Basic input options \u00b6 epsin (Default = 1.0) Dielectric constant of the solute region. epsout (Default = 78.5) Implicit solvent dielectric constant for the solvent. istrng (Default = 0.0) Ionic strength in M for the GBNSR6 equation. dprob (Default = 1.4) Radius of the solvent probe. cavity_surften (Default = 0.005) Surface tension parameter for nonpolar solvation calculation. Options to select numerical procedures \u00b6 space (Default = 0.5) Sets the grid spacing that determines the resolution of the solute molecular surface. Note that memory footprint of this grid-based implementation of GBNSR6 may become large for large structures, e.g. the nucleosome (about 25,000 atoms) will take close to 2 GB of RAM when the default grid spacing is used. For very large structures, one may consider increasing the value of space, which will reduce the memory footprint and execution time; however, the accuracy will also decrease. arcres (Default = 0.2) Arc resolution used for numerical integration over molecular surface. b (Default = 0.028) Specifies the value of uniform offset to the (inverse) effective radii, the default value 0.028 gives better agreement with the PB model, regardless of the structure size. For best agreement with the explicit solvent (TIP3P) solvation energies, optimal value of B depends on the structure size: for small molecules (number of atoms less than 50), B=0 is recommended. With -chagb option, B is calculated automatically based on the solute size. alpb (Default = 0) Specifies if ALBP correction is to be used. 0: Use canonical GB (default) 1: Use ALPB approximation Options for CHAGB model \u00b6 chagb (Default = 0) Define if CHAGB is used. 0: Do not use CHAGB. 1: Use CHAGB. rs (Default = 0.52) Dielectric boundary shift compared to the molecular surface. radiopt (Default = 0) Set of intrinsic atomic radii to be used. 0: uses hardcoded intrisic radii optimized for small drug like molecules, and single amino acid dipeptides ( ref. ) 1: intrinsic radii are read from the topology file. Note that the dielectric surface defined using these radii is then shifted outwards by Rs relative to the molecular surface. The option is not recommended unless you are planning to re-optimize the input radii set for your problem. roh (Default = 1) Sets the value of R z OH for CHAGB model, the default is 0.586\u00c5. This parameter defines which explicit water model is being mimicked with respect to its propensity to cause charge hydration asymmetry. A perfectly tetrahedral water , which can not cause charge hydration asymmetry, would have R z OH = 0. The options for roh are: 1: R z OH = 0.586\u00c5 corresponds to TIP3P and SPC/E. 2: R z OH = 0.699\u00c5 for OPC. 3: R z OH = 0.734\u00c5 for TIP4P 4: R z OH = 0.183\u00c5 for TIP5P/E. tau (Default = 1.47) Value of \u03c4 in the CHAGB model. This dimensionless parameter controls the effective range of the neighboring charges ( j ) affecting the CHA of atom ( i ), see ( ref. ) for details. &pb namelist variables \u00b6 Keep in mind gmx_MMPBSA uses sander to perform PB calculations. sander offers access to all pbsa functionalities. The default values for the variables described below are appropriate for most calculations on solvated molecular systems. Also note that the default options may have changed over time. A more thorough description of all the options can be found here . For a detailed discussion of all related options on the quality of the MM/PB(GB)SA calculations, please check this publication . A default PB input file can be created as follows: gmx_MMPBSA --create_input pb A sample PB input file is shown here A tutorial on binding free energy calculation with PB model is available here Basic input options \u00b6 ipb (Default = 2) Option to set up a dielectric model for all numerical PB procedures. ipb = 1 corresponds to a classical geometric method, while a level-set based algebraic method is used when ipb > 2 . 0: No electrostatic solvation free energy is computed. 1: The dielectric interface between solvent and solute is built with a geometric approach. ( ref. ) 2: The dielectric interface is implemented with the level set function. Use of a level set function simplifies the calculation of the intersection points of the molecular surface and grid edges and leads to more stable numerical calculations. ( ref. ) 4: The dielectric interface is also implemented with the level set function. However, the linear equations on the grid points nearby the dielectric boundary are constructed using the IIM. In this option, The dielectric constant do not need to be smoothed, that is, smoothopt is useless. Only the linear PB equation is supported, that is, npbopt = 0 . Starting from the Amber 2018 release, solvopt is no longer relevant as only one stable solver is supported. ( ref. ) 6: The dielectric interface is implemented analytically with the revised density function approach ( sasopt = 2 ). The linear equations on the irregular points are constructed using the IIM and fully utilizing the analytical surface. Otherwise, it is exactly the same as ipb = 4 . ( ref. ) 7: The dielectric interface is implemented analytically with the revised density function approach ( sasopt = 2 ). The linear equations on the irregular points are constructed using the \u03a7-factor harmonic average method. ( ref. ) 8: The dielectric interface is implemented analytically with the revised density function approach ( sasopt = 2 ). The linear equations on the irregular points are constructed using the secondorder harmonic average method. ( ref. ) inp (Default = 2) Option to select different methods to compute non-polar solvation free energy. 1: The total non-polar solvation free energy is modeled as a single term linearly proportional to the solvent accessible surface area ( ref. ). When using inp = 1 : sprob is reset to 1.4 cavity_surften is reset to 0.005 cavity_offset is reset to 0.000 2: The total non-polar solvation free energy is modeled as two terms: the cavity term and the dispersion term. The dispersion term is computed with a surface-based integration method ( ref. ) closely related to the PCM solvent for quantum chemical programs. ( ref. ) Under this framework, the cavity term is still computed as a term linearly proportional to the molecular solvent-accessible-surface area (SASA) or the molecular volume enclosed by SASA. Keep in mind Sometimes, high values for the solvation energy are obtained using inp=2 . Check this section to see a workaround. sander_apbs (Default = 0) Option to use APBS for PB calculation instead of the built-in PBSA solver. This will work only through the iAPBS interface built into sander.APBS . Instructions for this can be found online at the iAPBS/APBS websites. 0: Do not use sander.APBS 1: Use sander.APBS Options to define the physical constants \u00b6 indi (Default = 1.0) Internal dielectric constant. This corresponds to epsin in pbsa . exdi (Default = 80.0) External dielectric constant. This corresponds to epsout in pbsa . emem (Default = 4.0) Sets the membrane dielectric constant. Only used if memopt > 0, does nothing otherwise. Value used should be between indi and exdi or there may be errors. This corresponds to epsmem in pbsa . smoothopt (Default = 1) Instructs PB how to set up dielectric values for finite-difference grid edges that are located across the solute/solvent dielectric boundary. 0: The dielectric constants of the boundary grid edges are always set to the equal-weight harmonic average of indi and exdi . 1: A weighted harmonic average of indi and exdi is used for boundary grid edges. The weights for indi and exdi are fractions of the boundary grid edges that are inside or outside the solute surface. ( ref. ) 2: The dielectric constants of the boundary grid edges are set to either indi or exdi depending on whether the midpoints of the grid edges are inside or outside the solute surface. Implemented in v1.5.0 istrng (Default = 0.0) Ionic strength in Molarity (M). It is converted to mM for PBSA and kept as M for APBS . radiopt (Default = 1) The option to set up atomic radii. 0: Use radii from the prmtop file for both the PB calculation and for the non-polar calculation (see inp ) 1: Use atom-type/charge-based radii by Tan and Luo ( ref. ) for the PB calculation. Note that the radii are optimized for Amber atom types as in standard residues from the Amber database and should work fine for standard complexes such as protein-protein, protein-DNA. On the other hand, if a molecule in your system was built by antechamber, i.e. , if GAFF atom types are used, or any other extrenal software, radii from the prmtop file should be used ( radiopt = 0 ). Check this thread for more info. prbrad (Default = 1.4) Solvent probe radius (in \u00c5). Allowed values are 1.4 and 1.6. This corresponds to dprob in pbsa . iprob (Default = 2.0) Mobile ion probe radius (in \u00c5) for ion accessible surface used to define the Stern layer. Implemented in v1.5.0 sasopt (Default = 0) Option to determine which kind of molecular surfaces to be used in the Poisson-Boltzmann implicit solvent model. 0: Use the solvent excluded surface as implemented by ( ref. ) 1: Use the solvent accessible surface. Apparently, this reduces to the van der Waals surface when the prbrad is set to zero. 2: Use the smooth surface defined by a revised density function. ( ref. ) This must be combined with `ipb > 2. arcres (Default = 0.25) The arcres keyword gives the resolution (in \u00c5) of dots used to represent solvent accessible arcs. More generally, arcres should be set to max(0.125 \u00c5, 0.5h) (h is the grid spacing). ( ref. ) Implemented in v1.5.0 Options for implicit membranes \u00b6 memopt (Default = 0) Option to turn the implicit membrane on and off. The membrane is implemented as a slab like region with a uniform or heterogeneous dielectric constant depth profile. Details of the implicit membrane setup can be found here . 0: No implicit membrane used. 1: Use a uniform membrane dielectric constant in a slab-like implicit membrane. ( ref. ) 2: Use a heterogeneous membrane dielectric constant in a slab-like implicit membrane. The dielectric constant varies with depth from a value of 1 in the membrane center to 80 at the membrane periphery. The dielectric constant depth profile was implemented using the PCHIP fitting. ( ref. ) 3: Use a heterogeneous membrane dielectric constant in a slab-like implicit membrane. The dielectric constant varies with depth from a value of 1 in the membrane center to 80 at the membrane periphery. The dielectric constant depth profile was implemented using the Spline fitting. ( ref. ) Keep in mind Calculations for implicit membranes can be performed only with PB A sample input file is shown here A tutorial on binding free energy calculation for membrane proteins is available here Check this thread for more info on Parameters for Implicit Membranes mprob (Default = 2.70) Membrane probe radius (in \u00c5). This is used to specify the highly different lipid molecule accessibility versus that of the water. ( ref. ) Implemented in v1.5.0 mthick (Default = 40) Membrane thickness (in \u00c5). This is different from the previous default of 20 \u00c5. mctrdz (Default = 0.0) Membrane center (in \u00c5) in the z direction. poretype (Default = 1) Turn on and off the automatic depth-first search method to identify the pore. ( ref. ) 0: Do not turn on the pore searching algorithm. 1: Turn on the pore searching algorithm. Options to select numerical procedures \u00b6 npbopt (Default = 0) Option to select the linear, or the full nonlinear PB equation. 0: Linear PB equation (LPBE) is solved 1: Nonlinear PB equation (NLPBE) is solved Note While the linear PB equation (see tutorial ) will suffice for most calculations, the nonlinear PB equation (see tutorial ) is recommended for highly charged systems. Parameters such as eneopt or cutnb should be adjusted accordingly when using the NLPBE. Check the following threads ( T1 and T2 ) on how to proceed when using NLPBE. Last but not least, take into account that using NLPBE can significantly increase the calculation time required for PB calculation. Implemented in v1.5.0 solvopt (Default = 1) Option to select iterative solvers. 1 Modified ICCG or Periodic (PICCG) if bcopt = 10 . 2 Geometric multigrid. A four-level v-cycle implementation is applied by default. 3 Conjugate gradient (Periodic version available under bcopt = 10 ). This option requires a large linit to converge. 4 SOR. This option requires a large linit to converge. 5 Adaptive SOR. This is only compatible with npbopt = 1 . This option requires a large linit converge. ( ref. ) 6 Damped SOR. This is only compatible with npbopt = 1 . This option requires a large linit to converge. ( ref. ) accept (Default = 0.001) Sets the iteration convergence criterion (relative to the initial residue). Implemented in v1.5.0 linit (Default = 1000) Sets the maximum number of iterations for the finite difference solvers. Note that linit has to be set to a much larger value, e.g. 10000, for the less efficient solvers, such as conjugate gradient and SOR, to converge. This corresponds to maxitn in pbsa . fillratio (Default = 4.0) The ratio between the longest dimension of the rectangular finite-difference grid and that of the solute. For macromolecules is fine to use 4, or a smaller value like 2. A default value of 4 is large enough to be used for a small solute, such as a ligand molecule. Using a smaller value for fillratio may cause part of the small solute to lie outside the finite-difference grid, causing the finite-difference solvers to fail. scale (Default = 2.0) Resolution of the Poisson Boltzmann grid. It is equal to the reciprocal of the grid spacing ( space in pbsa ). nbuffer (Default = 0) Sets how far away (in grid units) the boundary of the finite difference grid is away from the solute surface; i.e. , automatically set to be at least a solvent probe or ion probe (diameter) away from the solute surface. Implemented in v1.5.0 nfocus (Default = 2) Set how many successive FD calculations will be used to perform an electrostatic focussing calculation on a molecule. When nfocus = 1, no focusing is used. It is recommended that nfocus = 1 when the multigrid solver is used. fscale (Default = 8) Set the ratio between the coarse and fine grid spacings in an electrostatic focussing calculation. Implemented in v1.5.0 npbgrid (Default = 1) Sets how often the finite-difference grid is regenerated. Implemented in v1.5.0 Options to compute energy and forces \u00b6 bcopt (Default = 5) Boundary condition options. 1: Boundary grid potentials are set as zero, i.e. conductor. Total electrostatic potentials and energy are computed. 5: Computation of boundary grid potentials using all grid charges. Total electrostatic potentials and energy are computed. 6: Computation of boundary grid potentials using all grid charges. Reaction field potentials and energy are computed with the charge singularity free formalism. ( ref. ) 10: Periodic boundary condition is used. Total electrostatic potentials and energy are computed. Can be used with solvopt = 1, 2, 3, or 4 and ipb = 1 or 2 . It should only be used on charge-neutral systems. If the system net charge is detected to be nonzero, it will be neutralized by applying a small neutralizing charge on each grid ( i.e. a uniform plasma) before solving. eneopt (Default = 2) Option to compute total electrostatic energy and forces. 1: Compute total electrostatic energy and forces with the particle-particle particle-mesh (P3M) procedure outlined in Lu and Luo. ( ref. ) In doing so, energy term EPB in the output file is set to zero, while EEL includes both the reaction field energy and the Coulombic energy. The van der Waals energy is computed along with the particle-particle portion of the Coulombic energy. The electrostatic forces and dielectric boundary forces can also be computed. ( ref. ) This option requires a nonzero cutnb and bcopt = 5 for soluble proteins / bcopt = 10 for membrane proteins. 2: Use dielectric boundary surface charges to compute the reaction field energy. Both the Coulombic energy and the van der Waals energy are computed via summation of pairwise atomic interactions. Energy term EPB in the output file is the reaction field energy. EEL is the Coulombic energy. 3: Similar to the first option above, a P3M procedure is applied for both solvation and Coulombic energy and forces for larger systems. 4: Similar to the third option above, a P3M procedure for the full nonlinear PB equation is applied for both solvation and Coulombic energy and forces for larger systems. A more robust and clean set of routines were used for the P3M and dielectric surface force calculations. frcopt (Default = 0) Option to compute and output electrostatic forces to a file named force.dat in the working directory. 0: Do not compute or output atomic and total electrostatic forces. 1: Reaction field forces are computed by trilinear interpolation. Dielectric boundary forces are computed using the electric field on dielectric boundary. The forces are output in the unit of kcal/mol\u00b7\u00c5. 2: Use dielectric boundary surface polarized charges to compute the reaction field forces and dielectric boundary forces ( ref. ) The forces are output in the unit of kcal/mol\u00b7\u00c5. 3: Reaction field forces are computed using dielectric boundary polarized charge. Dielectric boundary forces are computed using the electric field on dielectric boundary. ( ref. ) The forces are output in kcal/mol\u00b7\u00c5. scalec (Default = 0) Option to compute reaction field energy and forces. 0: Do not scale dielectric boundary surface charges before computing reaction field energy and forces. 1: Scale dielectric boundary surface charges using Gauss\u2019s law before computing reaction field energy and forces. Implemented in v1.5.0 cutfd (Default = 5.0) Atom-based cutoff distance to remove short-range finite-difference interactions, and to add pairwise charge-based interactions. This is used for both energy and force calculations. See Eqn (20) in Lu and Luo. ( ref. ) cutnb (Default = 0.0) Atom-based cutoff distance for van der Waals interactions, and pairwise Coulombic interactions when eneopt = 2. When cutnb is set to the default value of 0, no cutoff will be used for van der Waals and Coulombic interactions, i.e. , all pairwise interactions will be included. When eneopt = 1 , this is the cutoff distance used for van der Waals interactions only. The particle-particle portion of the Coulombic interactions is computed with the cutoff of cutfd ._ nsnba (Default = 1) Sets how often (steps) atom-based pairlist is generated. Implemented in v1.5.0 Options to select a non-polar solvation treatment \u00b6 decompopt (Default = 2) Option to select different decomposition schemes when inp = 2 . See ( ref. ) for a detailed discussion of the different schemes. The \u03c3 decomposition scheme is the best of the three schemes studied. ( ref. ) As discussed in ( ref. ), decompopt = 1 is not a very accurate approach even if it is more straightforward to understand the decomposition. 1: Use the 6/12 decomposition scheme 2: Use the \u03c3 decomposition scheme 3: Use the WCA decomposition scheme Implemented in v1.5.0 use_rmin (Default = 1) The option to set up van der Waals radii. The default is to use van der Waals rmin to improve the agreement with TIP3P. ( ref. ) 0: Use atomic van der Waals \u03c3 values. 1: Use atomic van der Waals rmin values. Implemented in v1.5.0 sprob (Default = 0.557) Solvent probe radius (in \u00c5) for solvent accessible surface area (SASA) used to compute the dispersion term, default to 0.557 \u00c5 in the \u03c3 decomposition scheme as optimized in ( ref. ) with respect to the TIP3P solvent and the PME treatment. Recommended values for other decomposition schemes can be found in Table 4 of ( ref. ). If use_sav = 0 (see below), sprob can be used to compute SASA for the cavity term as well. Unfortunately, the recommended value is different from that used in the dispersion term calculation as documented in ( ref. ). Thus, two separate calculations are needed when use_sav = 0 , one for the dispersion term and one for the cavity term. Therefore, please carefully read ( ref. ) before proceeding with the option of use_sav = 0 . Note that sprob was used for ALL three terms of solvation free energies, i.e. , electrostatic, attractive, and repulsive terms in previous releases in Amber. However, it was found in the more recent study ( ref. ) that it was impossible to use the same probe radii for all three terms after each term was calibrated and validated with respect to the TIP3P solvent. ( ref. ) Implemented in v1.5.0 vprob (Default = 1.300) Solvent probe radius (in \u00c5) for molecular volume (the volume enclosed by SASA) used to compute non-polar cavity solvation free energy, default to 1.300 \u00c5, the value optimized in ( ref. ) with respect to the TIP3P solvent. Recommended values for other decomposition schemes can be found in Tables 1-3 of ( ref. ). Implemented in v1.5.0 rhow_effect (Default = 1.129) Effective water density used in the non-polar dispersion term calculation, default to 1.129 for decompopt = 2 , the \u03c3 scheme. This was optimized in ( ref. ) with respect to the TIP3P solvent in PME. Optimized values for other decomposition schemes can be found in Table 4 of ( ref. ). Implemented in v1.5.0 use_sav (Default = 1) The option to use molecular volume (the volume enclosed by SASA) or to use molecular surface (SASA) for cavity term calculation. Recent study shows that the molecular volume approach transfers better from small training molecules to biomacromolecules. 0: Use SASA to estimate cavity free energy 1: Use the molecular volume enclosed by SASA Implemented in v1.5.0 cavity_surften (Default = 0.0378) The regression coefficient for the linear relation between the total non-polar solvation free energy ( inp = 1), or the cavity free energy ( inp = 2 ) and SASA/volume enclosed by SASA. The default value is for inp = 2 and set to the best of three tested schemes as reported in ( ref. ), i.e. decompopt = 2 , use_rmin = 1 , and use_sav = 1 . See recommended values in Tables 1-3 for other schemes. cavity_offset (Default = -0.5692) The regression offset for the linear relation between the total non-polar solvation free energy ( inp = 1), or the cavity free energy ( inp = 2 ) and SASA/volume enclosed by SASA. The default value is for inp = 2 and set to the best of three tested schemes as reported in ( ref. ), i.e. decompopt = 2 , use_rmin = 1 , and use_sav = 1 . See recommended values in Tables 1-3 for other schemes. maxsph (Default = 400) Approximate number of dots to represent the maximum atomic solvent accessible surface. These dots are first checked against covalently bonded atoms to see whether any of the dots are buried. The exposed dots from the first step are then checked against a non-bonded pair list with a cutoff distance of 9 \u00c5 to see whether any of the exposed dots from the first step are buried. The exposed dots of each atom after the second step then represent the solvent accessible portion of the atom and are used to compute the SASA of the atom. The molecular SASA is simply a summation of the atomic SASA\u2019s. A molecular SASA is used for both PB dielectric map assignment and for NP calculations. Implemented in v1.5.0 maxarcdot (Default = 1500) Number of dots used to store arc dots per atom. Options for output \u00b6 npbverb (Default = 0) Verbose mode. 0: Off 1: On Implemented in v1.5.0 &rism namelist variables \u00b6 Keep in mind A default 3drism input file can be created as follows: gmx_MMPBSA --create_input rism 3D-RISM calculations are performed with the rism3d.snglpnt program built with AmberTools, written by Tyler Luchko. It is the most expensive, yet most statistical mechanically rigorous solvation model. See Introduction to RISM for a thorough description RISM theory. General workflow for using 3D-RISM Practical considerations on: Computational Requirements and Parallel Scaling of RISM Numerical Accuracy of RISM Convergence issues A sample 3drism input file is shown here A tutorial on binding free energy calculation with 3D-RISM is available here We have included more variables in 3D-RISM calculations than the ones available in the MMPBSA.py original code. That way, users can be more in control and tackle various issues ( e.g. , convergence issues). One advantage of 3D-RISM is that an arbitrary solvent can be chosen; you just need to change the xvvfile specified on the command line (see -xvvfile flag in gmx_MMPBSA command line . The default solvent is $AMBERHOME/AmberTools/test/rism1d/tip3p-kh/tip3p.xvv.save . In case this file doesn't exist, a copy path_to_GMXMMPBSA/data/xvv_files/tip3p.xvv is used. You can find examples of precomputed .xvv files for SPC/E and TIP3P water in $AMBERHOME/AmberTools/test/rism1d or path_to_GMXMMPBSA/data/xvv_files folders. Closure approximations \u00b6 closure (Default = \"kh\") Comma separate list of closure approximations. If more than one closure is provided, the 3D-RISM solver will use the closures in order to obtain a solution for the last closure in the list when no previous solutions are available. The solution for the last closure in the list is used for all output. The use of several closures combined with different tolerances can be useful to overcome convergence issues (see \u00a77.3.1 ) \"kh\": Kovalenko-Hirata \"hnc\": Hyper-netted chain equation \"psen\": Partial Series Expansion of order-n where \u201cn\u201d is a positive integer ( e.g. , \"pse3\") Examples === \"v1.5.2\" === \"One closure\" closure=\"pse3\" === \"Several closures\" closure=\"kh\",\"pse3\" === \"< v1.5.2\" === \"One closure\" closure=\"pse3\" === \"Several closures\" closure=\"kh,pse3\" Solvation free energy corrections \u00b6 v1.5.2 < v1.5.2 Info The thermo variable has been removed in v1.5.2. Now the standard closure relation is always reported. Use gfcorrection and/or pcpluscorrection variables to compute additional excess chemical potential functionals. gfcorrection (Default = 0) Compute the Gaussian fluctuation excess chemical potential functional. See \u00a77.1.2 0: Off 1: On pcpluscorrection (Default = 0) Compute the PC+/3D-RISM excess chemical potential functional. See \u00a77.2.4 0: Off 1: On thermo (Default = \"std\") Which thermodynamic equation you want to use to calculate solvation properties. Options are: \"std\": uses the standard closure relation \"gf\": Compute the Gaussian fluctuation excess chemical potential functional \"both\": print out separate sections for all Note Note that all data are printed out for each RISM simulation, so no choice is any more computationally demanding than another. Long-range asymptotics \u00b6 Info Long-range asymptotics are used to analytically account for solvent distribution beyond the solvent box. Long-range asymptotics are always used when calculating a solution but can be omitted for the subsequent thermodynamic calculations, though it is not recommended. noasympcorr (Default = 1) Use long-range asymptotic corrections for thermodynamic calculations. 0: Do not use long-range corrections 1: Use the long-range corrections Implemented in v1.5.0 treeDCF (Default = 1) Use direct sum, or the treecode approximation to calculate the direct correlation function long-range asymptotic correction. 0: Use direct sum 1: Use treecode approximation Implemented in v1.5.0 treeTCF (Default = 1) Use direct sum, or the treecode approximation to calculate the total correlation function long-range asymptotic correction. 0: Use direct sum 1: Use treecode approximation Implemented in v1.5.0 treeCoulomb (Default = 1) Use direct sum, or the treecode approximation to calculate the Coulomb potential energy. 0: Use direct sum 1: Use treecode approximation Implemented in v1.5.0 treeDCFMAC (Default = 0.1) Treecode multipole acceptance criterion for the direct correlation function long-range asymptotic correction. Implemented in v1.5.0 treeTCFMAC (Default = 0.1) Treecode multipole acceptance criterion for the total correlation function long-range asymptotic correction. Implemented in v1.5.0 treeCoulombMAC (Default = 0.1) Treecode multipole acceptance criterion for the Coulomb potential energy. Implemented in v1.5.0 treeDCFOrder (Default = 2) Treecode Taylor series order for the direct correlation function long-range asymptotic correction. Implemented in v1.5.0 treeTCFOrder (Default = 2) Treecode Taylor series order for the total correlation function long-range asymptotic correction. Note that the Taylor expansion used does not converge exactly to the TCF long-range asymptotic correction, so a very high order will not necessarily increase accuracy. Implemented in v1.5.0 treeCoulombOrder (Default = 2) Treecode Taylor series order for the Coulomb potential energy. Implemented in v1.5.0 treeDCFN0 (Default = 500) Maximum number of grid points contained within the treecode leaf clusters for the direct correlation function long-range asymptotic correction. This sets the depth of the hierarchical octtree. Implemented in v1.5.0 treeTCFN0 (Default = 500) Maximum number of grid points contained within the treecode leaf clusters for the total correlation function long-range asymptotic correction. This sets the depth of the hierarchical octtree. Implemented in v1.5.0 treeCoulombN0 (Default = 500) Maximum number of grid points contained within the treecode leaf clusters for the Coulomb potential energy. This sets the depth of the hierarchical octtree. Implemented in v1.5.0 Solvation box \u00b6 Info The non-periodic solvation box super-cell can be defined as variable or fixed in size. When a variable box size is used, the box size will be adjusted to maintain a minimum buffer distance between the atoms of the solute and the box boundary. This has the advantage of maintaining the smallest possible box size while adapting to change of solute shape and orientation. Alternatively, the box size can be specified at run-time. This box size will be used for the duration of the sander calculation. Solvent box dimensions have a strong effect on the numerical precision of 3D-RISM. See \u00a77.2.3 for recommendation on selecting an appropriate box size and resolution. Variable box size \u00b6 Keep in mind It is recommended to avoid specifying a large, prime number of processes (\u2265 7) when using a variable solvation box size. buffer (Default = 14) Minimum distance (in \u00c5) between solute and edge of solvation box. Specify this with grdspc below. Mutually exclusive with ng and solvbox . See \u00a77.2.3 for details on how this affects numerical accuracy and how this interacts with ljTolerance , and tolerance when < 0: Use fixed box size (see ng and solvbox below) when >= 0: Use buffer distance grdspc (Default = 0.5,0.5,0.5) Grid spacing (in \u00c5) of the solvation box. Specify this with buffer above. Mutually exclusive with ng and solvbox . Fixed box size \u00b6 ng (Default = -1,-1,-1) Comma separated number of grid points to use in the x, y, and z directions. Used only if buffer < 0. Mutually exclusive with buffer and grdspc above, and paired with solvbox below. Warning No default, this must be set if buffer < 0. As a general requirement, the number of grids points in each dimension must be divisible by two, and the number of grid points in the z-axis must be divisible by the number of processes. As an example: define like ng=1000,1000,1000 , where all numbers are divisible by two and you can use 1, 2, 4, 5, 8, 10... pocessors, all divisors of 1000 (value in the z-axis). Take into account that at a certain level, running RISM in parallel may actually hurt performance, since previous solutions are used as an initial guess for the next frame, hastening convergence. Running in parallel loses this advantage. Also, due to the overhead involved in which each thread is required to load every topology file when calculating energies, parallel scaling will begin to fall off as the number of threads reaches the number of frames. solvbox (Default = -1,-1,-1) Sets the size in \u00c5 of the fixed size solvation box. Used only if buffer < 0. Mutually exclusive with buffer and grdspc above, and paired with ng above. Warning No default, this must be set if buffer < 0. Define like solvbox=20,20,20 solvcut (Default = 14) Cutoff used for solute-solvent interactions. The default value is that of buffer. Therefore, if you set buffer < 0 and specify ng and solvbox instead, you must set solvcut to a nonzero value; otherwise the program will quit in error. Solution convergence \u00b6 tolerance (Default = 0.00001) A comma-separated list of maximum residual values for solution convergence. This has a strong effect on the cost of 3D-RISM calculations (smaller value for tolerance -> more computation). When used in combination with a list of closures it is possible to define different tolerances for each of the closures. This can be useful for difficult to converge calculations (see \u00a77.4.1 ). For the sake of efficiency, it is best to use as high a tolerance as possible for all but the last closure. See \u00a77.2.3 for details on how this affects numerical accuracy and how this interacts with ljTolerance , buffer , and solvbox . Three formats of list are possible: one tolerance: All closures but the last use a tolerance of 1. The last tolerance in the list is used by the last closure. In practice this is the most efficient. two tolerances: All closures but the last use the first tolerance in the list. The last tolerance in the list is used by the last closure. n tolerances: Tolerances from the list are assigned to the closure list in order. Examples v1.5.2 <v1.5.2 One closure/One tolerance Several closures/One tolerance Several closures/Two tolerances Several closures/Several tolerances closure=\"pse3\", tolerance=0.00001 A tolerance of 0.00001 will be used for clousure \"pse3\" closure=\"kh\",\"pse3\", tolerance=0.00001 A tolerance of 1 will be used for clousure \"kh\", while 0.00001 will be used for clousure \"pse3\". Equivalent to closure=\"kh\", \"pse3\", tolerance=1,0.00001 closure=\"kh\",\"pse2\",\"pse3\", tolerance=0.01,0.00001 A tolerance of 0.01 will be used for clousures \"kh\" and \"pse2\", while 0.00001 will be used for clousure \"pse3\". Equivalent to closure=\"kh\",\"pse2\",\"pse3\", tolerance=0.01,0.01,0.00001 closure=\"kh\",\"pse2\",\"pse3\", tolerance=0.1,0.01,0.00001 A tolerance of 0.1 will be used for clousure \"kh\", 0.01 will be used for clousure \"pse2\", while 0.00001 will be used for clousure \"pse3\". One closure/One tolerance Several closures/One tolerance Several closures/Two tolerances Several closures/Several tolerances closure=\"pse3\", tolerance=0.00001 A tolerance of 0.00001 will be used for clousure \"pse3\" closure=\"kh,pse3\", tolerance=0.00001 A tolerance of 1 will be used for clousure \"kh\", while 0.00001 will be used for clousure \"pse3\". Equivalent to closure=\"kh, pse3\", tolerance=1,0.00001 closure=\"kh,pse2,pse3\", tolerance=0.01,0.00001 A tolerance of 0.01 will be used for clousures \"kh\" and \"pse2\", while 0.00001 will be used for clousure \"pse3\". Equivalent to closure=\"kh,pse2,pse3\", tolerance=0.01,0.01,0.00001 closure=\"kh,pse2,pse3\", tolerance=0.1,0.01,0.00001 A tolerance of 0.1 will be used for clousure \"kh\", 0.01 will be used for clousure \"pse2\", while 0.00001 will be used for clousure \"pse3\". ljTolerance (Default = -1) Lennard-Jones accuracy (Optional.) Determines the Lennard-Jones cutoff distance based on the desired accuracy of the calculation. See \u00a77.2.3 for details on how this affects numerical accuracy and how this interacts with tolerance , buffer , and solvbox . Implemented in v1.5.0 asympKSpaceTolerance (Default = -1) Tolerance reciprocal space long range asymptotics accuracy (Optional.) Determines the reciprocal space long range asymptotic cutoff distance based on the desired accuracy of the calculation. See \u00a77.2.3 for details on how this affects numerical accuracy. Possible values are: when < 0: asympKSpaceTolerance = tolerance/10 when = 0: no cutoff when > 0: given value determines the maximum error in the reciprocal-space long range asymptotics calculations Implemented in v1.5.0 mdiis_del (Default = 0.7) MDIIS step size. Implemented in v1.5.0 mdiis_nvec (Default = 5) Number of previous iterations MDIIS uses to predict a new solution. Implemented in v1.5.0 mdiis_restart (Default = 10) If the current residual is mdiis_restart times larger than the smallest residual in memory, then the MDIIS procedure is restarted using the lowest residual solution stored in memory. Increasing this number can sometimes help convergence. Implemented in v1.5.0 maxstep (Default = 10000) Maximum number of iterations allowed to converge on a solution. Implemented in v1.5.0 npropagate (Default = 5) Number of previous solutions propagated forward to create an initial guess for this solute atom configuration. =0: Do not use any previous solutions = 1..5: Values greater than 0 but less than 4 or 5 will use less system memory but may introduce artifacts to the solution ( e.g. , energy drift). Implemented in v1.5.0 Output \u00b6 polardecomp (Default = 0) Decomposes solvation free energy into polar and non-polar components. Note that this typically requires 80% more computation time. 0: Do not decompose solvation free energy into polar and non-polar components. 1: Decompose solvation free energy into polar and non-polar components. entropicdecomp (Default = 0) Decomposes solvation free energy into energy and entropy components. Also performs temperature derivatives of other calculated quantities. Note that this typically requires 80% more computation time and requires a .xvv file version 1.000 or higher (available within GMXMMPBSA data folder). See \u00a77.1.3 and \u00a77.3 0: No entropic decomposition 1: Entropic decomposition rism_verbose (Default = 0) Level of output in temporary RISM output files. May be helpful for debugging or following convergence. 0: just print the final result 1: additionally prints the total number of iterations for each solution 2: additionally prints the residual for each iteration and details of the MDIIS solver (useful for debugging and convergence analyses) &alanine_scanning namelist variables \u00b6 Keep in mind A default alanine scanning input file can be created as follows: gmx_MMPBSA --create_input ala A sample alanine scanning input file is shown here A tutorial on alanine scanning is available here mutant_res (Default = None. Must be defined) Define the specific residue that is going to be mutated. Use the following format CHAIN/RESNUM ( e.g. : 'A/350') or CHAIN/RESNUM:INSERTION_CODE if applicable ( e.g. : \"A/27:B\"). Important Only one residue can be mutated per calculation! We recommend using the reference structure (-cr) to ensure the perfect match between the selected residue in the defined structure or topology Wehn this varibale is defined, gmx_MMPBSA performs the mutation. This way the user does not have to provide the mutant topology Changed in v1.4.0: Allows mutation in antibodies since it support insertion code notation mutant (Default = \"ALA\") Defines the residue that it is going to be mutated for. Allowed values are: \"ALA\" or \"A\" : Alanine scanning \"GLY\" or \"G\" : Glycine scanning Changed in v1.3.0: Change mol (receptor or ligand) by mutant aminoacid (ALA or GLY) mutant_only (Default = 0) Option to perform specified calculations only for the mutants. 0: Perform calcultion on mutant and original 1: Perform calcultion on mutant only Note Note that all calculation details are controlled in the other namelists, though for alanine scanning to be performed, the namelist must be included (blank if desired) cas_intdiel (Default = 0) The dielectric constant ( intdiel (GB)/ indi (PB)) will be modified depending on the nature of the residue to be mutated. 0: Do not use adaptative intdiel assignation 1: Use adaptative intdiel assignation Important Works with the GB and PB calculations It is ignored when intdiel (GB)/ indi (PB) has been explicitly defined, that is, it is ignored if intdiel != 1.0 / indi != 1.0 (default values) Dielectric constant values has been assigned according to Yan et al., 2017 Implemented in v1.4.2 intdiel_nonpolar (Default = 1) Define the intdiel (GB)/ indi (PB) value for non-polar residues ( PHE , TRP , VAL , ILE , LEU , MET , PRO , CYX , ALA , GLY , PRO ) Implemented in v1.4.2 intdiel_polar (Default = 3) Define the intdiel (GB)/ indi (PB) value for polar residues ( TYR , SER , THR , CYM , CYS , HIE , HID , ASN , GLN , ASH , GLH , LYN ) Implemented in v1.4.2 intdiel_positive (Default = 5) Define the intdiel (GB)/ indi (PB) value for positive charged residues ( LYS , ARG , HIP ) Implemented in v1.4.2 intdiel_negative (Default = 5) Define the intdiel (GB)/ indi (PB) value for negative charged residues ( GLU , ASP ) Implemented in v1.4.2 &decomp namelist variables \u00b6 Keep in mind A default decomp input file can be created as follows: gmx_MMPBSA --create_input decomp A sample decomp input file is shown here A tutorial on binding free energy decomposition is available here idecomp Energy decomposition scheme to use: 1: Per-residue decomp with 1-4 terms added to internal potential terms 2: Per-residue decomp with 1-4 EEL added to EEL and 1-4 VDW added to VDW potential terms 3: Pairwise decomp with 1-4 terms added to internal potential terms 4: Pairwise decomp with 1-4 EEL added to EEL and 1-4 VDW added to VDW potential terms Warning No default. This must be specified! dec_verbose (Default = 0) Set the level of output to print in the decomp_output file. 0: DELTA energy, total contribution only 1: DELTA energy, total, sidechain, and backbone contributions 2: Complex, Receptor, Ligand, and DELTA energies, total contribution only 3: Complex, Receptor, Ligand, and DELTA energies, total, sidechain, and backbone contributions Note If the values 0 or 2 are chosen, only the Total contributions are required, so only those will be printed to the mdout files to cut down on the size of the mdout files and the time required to parse them. print_res (Default = \"within 6\") Select residues whose information is going to be printed in the output file. The default selection should be sufficient in most cases, however we have added several additional notations Selection schemes By Distance (recommended) Amino acid selection All Notation: [ within distance ] within corresponds to the keyword and distance to the maximum distance criterion in \u00c5 necessary to select the residues from both the receptor and the ligand. In case the cutoff used is so small that the number of decomp residues to print < 2, the cutoff value will be increased by 0.1 until the number of decomp residues to print >= 2. Example print_res=\"within 6\" Will print all residues within 6 \u00c5 between receptor and ligand including both. Notation: [ CHAIN /( RESNUM or RESNUM-RESNUM ) ] Print residues individual or ranges. This notation also supports insertion codes, in which case you must define them individually Example print_res=\"A/1,3-10,15,100 B/25\" This will print Chain A residues 1, 3 through 10, 15, and 100 along with chain B residue 25 from the complex topology file and the corresponding residues in either the ligand and/or receptor topology files. Danger make sure to include at least one residue from both the receptor and ligand in the print_res mask of the &decomp section. Check http://archive.ambermd.org/201308/0075.html Suppost that we can have the following sequence where chain A is the receptor and B is the ligand: A:LEU:5, A:GLY:6:A, A:THR:6:B, A:SER:6:C A:ASP:6D, A:ILE:7 , B:25 Supported notation Wrong notation Ranges selection print_res=\"A/5-7 B/25 Will print all mentioned residues because all residues with insertion code are contained in the range Individual selection print_res=\"A/5,6B,6C,7 B/25 Will print all mentioned residues except the residues 6A and 6D from chain A print_res=\"A/5-6B,6D-7 Will end in error. Notation: all will print all residues. This option is often not recommended since most residues contribution is zero and it is just going to be a waste of time and computational resources. Danger Using idecomp=3 or 4 (pairwise) with a very large number of printed residues and a large number of frames can quickly create very, very large temporary mdout files. Large print selections also demand a large amount of memory to parse the mdout files and write decomposition output file (~500 MB for just 250 residues, since that\u2019s 62500 pairs!) It is not unusual for the output file to take a significant amount of time to print if you have a lot of data. This is most applicable to pairwise decomp, since the amount of data scales as O(N 2 ). Important We recommend using the reference structure (-cr) to ensure the perfect match between the selected residue in the defined structure or topology Changed in v1.4.0: Improve residue selection csv_format (Default = 1) Print the decomposition output in a Comma-Separated-Values (CSV) file. CSV files open natively in most spreadsheets. 0: Data to be written out in the standard ASCII format. 1: Data to be written out in a CSV file, and standard error of the mean will be calculated and included for all data. &nmode namelist variables \u00b6 Keep in mind A default nmode input file can be created as follows: gmx_MMPBSA --create_input nmode A sample nmode input file is shown here A tutorial on normal mode analysis is available here Basic input options \u00b6 nmstartframe 2 Frame number to begin performing nmode calculations on nmendframe 2 (Default = 1000000) Frame number to stop performing nmode calculations on nminterval 2 (Default = 1) Offset from which to choose frames to perform nmode calculations on Parameter options \u00b6 nmode_igb (Default = 1) Value for Generalized Born model to be used in calculations. Options are: 0: Vacuum 1: HCT GB model nmode_istrng (Default = 0.0) Ionic strength to use in nmode calculations. Units are Molarity (M). Non-zero values are ignored if nmode_igb is 0 above. dielc (Default = 1.0) Distance-dependent dielectric constant drms (Default = 0.001) Convergence criteria for minimized energy gradient. maxcyc (Default = 10000) Maximum number of minimization cycles to use per snapshot in sander. Sample input files \u00b6 Tip You can refer to the examples to understand the input file in a practical way. GB \u00b6 1 2 3 4 5 6 7 8 9 10 Sample input file for GB calculation building the Amber topologies from structures. Please refer to the section \"How gmx_MMPBSA works\" &general startframe=5, endframe=100, interval=5, verbose=2 / &gb igb=5, saltcon=0.150, / GBNSR6 \u00b6 1 2 3 4 5 6 7 8 9 10 Sample input file for GBNSR6 calculation building the Amber topologies from structures. Please refer to the section \"How gmx_MMPBSA works\" &general startframe=5, endframe=100, interval=5, verbose=2 / &gbnsr6 epsin=1.0, istrng=0.150, / QM/MMGBSA \u00b6 Sample input file for QM/MMGBSA &general startframe=5, endframe=100, interval=5, / &gb igb=5, saltcon=0.100, ifqnt=1, qm_residues=\"A/240-251 B/297\", qm_theory=\"PM3\" / PB \u00b6 1 2 3 4 5 6 7 8 9 10 Sample input file for PB calculation building the Amber topologies from structures. Please refer to the section \"How gmx_MMPBSA works\" &general startframe=5, endframe=100, interval=5 / &pb istrng=0.15, fillratio=4.0 / MMPBSA with membrane proteins \u00b6 Sample input file for MMPBSA with membrane proteins &general startframe=1, endframe=100, interval=1, / &pb memopt=1, emem=7.0, indi=4.0, mctrdz=-10.383, mthick=36.086, poretype=1, radiopt=0, indi=4.0, istrng=0.150, fillratio=1.25, inp=2, sasopt=0, solvopt=2, ipb=1, bcopt=10, nfocus=1, linit=1000, eneopt=1, cutfd=7.0, cutnb=99.0, maxarcdot=15000, npbverb=1, / MM/3D-RISM \u00b6 Sample input file for 3D-RISM &general startframe=20, endframe=100, interval=5, / &rism polardecomp=1, thermo=\"gf\" / Alanine scanning \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 Sample input file for Alanine scanning &general startframe=5, endframe=21, interval=1, PBRadii=4 / &gb igb=8, saltcon=0.150, intdiel=10 / &alanine_scanning mutant='ALA', mutant_res='B:12' / Decomposition analysis \u00b6 Sample input file for decomposition analysis Make sure to include at least one residue from both the receptor and ligand in the print_res mask of the &decomp section. http://archive.ambermd.org/201308/0075.html. This is automally guaranteed when using \"within\" keyword. &general startframe=5, endframe=21, interval=1, / &gb igb=5, saltcon=0.150, / &decomp idecomp=2, dec_verbose=3, # This will print all residues that are less than 4 \u00c5 between # the receptor and the ligand print_res=\"within 4\" / Entropy with NMODE \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for entropy calculations &general startframe=5, endframe=21, interval=1, temperature=298 / &gb igb=2, saltcon=0.150, / &nmode nmstartframe=10, nmendframe=21, nminterval=2, maxcyc=50000, drms=0.0001, / Interaction Entropy \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 Sample input file for entropy calculations &general startframe=5, endframe=21, interval=1, # Interaction Entropy (IE) # (https://pubs.acs.org/doi/abs/10.1021/jacs.6b02682) approximation forcefields=\"oldff/leaprc.ff99SB\", interaction_entropy=1, ie_segment=25, temperature=298 / &gb igb=2, saltcon=0.150, / Info Comments are allowed by placing a # at the beginning of the line (whites-space are ignored). Variable initialization may span multiple lines. In-line comments ( i.e. , putting a # for a comment after a variable is initialized in the same line) is not allowed and will result in an input error. Variable declarations must be comma-delimited, though all whitespace is ignored. Finally, all lines between namelists are ignored, so comments can be added before each namelist without using #. The chain ID is assigned according to two criteria: terminal amino acids and residue numbering . If both criteria or residue numbering changes are present, we assign a new chain ID. If there are terminal amino acids, but the numbering of the residue continues, we do not change the ID of the chain. \u21a9 \u21a9 These variables will choose a subset of the frames chosen from the variables in the &general namelist. Thus, the \"trajectory\" from which snapshots will be chosen for nmode calculations will be the collection of snapshots upon which the other calculations were performed. \u21a9 \u21a9 \u21a9","title":"The input file"},{"location":"input_file/#the-input-file","text":"","title":"The input file"},{"location":"input_file/#description","text":"gmx_MMPBSA input file contains all the specifications for the calculations. The input file is syntactically similar to other programs in Amber, although we incorporated a new format more similar to the one used on GROMACS *.mdp files (see bleow). The input file contains sections called namelist where the variables are defined for each calculation. The allowed namelists are: &general : contains variables that apply to all aspects of the calculation or parameters required for building AMBER topologies from GROMACS files. &gb : unique variables to Generalized Born (GB) calculations. &gbnsr6 : unique variables to GBNSR6 calculations. &pb : unique variables to Poisson Boltzmann (PB) calculations. &rism : unique variables to 3D-RISM calculations. &alanine_scanning : unique variables to alanine scanning calculations. &decomp : unique variables to the decomposition scheme. &nmode : unique variables to the normal mode (NMODE) calculations used to approximate vibrational entropies.","title":"Description"},{"location":"input_file/#generation-of-input-files-with-gmx_mmpbsa","text":"The input file can be created using gmx_MMPBSA by selecting the calculations you want to perform. Command-line gmx_MMPBSA --create_input args where `args` can be: gb, gbnsr6, pb, rism, ala, decomp, nmode, all Example: GB calculation PB calculation GB, PB and Decomposition calculations All calculations gmx_MMPBSA --create_input gb gmx_MMPBSA --create_input pb gmx_MMPBSA --create_input gb pb decomp gmx_MMPBSA --create_input or gmx_MMPBSA --create_input all Danger Note that several variables must be explicitly defined in the input file Implemented in v1.5.0","title":"Generation of input files with gmx_MMPBSA"},{"location":"input_file/#format","text":"All the input variables are described below according to their respective namelists. Descriptions are taken from original sources and modified accordingly when needed. Integers and floating point variables should be typed as-is while strings should be put in either single- or double-quotes. All variables should be set with variable = value and separated by commas is they appear in the same line. If the variables appear in different lines, the comma is no longer needed. See several examples are shown below. As you will see, several calculations can be performed in the same run ( i.e. &gb and &pb ; &gb and &alanine_scanning ; &pb and &decomp ; etc). As we have mentioned, the input file can be generated using the create_input option of gmx_MMPBSA . This style, while retaining the same Amber format (derived from Fortran), is aesthetically more familiar to the GROMACS style ( *.mdp ). However, it maintains the same essence, so it could be defined in any of the two format styles or even combined. See the formats below: New format style Old format style New format style Input file example # General namelist variables &general sys_name = \"\" # System name startframe = 1 # First frame to analyze endframe = 9999999 # Last frame to analyze ... interval = 1 # The offset from which to choose frames from each trajectory file / # Generalized-Born namelist variables &gb igb = 5 # GB model to use ... probe = 1.4 # Solvent probe radius for surface area calc / Old format style Input file example # General namelist variables &general sys_name = \"\", startframe = 1, endframe = 9999999 ... interval = 1 / # Generalized-Born namelist variables &gb igb = 5, ... probe = 1.4 /","title":"Format"},{"location":"input_file/#namelists","text":"","title":"Namelists"},{"location":"input_file/#general-namelist-variables","text":"","title":"&amp;general namelist variables"},{"location":"input_file/#basic-input-options","text":"sys_name (Default = None) Define the System Name. This is useful when trying to analyze several systems at the same time or calculating the correlation between the predicted and the experimental energies. If the name is not defined, one will be assigned when loading the system in gmx_MMPBSA_ana on a first-come, first-served basis. Tip The definition of the system name is entirely optional, however it can provide a better clarity during the results analysis. All files associated with this system will be saved using its name. Implemented in v1.4.0 startframe (Default = 1) The frame from which to begin extracting snapshots from the full, concatenated trajectory comprised of every trajectory file placed on the command-line. This is always the first frame read. endframe (Default = 9999999) The frame from which to stop extracting snapshots from the full, concatenated trajectory comprised of every trajectory file supplied on the command-line. interval (Default = 1) The offset from which to choose frames from each trajectory file. For example, an interval of 2 will pull every 2 nd frame beginning at startframe and ending less than or equal to endframe.","title":"Basic input options"},{"location":"input_file/#parameter-options","text":"forcefields (Default = \"oldff/leaprc.ff99SB,leaprc.gaff\") Comma-separated list of force fields used to build Amber topologies. This variable is more flexible than the previous ones ( protein_forcefield and ligand_forcefield ). The goal of this variable is to provide convenient support for complex systems with several components. It supports all force fields tested in previous protein_forcefield and ligand_forcefield variables. Tip The value of this variable depends on the force field you used for your system in GROMACS You don't need to define forcefields` variable when you using a topology. Please refer to the section \"How gmx_MMPBSA works\" The notation format is the one used in tleap In general, any forcefield present in $AMBERHOME/dat/leap/cmd could be use with forcefields variable. (Check \u00a73 for more information) Be cautious when defining this variable since you can define two forces fields with a similar purpose which can generate inconsistencies. Input files samples: Protein and/or Nucleic acids Protein only Protein + DNA Protein + RNA + Organic mol. Input file with forcefield variable defined for a system with protein and/or nucleic acids &general forcefields=\"oldff/leaprc.ff99SB\" / Input file with forcefield variable defined for a system with only protein &general forcefields=\"leaprc.protein.ff14SB\" / Input file with forcefield variable defined for a system with protein and nucleic acids (DNA) &general forcefields=\"leaprc.protein.ff14SB,leaprc.DNA.bsc1\" / Input file with forcefield variable defined for a system with protein, nucleic acids (RNA) and a organic molecule &general forcefields=\"leaprc.protein.ff14SB,leaprc.RNA.OL3,leaprc.gaff2\" / Forcefields for Protein/Nucleic Acids Name Description \"oldff/leaprc.ff99\" ff99 for proteins and nucleic acids \"oldff/leaprc.ff03\" ff03 (Duan et al.) for proteins and nucleic acids \"oldff/leaprc.ff99SB\" ff99SB for proteins and nucleic acids \"oldff/leaprc.ff99SBildn\" ff99SB modified for the \"ILDN\" changes for proteins and nucleic acids \"oldff/leaprc.ff99bsc0\" ff99SB force field using parmbsc0 for nucleic acid Forcefields only for proteins Name Description \"leaprc.protein.ff14SB\" ff14SB only for proteins \"leaprc.protein.ff19SB\" ff19SB only for proteins Forcefields only for Nucleic Acids Name Description \"leaprc.DNA.bsc1\" ff99bsc0+bsc1 only for DNA \"leaprc.DNA.OL15\" ff99bsc0+OL15 only for DNA \"leaprc.RNA.OL3\" ff99bsc0_chiOL3 only for RNA Forcefields for organic molecules, glycans and zwitterionic amino acids Name Description \"leaprc.gaff\" General Amber Force Field for organic molecules \"leaprc.gaff2\" General Amber Force Field 2 for organic molecules \"leaprc.GLYCAM_06j-1\" Glycam_06j-1 carbohydrate ff ( Compatible with ff12SB and later ) \"leaprc.GLYCAM_06EPb\" GLYCAM-06EPb carbohydrate ff ( Compatible with ff12SB and later ) \"gmxMMPBSA/leaprc.GLYCAM_06h-1\" * GLYCAM-0606h-1 carbohydrate ff ( Compatible with ff99SB and earlier ) \"gmxMMPBSA/leaprc.zaa99SB\" * Force field for Zwitterionic amino acids ( Compatible with ff99SB ) Tip * We added the gmxMMPBSA data to the tleap path. This way, we keep gmx_MMPBSA data separated from Amber's. Implemented in v1.4.1 Modified in v1.4.3: Internal change Updated in v1.5.0: Documentation updated protein_forcefield Define the force field to build Amber topology for protein Removed in v1.5.0: Use forcefields variable ligand_forcefield Define the force field to build Amber topology for ligand (small molecule) Removed in v1.5.0: Use forcefields variable ions_parameters (Default = 1) Define ions parameters to build the Amber topology (see \u00a73.6 ). 1: frcmod.ions234lm_126_tip3p (Li/Merz ion parameters for +2 to +4 ions in TIP3P water (12-6 normal usage set)) 2: frcmod.ions234lm_126_spce (same, but in SPC/E water) 3: frcmod.ions234lm_126_tip4pew (same, but in TIP4P/EW water) 4: frcmod.ions234lm_hfe_tip3p (Li/Merz ion parameters for +2 to +4 ions in TIP3P water (12-6 HFE set)) 5: frcmod.ions234lm_hfe_spce (same, but in SPC/E water) 6: frcmod.ions234lm_hfe_tip4pew (same, but in TIP4P/EW water) 7: frcmod.ions234lm_iod_tip3p (Li/Merz ion parameters for +2 to +4 ions in TIP3P water (12-6 IOD set)) 8: frcmod.ions234lm_iod_spce (same, but in SPC/E water) 9: frcmod.ions234lm_iod_tip4pew (same, but in TIP4P/EW water) 10: frcmod.ionslm_126_opc (Li/Merz ion parameters for -1 to +4 in OPC water (12-6 normal usage set)) 11: frcmod.ionslm_hfe_opc (Li/Merz ion parameters for -1 to +4 in OPC water (12-6 HFE set)) 12: frcmod.ionslm_iod_opc (Li/Merz ion parameters for -1 to +4 in OPC water (12-6 IOD set)) 13: frcmod.ions1lm_126_tip3p (Li/Merz ion parameters for +1 and -1 ions in TIP3P water (12-6 normal usage set)) 14: frcmod.ions1lm_126_spce (same, but in SPC/E water) 15: frcmod.ions1lm_126_tip4pew (same, but in TIP4P/EW water) 16: frcmod.ions1lm_iod (Li/Merz ion parameters for +1/-1 ions in TIP3P, SPC/E, and TIP4P/EW waters (12-6 IOD set)) Keep in mind You don't need to define it when you use a topology. Please refer to the section \"How gmx_MMPBSA works\" This notation is simpler since these parameter files are generally the same for all systems Updated in v1.5.0: Add new ion parameters sets PBRadii (Default = 3) PBRadii to build amber topology files: 1: bondi, recommended when igb = 7 2: mbondi, recommended when igb = 1 3: mbondi2, recommended when igb = 2 or 5 4: mbondi3, recommended when igb = 8 5: mbondi_pb2 mbondi_pb2 radii set This raddi set haven been added in gmx_MMPBSA v1.5.0 . It is based on mbondi radii set and contains a new optimized set of halogen PB radii for halogenated compounds (without extra point (EP) of charge) parametrized with General Amber Force Field (GAFF): Values from Table 3 in \u00a73.1 Halogen Radii Optimization Without EP : Cl: 1.76 Br: 1.97 I: 2.09 Warning Make sure that you installed the updated ParmEd python -m pip install git+https://github.com/ParmEd/ParmEd.git@16fb236 This radii set should be used with the following PBSA setup: Sample input file for PB calculation with halogenated compounds &general sys_name=\"PB_Halogens\", forcefields=\"oldff/leaprc.ff99SB,leaprc.gaff\" PBRadii=5, / &pb radiopt=0, istrng=0.150, inp=1, / 6: mbondi_pb3 mbondi_pb3 radii set This raddi set haven been added in gmx_MMPBSA v1.5.x . It is based on mbondi radii set and contains a new optimized set of halogen PB radii for halogenated compounds (without extra point (EP) of charge) parametrized with General Amber Force Field (GAFF): Values from Table 3 in \u00a73.1 Halogen Radii Optimization Without EP : Cl: 2.20 Br: 2.04 I: 2.19 Warning Make sure that you installed the updated ParmEd python -m pip install git+https://github.com/ParmEd/ParmEd.git@16fb236 This radii set should be used with the following PBSA setup: Sample input file for PB calculation with halogenated compounds &general sys_name=\"PB_Halogens\", forcefields=\"oldff/leaprc.ff99SB,leaprc.gaff\" PBRadii=6, / &pb radiopt=0, istrng=0.150, inp=2, / 7: charmm_radii (compatible only with &pb) charmm_radii radii set This raddi set haven been added in gmx_MMPBSA v1.5.0 . Use only with systems prepared with CHARMM force fields . This atomic radii set for Poisson-Boltzmann calculations has been derived from average solvent electrostatic charge distribution with explicit solvent. The accuracy has been tested with free energy perturbation with explicit solvent. Most of the values were taken from a *radii.str file used in PBEQ Solver in charmm-gui . Radii for protein atoms in 20 standard amino acids from Nina, Belogv, and Roux Radii for nucleic acid atoms (RNA and DNA) from Banavali and Roux Halogens and other atoms from Fortuna and Costa Warning Make sure that you installed the updated ParmEd python -m pip install git+https://github.com/ParmEd/ParmEd.git@16fb236 Updated in v1.5.0: New PB radii sets have been added temperature (Default = 298.15) Specify the temperature (in K) used in the calculations. Implemented in v1.4.0: Replace entropy_temp _Reworked in v1.5.0: Temperature value used not only for entropy but all calculations","title":"Parameter options"},{"location":"input_file/#entropy-options","text":"qh_entropy (Default = 0) It specifies whether to perform a quasi-harmonic entropy (QH) approximation with cpptraj or not. 0: Do not perform QH 1: perform QH Keep in mind The number of frames used for QH analyses should be higher than 3N, N being the number of atoms in the complex Check this thread for more info on QH analysis Implemented in v1.4.2: Equivalent to (Removed) entropy = 1 interaction_entropy (default = 0) It specifies whether to use the Interaction Entropy (IE) approximation. 0: Do not perform IE calculation 1: Perform IE calculation Keep in mind The Interaction Entropy can be calculated independently of the solvent model used. A sample Interaction Entropy input file is shown here A tutorial on the use of Interaction Entropy is available here The standard deviation of the interaction energy ( \u03c3IE ) should always be reported when using the Interaction Entropy method. The Interaction Entropy method should be avoided if \u03c3IE > ~ 3.6 kcal/mol because it is impossible to converge the exponential average. It is advisable to study how the Interaction Entropy depends on N by block averaging (which also provide an estimate of the precision of the calculated entropies). A sampling frequency of 10 fs, as reported in the original IE publication , seems to be 3\u201340 times too dense. A sampling frequency of 0.1 ps would be more appropriate. The Interaction Entropy results may vary depending on the system flexibility or whether constraints were used or not in the MD simulation. Please, check this paper for further details. Implemented in v1.4.2: Equivalent to (Removed) entropy = 2 Updated in v1.5.0: Now reports the \u03c3IE . Chart improved in gmx_MMPBSA_ana ie_segment (Default = 25) Representative segment (in %), starting from the last frame, for the calculation of the Interaction Entropy, e.g. : ie_segment = 25 means that the last quartile of the total number of frames ( (endframe-startframe)/interval ) will be used to calculate the average Interaction Entropy. Implemented in v1.4.2 c2_entropy (default = 0) It specifies whether to use the C2 Entropy approximation. 0: Do not perform C2 calculation 1: Perform C2 calculation Keep in mind The C2 Entropy can be calculated independently of the solvent model used. A tutorial on the use of C2 Entropy is available here The standard deviation of the interaction energy ( \u03c3IE ) should always be reported. The C2 Entropy method should be avoided if \u03c3IE > ~ 3.6 kcal/mol because it gives unrealistically large entropies. It is advisable to study how the C2 Entropy depends on N by block averaging (which also provide an estimate of the precision of the calculated entropies). A sampling frequency of 10 fs, seems to be 3\u201340 times too dense. A sampling frequency of 0.1 ps would be more appropriate. The C2 Entropy results may vary depending on the system flexibility or whether constraints were used or not in the MD simulation. Please, check this paper for further details. Implemented in v1.5.0","title":"Entropy options"},{"location":"input_file/#miscellaneous-options","text":"assign_chainID (Default = 0) Defines the chains ID assignment mode. It is ignored when defining a reference structure (recommended) . If assign_chainID = 1 , gmx_MMPBSA check if the structure has no chains ID, and it is assigned according to the structure 1 . If assign_chainID = 2 , gmx_MMPBSA assign the chains ID, exist or not, according to the structure 1 (can generate inconsistencies). Implemented in v1.2.0 Updated in v1.5.0: Internal changes exp_ki (Default = 0.0) Specify the experimental Ki (in nM) for correlations analysis. If not defined or exp_ki = 0 then this system will be omitted in the correlation analysis Implemented in v1.4.0 full_traj (Default = 0) Print trajectories 0: Print only thread trajectories in *.mdcrd format 1: Print a full traj and the thread trajectories in *.mdcrd format gmx_path Define a path to search for GROMACS executables. This path takes precedence over the path defined in the PATH variable. In this path the following executables will be searched: gmx , gmx_mpi , gmx_d , or gmx_mpi_d (GROMACS > 5.x.x), and make_ndx , editconf and trjconv (GROMACS 4.x.x) Keep in mind This variable is used when the GROMACS used to run the system differs from that of will be used for running the analyses. It takes the path to the GROMACS bin folder where the executables will be searched on. An example of the use of this variable is given below: &general sys_name=\"my_system\", verbose=2, forcefields=\"oldff/leaprc.ff99SBildn\",leaprc.gaff\" gmx_path=\"/home/programs/gromacs/bin\" / &gb igb=5, saltcon=0.150 / # replace this \"/home/programs/gromacs/bin\" with the path to the GROMACS you want to use. Implemented in v1.1.1 keep_files (Default = 2) Specifies which files are kept. 0: Keep only binary file ( COMPACT_gmx_MMPBSA_RESULTS.mmxsa ) 1: Keep all temporary files ( prefix *) 2: Keep all temporary files ( prefix *) and binary file Keep in mind The binary file contains all the information necessary to analyze the data with gmx_MMPBSA_ana. Its use is only recommended in special cases where the original raw data is not present. We recommnend to use keep_files = 1 or keep_files = 2 to avoid errors when using gmx_MMPBSA_ana netcdf (Default = 0) Specifies whether to use NetCDF trajectories internally rather than writing temporary ASCII trajectory files. For very large trajectories, this could offer significant speedups, and requires less temporary space. However, this option is incompatible with alanine scanning. 0: Do NOT use temporary NetCDF trajectories 1: Use temporary NetCDF trajectories solvated_trajectory (Default = 1) Define if it is necessary to generate a clean trajectory with no water and ions. 0: Do not generate clean trajectory 1: Generate clean trajectory Implemented in v1.3.0 Updated in v1.5.0. Bugs fixed use_sander Use sander for energy calculations, even when mmpbsa_py_energy will suffice. Removed in v1.5.0: Now sander is used in all calculations verbose (Default = 1) Specifies how much output is printed in the output file. 0: Print only difference terms 1: Print all complex, receptor, ligand, and difference terms Updated in v1.5.0","title":"Miscellaneous options"},{"location":"input_file/#gb-namelist-variables","text":"Keep in mind A default GB input file can be created as follows: gmx_MMPBSA --create_input gb A sample GB input file is shown here A tutorial on binding free energy calculation with GB model is available here","title":"&amp;gb namelist variables"},{"location":"input_file/#basic-input-options_1","text":"igb (Default = 5) Generalized Born method to use (see \u00a74 for more info). 1: The Hawkins, Cramer, Truhlar pairwise GB model (GB-HCT) 2: Modified GB model 1 developed by A. Onufriev, D. Bashford and D.A. Case (GB-OBC1) 5: Modified GB model 2 developed by A. Onufriev, D. Bashford and D.A. Case (GB-OBC2) 7: GBn model described by Mongan, Simmerling, McCammon, Case and Onufriev (GB-Neck) 8: Same GB functional form as the GBn model (igb=7), but with different parameters. Developed by Nguyen, P\u00e9rez, Bermeo, and Simmerling (GB-Neck2) alpb (Default = 0) Use Analytical Linearized Poisson-Boltzmann (ALPB) approximation to handle electrostatic interactions within the implicit solvent model (see \u00a74.2 ): where \u03b2 = \u03b5 in /\u03b5 ex is the ratio of the internal and external dielectrics, \u03b1=0.571412, and A is the so-called effective electrostatic size of the molecule (see arad_method below). The ALPB requires one of the analytical GB models to be set, that is igb = 1, 2, 5, or 7, for computing the effective Born radii. It uses the same sets of radii as required by the particular GB model. 0: Do not use ALPB 1: Use ALPB arad_method (Default = 1) Method used to estimate the effective electrostatic size/radius ( A in ALPB equation) of the molecule (See Sigalov, Fenley, and Onufriev ). 1: Use structural invariants 2: Use elementary functions 3: Use elliptic integral (numerical) intdiel (Default = 1.0) Define Internal dielectric constant. extdiel (Default = 78.5) Define External dielectric constant. Implemented in v1.5.0: This variable = 80.0 in previous versions saltcon (Default = 0.0) Salt concentration in Molarity (M). rgbmax (Default = 999.0) Distance cutoff in \u00c5 to use when computing effective GB radii. surften (Default = 0.0072) Surface tension value. Units in kcal/mol/\u00c5 2 surfoff (Default = 0.0) Offset to correct (by addition) the value of the non-polar contribution to the solvation free energy term. molsurf (Default = 0) Define the algorithm to calculate the surface area for the non-polar solvation term. 0: Use LCPO (Linear Combination of Pairwise Overlaps) 1: Use molsurf algorithm msoffset (Default = 0) Offset to apply to the individual atomic radii in the system when calculating the molsurf surface. See the description of the molsurf action command in cpptraj . probe (Default = 1.4) Radius in \u00c5 of the probe molecule (supposed to be the size of a solvent molecule), to use when determining the molecular surface. Note Only applicable when molsurf is set to 1","title":"Basic input options"},{"location":"input_file/#qm-options","text":"ifqnt (Default = 0) Specifies whether a part of the system is treated with quantum mechanics. 0: Potential function is strictly classical 1: Use QM/MM Keep in mind Calculations where part of the system is treated with quantum mechanics can be performed only with GB A sample QM/MMGBSA input file is shown here A tutorial on binding free energy calculation with QM/MMGBSA is available here qm_theory Which semi-empirical Hamiltonian should be used for the quantum calculation. Options are PM3 , AM1 , MNDO , PDDG-PM3 , PM3PDDG , PDDG-MNDO , PDDGMNDO , PM3-CARB1 , PM3CARB1 , DFTB , SCC-DFTB , RM1 , PM6 , PM3-ZnB , PM3-MAIS , PM3ZNB , MNDO/D , MNDOD . The dispersion correction can be switched on for AM1 and PM6 by choosing AM1-D* and PM6-D , respectively. The dispersion and hydrogen bond correction will be applied for AM1-DH+ and PM6-DH+ . Danger No qm_theory default, this must be specified if ifqnt = 1. qm_residues Complex residues to treat with quantum mechanics. All residues treated with quantum mechanics in the complex must be treated with quantum mechanics in the receptor or ligand to obtain meaningful results. This notation is the same used for print_res variable in &decomp namelist. Danger No qm_residues default, this must be specified if ifqnt = 1 except when using user defined masks. Selection schemes By Distance (recommended) Amino acid selection Notation: [ within distance ] within corresponds to the keyword and distance to the maximum distance criterion in \u00c5 necessary to select the residues from both the receptor and the ligand. In case the cutoff used is so small that the number of qm_residues = 0, the cutoff value will be increased by 0.1 until the number of qm_residues > 0. Example qm_residues=\"within 5\" Residues within 5 \u00c5 between receptor and ligand will be treated with quantum mechanic. Notation: [ CHAIN /( RESNUM or RESNUM-RESNUM ) ] Treat with quantum mechanics residues individual or ranges. This notation also supports insertion codes, in which case you must define them individually qm_residues=\"A/1,3-10,15,100\" This treat with quantum mechanic Chain A residues 1, 3 through 10, 15, and 100 from the complex topology file and the corresponding residues in either the ligand and/or receptor topology files. Let's suppose that we can have the following sequence: - A:LEU:5 - A:GLY:6:A - A:THR:6:B - A:SER:6:C - A:ASP:6:D - A:ILE:7 with the format CHAIN / RESNUMBER : INSERTION_CODE Right notation Wrong notation Ranges selection qm_residues=\"A/5-7 Will treat with quantum mechanic all mentioned residues because all residues with insertion code are contained in the range Individual selection qm_residues=\"A/5,6B,6C,7 Will treat with quantum mechanic all mentioned residues except the residues 6A and 6D from chain A Multiple chain selection qm_residues=\"A/5-10,100 B/34,56 Will treat with quantum mechanic residues 5 through 10, and 100 from chain A, and residues 34 and 56 from Chain B. qm_residues=\"A/5-6B,6D-7 Will end in error. com_qmmask (Default = '') Amber mask specifying the quantum atoms in the complex. If defined, residues selected with qm_residues variable are ignored. When using user defined masks, com_qmmask , rec_qmmask , and lig_qmmask must be defined. Danger When using user defined masks, automatic assigment of qmcharge_com is overrided and default or user defined qmcharge_com is used. rec_qmmask (Default = '') Amber mask specifying the quantum atoms in the receptor. When using user defined masks, com_qmmask , rec_qmmask , and lig_qmmask must be defined. Danger When using user defined masks, automatic assigment of qmcharge_rec is overrided and default or user defined qmcharge_rec is used. lig_qmmask (Default = '') Amber mask specifying the quantum atoms in the receptor. When using user defined masks, com_qmmask , rec_qmmask , and lig_qmmask must be defined. Danger When using user defined masks, automatic assigment of qmcharge_lig is overrided and default or user defined qmcharge_lig is used. qmcharge_com (Default = 0) The charge of the quantum section for the complex. qmcharge_com is automatically assigned based on the selection qm_residues . When using user defined masks, automatic assigment of qmcharge_com is overrided and default or user defined qmcharge_com is used. qmcharge_rec (Default = 0) The charge of the quantum section for the receptor. qmcharge_rec is automatically assigned based on the selection qm_residues . When using user defined masks, automatic assigment of qmcharge_rec is overrided and default or user defined qmcharge_rec is used. qmcharge_lig (Default = 0) The charge of the quantum section for the ligand. qmcharge_lig is automatically assigned based on the selection qm_residues . When using user defined masks, automatic assigment of qmcharge_lig is overrided and default or user defined qmcharge_lig is used. qmcut (Default = 9999.0) The cutoff for the qm/mm charge interactions. scfconv (Default = 1.0e-8) Controls the convergence criteria for the SCF calculation, in kcal/mol. The tighter the convergence the longer the calculation will take. Values tighter than 1.0e-11 are not recommended as these can lead to oscillations in the SCF, due to limitations in machine precision, that can lead to convergence failures. writepdb (Default = 1) Write a PDB file of the selected QM region. This option is designed to act as an aid to the user to allow easy checking of what atoms were included in the QM region. Write a PDB file of the atoms in the QM region on the very first step to a file named qmmm_region.pdb. 0: Do not write a PDB file of the selected QM region 1: Write a PDB file of the selected QM region peptide_corr (Default = 0) Apply MM correction to peptide linkages. This correction is of the form: where \u03d5 is the dihedral angle of the H-N-C-O linkage and h type is a constant dependent on the Hamiltonian used. Recommended, except for DFTB/SCC-DFTB. 0: Do not apply a MM correction to peptide linkages 1: Apply a MM correction to peptide linkages verbosity (Default = 0) Controls the verbosity of QM/MM related output. Values of 2 or higher will produce a lot of output. 0: only minimal information is printed - Initial QM geometry and link atom positions as well as the SCF energy at every ntpr steps. 1: Print SCF energy at every step to many more significant figures than usual. Also print the number of SCF cycles needed on each step. 2: As 1 and also print info about memory reallocations, number of pairs per QM atom, QM core - QM core energy, QM core - MM atom energy, and total energy. 3: As 2 and also print SCF convergence information at every step. 4: As 3 and also print forces on the QM atoms due to the SCF calculation and the coordinates of the link atoms at every step. 5: As 4 and also print all of the info in kJ/mol as well as kcal/mol.","title":"QM options"},{"location":"input_file/#gbnsr6-namelist-variables","text":"Keep in mind GBNSR6 is an implementation of the Generalized Born (GB) model in which the effective Born radii are computed numerically, via the so-called \"R6\" integration ( ref. ) over molecular surface of the solute. In contrast to most GB practical models, GBNSR6 model is parameter free in the same sense as the numerical PB framework is. Thus, accuracy of GBNSR6 relative to the PB standard is virtually unaffected by the choice of input atomic radii. Check Chapter \u00a75 in Amber manual for a more thorough description of the GBNSR6 model and its parameters. A default GBNSR6 input file can be created as follows: gmx_MMPBSA --create_input gbnsr6 A sample GBNSR6 input file is shown here A tutorial on binding free energy calculation with GBNSR6 model is available here","title":"&amp;gbnsr6 namelist variables"},{"location":"input_file/#basic-input-options_2","text":"epsin (Default = 1.0) Dielectric constant of the solute region. epsout (Default = 78.5) Implicit solvent dielectric constant for the solvent. istrng (Default = 0.0) Ionic strength in M for the GBNSR6 equation. dprob (Default = 1.4) Radius of the solvent probe. cavity_surften (Default = 0.005) Surface tension parameter for nonpolar solvation calculation.","title":"Basic input options"},{"location":"input_file/#options-to-select-numerical-procedures","text":"space (Default = 0.5) Sets the grid spacing that determines the resolution of the solute molecular surface. Note that memory footprint of this grid-based implementation of GBNSR6 may become large for large structures, e.g. the nucleosome (about 25,000 atoms) will take close to 2 GB of RAM when the default grid spacing is used. For very large structures, one may consider increasing the value of space, which will reduce the memory footprint and execution time; however, the accuracy will also decrease. arcres (Default = 0.2) Arc resolution used for numerical integration over molecular surface. b (Default = 0.028) Specifies the value of uniform offset to the (inverse) effective radii, the default value 0.028 gives better agreement with the PB model, regardless of the structure size. For best agreement with the explicit solvent (TIP3P) solvation energies, optimal value of B depends on the structure size: for small molecules (number of atoms less than 50), B=0 is recommended. With -chagb option, B is calculated automatically based on the solute size. alpb (Default = 0) Specifies if ALBP correction is to be used. 0: Use canonical GB (default) 1: Use ALPB approximation","title":"Options to select numerical procedures"},{"location":"input_file/#options-for-chagb-model","text":"chagb (Default = 0) Define if CHAGB is used. 0: Do not use CHAGB. 1: Use CHAGB. rs (Default = 0.52) Dielectric boundary shift compared to the molecular surface. radiopt (Default = 0) Set of intrinsic atomic radii to be used. 0: uses hardcoded intrisic radii optimized for small drug like molecules, and single amino acid dipeptides ( ref. ) 1: intrinsic radii are read from the topology file. Note that the dielectric surface defined using these radii is then shifted outwards by Rs relative to the molecular surface. The option is not recommended unless you are planning to re-optimize the input radii set for your problem. roh (Default = 1) Sets the value of R z OH for CHAGB model, the default is 0.586\u00c5. This parameter defines which explicit water model is being mimicked with respect to its propensity to cause charge hydration asymmetry. A perfectly tetrahedral water , which can not cause charge hydration asymmetry, would have R z OH = 0. The options for roh are: 1: R z OH = 0.586\u00c5 corresponds to TIP3P and SPC/E. 2: R z OH = 0.699\u00c5 for OPC. 3: R z OH = 0.734\u00c5 for TIP4P 4: R z OH = 0.183\u00c5 for TIP5P/E. tau (Default = 1.47) Value of \u03c4 in the CHAGB model. This dimensionless parameter controls the effective range of the neighboring charges ( j ) affecting the CHA of atom ( i ), see ( ref. ) for details.","title":"Options for CHAGB model"},{"location":"input_file/#pb-namelist-variables","text":"Keep in mind gmx_MMPBSA uses sander to perform PB calculations. sander offers access to all pbsa functionalities. The default values for the variables described below are appropriate for most calculations on solvated molecular systems. Also note that the default options may have changed over time. A more thorough description of all the options can be found here . For a detailed discussion of all related options on the quality of the MM/PB(GB)SA calculations, please check this publication . A default PB input file can be created as follows: gmx_MMPBSA --create_input pb A sample PB input file is shown here A tutorial on binding free energy calculation with PB model is available here","title":"&amp;pb namelist variables"},{"location":"input_file/#basic-input-options_3","text":"ipb (Default = 2) Option to set up a dielectric model for all numerical PB procedures. ipb = 1 corresponds to a classical geometric method, while a level-set based algebraic method is used when ipb > 2 . 0: No electrostatic solvation free energy is computed. 1: The dielectric interface between solvent and solute is built with a geometric approach. ( ref. ) 2: The dielectric interface is implemented with the level set function. Use of a level set function simplifies the calculation of the intersection points of the molecular surface and grid edges and leads to more stable numerical calculations. ( ref. ) 4: The dielectric interface is also implemented with the level set function. However, the linear equations on the grid points nearby the dielectric boundary are constructed using the IIM. In this option, The dielectric constant do not need to be smoothed, that is, smoothopt is useless. Only the linear PB equation is supported, that is, npbopt = 0 . Starting from the Amber 2018 release, solvopt is no longer relevant as only one stable solver is supported. ( ref. ) 6: The dielectric interface is implemented analytically with the revised density function approach ( sasopt = 2 ). The linear equations on the irregular points are constructed using the IIM and fully utilizing the analytical surface. Otherwise, it is exactly the same as ipb = 4 . ( ref. ) 7: The dielectric interface is implemented analytically with the revised density function approach ( sasopt = 2 ). The linear equations on the irregular points are constructed using the \u03a7-factor harmonic average method. ( ref. ) 8: The dielectric interface is implemented analytically with the revised density function approach ( sasopt = 2 ). The linear equations on the irregular points are constructed using the secondorder harmonic average method. ( ref. ) inp (Default = 2) Option to select different methods to compute non-polar solvation free energy. 1: The total non-polar solvation free energy is modeled as a single term linearly proportional to the solvent accessible surface area ( ref. ). When using inp = 1 : sprob is reset to 1.4 cavity_surften is reset to 0.005 cavity_offset is reset to 0.000 2: The total non-polar solvation free energy is modeled as two terms: the cavity term and the dispersion term. The dispersion term is computed with a surface-based integration method ( ref. ) closely related to the PCM solvent for quantum chemical programs. ( ref. ) Under this framework, the cavity term is still computed as a term linearly proportional to the molecular solvent-accessible-surface area (SASA) or the molecular volume enclosed by SASA. Keep in mind Sometimes, high values for the solvation energy are obtained using inp=2 . Check this section to see a workaround. sander_apbs (Default = 0) Option to use APBS for PB calculation instead of the built-in PBSA solver. This will work only through the iAPBS interface built into sander.APBS . Instructions for this can be found online at the iAPBS/APBS websites. 0: Do not use sander.APBS 1: Use sander.APBS","title":"Basic input options"},{"location":"input_file/#options-to-define-the-physical-constants","text":"indi (Default = 1.0) Internal dielectric constant. This corresponds to epsin in pbsa . exdi (Default = 80.0) External dielectric constant. This corresponds to epsout in pbsa . emem (Default = 4.0) Sets the membrane dielectric constant. Only used if memopt > 0, does nothing otherwise. Value used should be between indi and exdi or there may be errors. This corresponds to epsmem in pbsa . smoothopt (Default = 1) Instructs PB how to set up dielectric values for finite-difference grid edges that are located across the solute/solvent dielectric boundary. 0: The dielectric constants of the boundary grid edges are always set to the equal-weight harmonic average of indi and exdi . 1: A weighted harmonic average of indi and exdi is used for boundary grid edges. The weights for indi and exdi are fractions of the boundary grid edges that are inside or outside the solute surface. ( ref. ) 2: The dielectric constants of the boundary grid edges are set to either indi or exdi depending on whether the midpoints of the grid edges are inside or outside the solute surface. Implemented in v1.5.0 istrng (Default = 0.0) Ionic strength in Molarity (M). It is converted to mM for PBSA and kept as M for APBS . radiopt (Default = 1) The option to set up atomic radii. 0: Use radii from the prmtop file for both the PB calculation and for the non-polar calculation (see inp ) 1: Use atom-type/charge-based radii by Tan and Luo ( ref. ) for the PB calculation. Note that the radii are optimized for Amber atom types as in standard residues from the Amber database and should work fine for standard complexes such as protein-protein, protein-DNA. On the other hand, if a molecule in your system was built by antechamber, i.e. , if GAFF atom types are used, or any other extrenal software, radii from the prmtop file should be used ( radiopt = 0 ). Check this thread for more info. prbrad (Default = 1.4) Solvent probe radius (in \u00c5). Allowed values are 1.4 and 1.6. This corresponds to dprob in pbsa . iprob (Default = 2.0) Mobile ion probe radius (in \u00c5) for ion accessible surface used to define the Stern layer. Implemented in v1.5.0 sasopt (Default = 0) Option to determine which kind of molecular surfaces to be used in the Poisson-Boltzmann implicit solvent model. 0: Use the solvent excluded surface as implemented by ( ref. ) 1: Use the solvent accessible surface. Apparently, this reduces to the van der Waals surface when the prbrad is set to zero. 2: Use the smooth surface defined by a revised density function. ( ref. ) This must be combined with `ipb > 2. arcres (Default = 0.25) The arcres keyword gives the resolution (in \u00c5) of dots used to represent solvent accessible arcs. More generally, arcres should be set to max(0.125 \u00c5, 0.5h) (h is the grid spacing). ( ref. ) Implemented in v1.5.0","title":"Options to define the physical constants"},{"location":"input_file/#options-for-implicit-membranes","text":"memopt (Default = 0) Option to turn the implicit membrane on and off. The membrane is implemented as a slab like region with a uniform or heterogeneous dielectric constant depth profile. Details of the implicit membrane setup can be found here . 0: No implicit membrane used. 1: Use a uniform membrane dielectric constant in a slab-like implicit membrane. ( ref. ) 2: Use a heterogeneous membrane dielectric constant in a slab-like implicit membrane. The dielectric constant varies with depth from a value of 1 in the membrane center to 80 at the membrane periphery. The dielectric constant depth profile was implemented using the PCHIP fitting. ( ref. ) 3: Use a heterogeneous membrane dielectric constant in a slab-like implicit membrane. The dielectric constant varies with depth from a value of 1 in the membrane center to 80 at the membrane periphery. The dielectric constant depth profile was implemented using the Spline fitting. ( ref. ) Keep in mind Calculations for implicit membranes can be performed only with PB A sample input file is shown here A tutorial on binding free energy calculation for membrane proteins is available here Check this thread for more info on Parameters for Implicit Membranes mprob (Default = 2.70) Membrane probe radius (in \u00c5). This is used to specify the highly different lipid molecule accessibility versus that of the water. ( ref. ) Implemented in v1.5.0 mthick (Default = 40) Membrane thickness (in \u00c5). This is different from the previous default of 20 \u00c5. mctrdz (Default = 0.0) Membrane center (in \u00c5) in the z direction. poretype (Default = 1) Turn on and off the automatic depth-first search method to identify the pore. ( ref. ) 0: Do not turn on the pore searching algorithm. 1: Turn on the pore searching algorithm.","title":"Options for implicit membranes"},{"location":"input_file/#options-to-select-numerical-procedures_1","text":"npbopt (Default = 0) Option to select the linear, or the full nonlinear PB equation. 0: Linear PB equation (LPBE) is solved 1: Nonlinear PB equation (NLPBE) is solved Note While the linear PB equation (see tutorial ) will suffice for most calculations, the nonlinear PB equation (see tutorial ) is recommended for highly charged systems. Parameters such as eneopt or cutnb should be adjusted accordingly when using the NLPBE. Check the following threads ( T1 and T2 ) on how to proceed when using NLPBE. Last but not least, take into account that using NLPBE can significantly increase the calculation time required for PB calculation. Implemented in v1.5.0 solvopt (Default = 1) Option to select iterative solvers. 1 Modified ICCG or Periodic (PICCG) if bcopt = 10 . 2 Geometric multigrid. A four-level v-cycle implementation is applied by default. 3 Conjugate gradient (Periodic version available under bcopt = 10 ). This option requires a large linit to converge. 4 SOR. This option requires a large linit to converge. 5 Adaptive SOR. This is only compatible with npbopt = 1 . This option requires a large linit converge. ( ref. ) 6 Damped SOR. This is only compatible with npbopt = 1 . This option requires a large linit to converge. ( ref. ) accept (Default = 0.001) Sets the iteration convergence criterion (relative to the initial residue). Implemented in v1.5.0 linit (Default = 1000) Sets the maximum number of iterations for the finite difference solvers. Note that linit has to be set to a much larger value, e.g. 10000, for the less efficient solvers, such as conjugate gradient and SOR, to converge. This corresponds to maxitn in pbsa . fillratio (Default = 4.0) The ratio between the longest dimension of the rectangular finite-difference grid and that of the solute. For macromolecules is fine to use 4, or a smaller value like 2. A default value of 4 is large enough to be used for a small solute, such as a ligand molecule. Using a smaller value for fillratio may cause part of the small solute to lie outside the finite-difference grid, causing the finite-difference solvers to fail. scale (Default = 2.0) Resolution of the Poisson Boltzmann grid. It is equal to the reciprocal of the grid spacing ( space in pbsa ). nbuffer (Default = 0) Sets how far away (in grid units) the boundary of the finite difference grid is away from the solute surface; i.e. , automatically set to be at least a solvent probe or ion probe (diameter) away from the solute surface. Implemented in v1.5.0 nfocus (Default = 2) Set how many successive FD calculations will be used to perform an electrostatic focussing calculation on a molecule. When nfocus = 1, no focusing is used. It is recommended that nfocus = 1 when the multigrid solver is used. fscale (Default = 8) Set the ratio between the coarse and fine grid spacings in an electrostatic focussing calculation. Implemented in v1.5.0 npbgrid (Default = 1) Sets how often the finite-difference grid is regenerated. Implemented in v1.5.0","title":"Options to select numerical procedures"},{"location":"input_file/#options-to-compute-energy-and-forces","text":"bcopt (Default = 5) Boundary condition options. 1: Boundary grid potentials are set as zero, i.e. conductor. Total electrostatic potentials and energy are computed. 5: Computation of boundary grid potentials using all grid charges. Total electrostatic potentials and energy are computed. 6: Computation of boundary grid potentials using all grid charges. Reaction field potentials and energy are computed with the charge singularity free formalism. ( ref. ) 10: Periodic boundary condition is used. Total electrostatic potentials and energy are computed. Can be used with solvopt = 1, 2, 3, or 4 and ipb = 1 or 2 . It should only be used on charge-neutral systems. If the system net charge is detected to be nonzero, it will be neutralized by applying a small neutralizing charge on each grid ( i.e. a uniform plasma) before solving. eneopt (Default = 2) Option to compute total electrostatic energy and forces. 1: Compute total electrostatic energy and forces with the particle-particle particle-mesh (P3M) procedure outlined in Lu and Luo. ( ref. ) In doing so, energy term EPB in the output file is set to zero, while EEL includes both the reaction field energy and the Coulombic energy. The van der Waals energy is computed along with the particle-particle portion of the Coulombic energy. The electrostatic forces and dielectric boundary forces can also be computed. ( ref. ) This option requires a nonzero cutnb and bcopt = 5 for soluble proteins / bcopt = 10 for membrane proteins. 2: Use dielectric boundary surface charges to compute the reaction field energy. Both the Coulombic energy and the van der Waals energy are computed via summation of pairwise atomic interactions. Energy term EPB in the output file is the reaction field energy. EEL is the Coulombic energy. 3: Similar to the first option above, a P3M procedure is applied for both solvation and Coulombic energy and forces for larger systems. 4: Similar to the third option above, a P3M procedure for the full nonlinear PB equation is applied for both solvation and Coulombic energy and forces for larger systems. A more robust and clean set of routines were used for the P3M and dielectric surface force calculations. frcopt (Default = 0) Option to compute and output electrostatic forces to a file named force.dat in the working directory. 0: Do not compute or output atomic and total electrostatic forces. 1: Reaction field forces are computed by trilinear interpolation. Dielectric boundary forces are computed using the electric field on dielectric boundary. The forces are output in the unit of kcal/mol\u00b7\u00c5. 2: Use dielectric boundary surface polarized charges to compute the reaction field forces and dielectric boundary forces ( ref. ) The forces are output in the unit of kcal/mol\u00b7\u00c5. 3: Reaction field forces are computed using dielectric boundary polarized charge. Dielectric boundary forces are computed using the electric field on dielectric boundary. ( ref. ) The forces are output in kcal/mol\u00b7\u00c5. scalec (Default = 0) Option to compute reaction field energy and forces. 0: Do not scale dielectric boundary surface charges before computing reaction field energy and forces. 1: Scale dielectric boundary surface charges using Gauss\u2019s law before computing reaction field energy and forces. Implemented in v1.5.0 cutfd (Default = 5.0) Atom-based cutoff distance to remove short-range finite-difference interactions, and to add pairwise charge-based interactions. This is used for both energy and force calculations. See Eqn (20) in Lu and Luo. ( ref. ) cutnb (Default = 0.0) Atom-based cutoff distance for van der Waals interactions, and pairwise Coulombic interactions when eneopt = 2. When cutnb is set to the default value of 0, no cutoff will be used for van der Waals and Coulombic interactions, i.e. , all pairwise interactions will be included. When eneopt = 1 , this is the cutoff distance used for van der Waals interactions only. The particle-particle portion of the Coulombic interactions is computed with the cutoff of cutfd ._ nsnba (Default = 1) Sets how often (steps) atom-based pairlist is generated. Implemented in v1.5.0","title":"Options to compute energy and forces"},{"location":"input_file/#options-to-select-a-non-polar-solvation-treatment","text":"decompopt (Default = 2) Option to select different decomposition schemes when inp = 2 . See ( ref. ) for a detailed discussion of the different schemes. The \u03c3 decomposition scheme is the best of the three schemes studied. ( ref. ) As discussed in ( ref. ), decompopt = 1 is not a very accurate approach even if it is more straightforward to understand the decomposition. 1: Use the 6/12 decomposition scheme 2: Use the \u03c3 decomposition scheme 3: Use the WCA decomposition scheme Implemented in v1.5.0 use_rmin (Default = 1) The option to set up van der Waals radii. The default is to use van der Waals rmin to improve the agreement with TIP3P. ( ref. ) 0: Use atomic van der Waals \u03c3 values. 1: Use atomic van der Waals rmin values. Implemented in v1.5.0 sprob (Default = 0.557) Solvent probe radius (in \u00c5) for solvent accessible surface area (SASA) used to compute the dispersion term, default to 0.557 \u00c5 in the \u03c3 decomposition scheme as optimized in ( ref. ) with respect to the TIP3P solvent and the PME treatment. Recommended values for other decomposition schemes can be found in Table 4 of ( ref. ). If use_sav = 0 (see below), sprob can be used to compute SASA for the cavity term as well. Unfortunately, the recommended value is different from that used in the dispersion term calculation as documented in ( ref. ). Thus, two separate calculations are needed when use_sav = 0 , one for the dispersion term and one for the cavity term. Therefore, please carefully read ( ref. ) before proceeding with the option of use_sav = 0 . Note that sprob was used for ALL three terms of solvation free energies, i.e. , electrostatic, attractive, and repulsive terms in previous releases in Amber. However, it was found in the more recent study ( ref. ) that it was impossible to use the same probe radii for all three terms after each term was calibrated and validated with respect to the TIP3P solvent. ( ref. ) Implemented in v1.5.0 vprob (Default = 1.300) Solvent probe radius (in \u00c5) for molecular volume (the volume enclosed by SASA) used to compute non-polar cavity solvation free energy, default to 1.300 \u00c5, the value optimized in ( ref. ) with respect to the TIP3P solvent. Recommended values for other decomposition schemes can be found in Tables 1-3 of ( ref. ). Implemented in v1.5.0 rhow_effect (Default = 1.129) Effective water density used in the non-polar dispersion term calculation, default to 1.129 for decompopt = 2 , the \u03c3 scheme. This was optimized in ( ref. ) with respect to the TIP3P solvent in PME. Optimized values for other decomposition schemes can be found in Table 4 of ( ref. ). Implemented in v1.5.0 use_sav (Default = 1) The option to use molecular volume (the volume enclosed by SASA) or to use molecular surface (SASA) for cavity term calculation. Recent study shows that the molecular volume approach transfers better from small training molecules to biomacromolecules. 0: Use SASA to estimate cavity free energy 1: Use the molecular volume enclosed by SASA Implemented in v1.5.0 cavity_surften (Default = 0.0378) The regression coefficient for the linear relation between the total non-polar solvation free energy ( inp = 1), or the cavity free energy ( inp = 2 ) and SASA/volume enclosed by SASA. The default value is for inp = 2 and set to the best of three tested schemes as reported in ( ref. ), i.e. decompopt = 2 , use_rmin = 1 , and use_sav = 1 . See recommended values in Tables 1-3 for other schemes. cavity_offset (Default = -0.5692) The regression offset for the linear relation between the total non-polar solvation free energy ( inp = 1), or the cavity free energy ( inp = 2 ) and SASA/volume enclosed by SASA. The default value is for inp = 2 and set to the best of three tested schemes as reported in ( ref. ), i.e. decompopt = 2 , use_rmin = 1 , and use_sav = 1 . See recommended values in Tables 1-3 for other schemes. maxsph (Default = 400) Approximate number of dots to represent the maximum atomic solvent accessible surface. These dots are first checked against covalently bonded atoms to see whether any of the dots are buried. The exposed dots from the first step are then checked against a non-bonded pair list with a cutoff distance of 9 \u00c5 to see whether any of the exposed dots from the first step are buried. The exposed dots of each atom after the second step then represent the solvent accessible portion of the atom and are used to compute the SASA of the atom. The molecular SASA is simply a summation of the atomic SASA\u2019s. A molecular SASA is used for both PB dielectric map assignment and for NP calculations. Implemented in v1.5.0 maxarcdot (Default = 1500) Number of dots used to store arc dots per atom.","title":"Options to select a non-polar solvation treatment"},{"location":"input_file/#options-for-output","text":"npbverb (Default = 0) Verbose mode. 0: Off 1: On Implemented in v1.5.0","title":"Options for output"},{"location":"input_file/#rism-namelist-variables","text":"Keep in mind A default 3drism input file can be created as follows: gmx_MMPBSA --create_input rism 3D-RISM calculations are performed with the rism3d.snglpnt program built with AmberTools, written by Tyler Luchko. It is the most expensive, yet most statistical mechanically rigorous solvation model. See Introduction to RISM for a thorough description RISM theory. General workflow for using 3D-RISM Practical considerations on: Computational Requirements and Parallel Scaling of RISM Numerical Accuracy of RISM Convergence issues A sample 3drism input file is shown here A tutorial on binding free energy calculation with 3D-RISM is available here We have included more variables in 3D-RISM calculations than the ones available in the MMPBSA.py original code. That way, users can be more in control and tackle various issues ( e.g. , convergence issues). One advantage of 3D-RISM is that an arbitrary solvent can be chosen; you just need to change the xvvfile specified on the command line (see -xvvfile flag in gmx_MMPBSA command line . The default solvent is $AMBERHOME/AmberTools/test/rism1d/tip3p-kh/tip3p.xvv.save . In case this file doesn't exist, a copy path_to_GMXMMPBSA/data/xvv_files/tip3p.xvv is used. You can find examples of precomputed .xvv files for SPC/E and TIP3P water in $AMBERHOME/AmberTools/test/rism1d or path_to_GMXMMPBSA/data/xvv_files folders.","title":"&amp;rism namelist variables"},{"location":"input_file/#closure-approximations","text":"closure (Default = \"kh\") Comma separate list of closure approximations. If more than one closure is provided, the 3D-RISM solver will use the closures in order to obtain a solution for the last closure in the list when no previous solutions are available. The solution for the last closure in the list is used for all output. The use of several closures combined with different tolerances can be useful to overcome convergence issues (see \u00a77.3.1 ) \"kh\": Kovalenko-Hirata \"hnc\": Hyper-netted chain equation \"psen\": Partial Series Expansion of order-n where \u201cn\u201d is a positive integer ( e.g. , \"pse3\") Examples === \"v1.5.2\" === \"One closure\" closure=\"pse3\" === \"Several closures\" closure=\"kh\",\"pse3\" === \"< v1.5.2\" === \"One closure\" closure=\"pse3\" === \"Several closures\" closure=\"kh,pse3\"","title":"Closure approximations"},{"location":"input_file/#solvation-free-energy-corrections","text":"v1.5.2 < v1.5.2 Info The thermo variable has been removed in v1.5.2. Now the standard closure relation is always reported. Use gfcorrection and/or pcpluscorrection variables to compute additional excess chemical potential functionals. gfcorrection (Default = 0) Compute the Gaussian fluctuation excess chemical potential functional. See \u00a77.1.2 0: Off 1: On pcpluscorrection (Default = 0) Compute the PC+/3D-RISM excess chemical potential functional. See \u00a77.2.4 0: Off 1: On thermo (Default = \"std\") Which thermodynamic equation you want to use to calculate solvation properties. Options are: \"std\": uses the standard closure relation \"gf\": Compute the Gaussian fluctuation excess chemical potential functional \"both\": print out separate sections for all Note Note that all data are printed out for each RISM simulation, so no choice is any more computationally demanding than another.","title":"Solvation free energy corrections"},{"location":"input_file/#long-range-asymptotics","text":"Info Long-range asymptotics are used to analytically account for solvent distribution beyond the solvent box. Long-range asymptotics are always used when calculating a solution but can be omitted for the subsequent thermodynamic calculations, though it is not recommended. noasympcorr (Default = 1) Use long-range asymptotic corrections for thermodynamic calculations. 0: Do not use long-range corrections 1: Use the long-range corrections Implemented in v1.5.0 treeDCF (Default = 1) Use direct sum, or the treecode approximation to calculate the direct correlation function long-range asymptotic correction. 0: Use direct sum 1: Use treecode approximation Implemented in v1.5.0 treeTCF (Default = 1) Use direct sum, or the treecode approximation to calculate the total correlation function long-range asymptotic correction. 0: Use direct sum 1: Use treecode approximation Implemented in v1.5.0 treeCoulomb (Default = 1) Use direct sum, or the treecode approximation to calculate the Coulomb potential energy. 0: Use direct sum 1: Use treecode approximation Implemented in v1.5.0 treeDCFMAC (Default = 0.1) Treecode multipole acceptance criterion for the direct correlation function long-range asymptotic correction. Implemented in v1.5.0 treeTCFMAC (Default = 0.1) Treecode multipole acceptance criterion for the total correlation function long-range asymptotic correction. Implemented in v1.5.0 treeCoulombMAC (Default = 0.1) Treecode multipole acceptance criterion for the Coulomb potential energy. Implemented in v1.5.0 treeDCFOrder (Default = 2) Treecode Taylor series order for the direct correlation function long-range asymptotic correction. Implemented in v1.5.0 treeTCFOrder (Default = 2) Treecode Taylor series order for the total correlation function long-range asymptotic correction. Note that the Taylor expansion used does not converge exactly to the TCF long-range asymptotic correction, so a very high order will not necessarily increase accuracy. Implemented in v1.5.0 treeCoulombOrder (Default = 2) Treecode Taylor series order for the Coulomb potential energy. Implemented in v1.5.0 treeDCFN0 (Default = 500) Maximum number of grid points contained within the treecode leaf clusters for the direct correlation function long-range asymptotic correction. This sets the depth of the hierarchical octtree. Implemented in v1.5.0 treeTCFN0 (Default = 500) Maximum number of grid points contained within the treecode leaf clusters for the total correlation function long-range asymptotic correction. This sets the depth of the hierarchical octtree. Implemented in v1.5.0 treeCoulombN0 (Default = 500) Maximum number of grid points contained within the treecode leaf clusters for the Coulomb potential energy. This sets the depth of the hierarchical octtree. Implemented in v1.5.0","title":"Long-range asymptotics"},{"location":"input_file/#solvation-box","text":"Info The non-periodic solvation box super-cell can be defined as variable or fixed in size. When a variable box size is used, the box size will be adjusted to maintain a minimum buffer distance between the atoms of the solute and the box boundary. This has the advantage of maintaining the smallest possible box size while adapting to change of solute shape and orientation. Alternatively, the box size can be specified at run-time. This box size will be used for the duration of the sander calculation. Solvent box dimensions have a strong effect on the numerical precision of 3D-RISM. See \u00a77.2.3 for recommendation on selecting an appropriate box size and resolution.","title":"Solvation box"},{"location":"input_file/#variable-box-size","text":"Keep in mind It is recommended to avoid specifying a large, prime number of processes (\u2265 7) when using a variable solvation box size. buffer (Default = 14) Minimum distance (in \u00c5) between solute and edge of solvation box. Specify this with grdspc below. Mutually exclusive with ng and solvbox . See \u00a77.2.3 for details on how this affects numerical accuracy and how this interacts with ljTolerance , and tolerance when < 0: Use fixed box size (see ng and solvbox below) when >= 0: Use buffer distance grdspc (Default = 0.5,0.5,0.5) Grid spacing (in \u00c5) of the solvation box. Specify this with buffer above. Mutually exclusive with ng and solvbox .","title":"Variable box size"},{"location":"input_file/#fixed-box-size","text":"ng (Default = -1,-1,-1) Comma separated number of grid points to use in the x, y, and z directions. Used only if buffer < 0. Mutually exclusive with buffer and grdspc above, and paired with solvbox below. Warning No default, this must be set if buffer < 0. As a general requirement, the number of grids points in each dimension must be divisible by two, and the number of grid points in the z-axis must be divisible by the number of processes. As an example: define like ng=1000,1000,1000 , where all numbers are divisible by two and you can use 1, 2, 4, 5, 8, 10... pocessors, all divisors of 1000 (value in the z-axis). Take into account that at a certain level, running RISM in parallel may actually hurt performance, since previous solutions are used as an initial guess for the next frame, hastening convergence. Running in parallel loses this advantage. Also, due to the overhead involved in which each thread is required to load every topology file when calculating energies, parallel scaling will begin to fall off as the number of threads reaches the number of frames. solvbox (Default = -1,-1,-1) Sets the size in \u00c5 of the fixed size solvation box. Used only if buffer < 0. Mutually exclusive with buffer and grdspc above, and paired with ng above. Warning No default, this must be set if buffer < 0. Define like solvbox=20,20,20 solvcut (Default = 14) Cutoff used for solute-solvent interactions. The default value is that of buffer. Therefore, if you set buffer < 0 and specify ng and solvbox instead, you must set solvcut to a nonzero value; otherwise the program will quit in error.","title":"Fixed box size"},{"location":"input_file/#solution-convergence","text":"tolerance (Default = 0.00001) A comma-separated list of maximum residual values for solution convergence. This has a strong effect on the cost of 3D-RISM calculations (smaller value for tolerance -> more computation). When used in combination with a list of closures it is possible to define different tolerances for each of the closures. This can be useful for difficult to converge calculations (see \u00a77.4.1 ). For the sake of efficiency, it is best to use as high a tolerance as possible for all but the last closure. See \u00a77.2.3 for details on how this affects numerical accuracy and how this interacts with ljTolerance , buffer , and solvbox . Three formats of list are possible: one tolerance: All closures but the last use a tolerance of 1. The last tolerance in the list is used by the last closure. In practice this is the most efficient. two tolerances: All closures but the last use the first tolerance in the list. The last tolerance in the list is used by the last closure. n tolerances: Tolerances from the list are assigned to the closure list in order. Examples v1.5.2 <v1.5.2 One closure/One tolerance Several closures/One tolerance Several closures/Two tolerances Several closures/Several tolerances closure=\"pse3\", tolerance=0.00001 A tolerance of 0.00001 will be used for clousure \"pse3\" closure=\"kh\",\"pse3\", tolerance=0.00001 A tolerance of 1 will be used for clousure \"kh\", while 0.00001 will be used for clousure \"pse3\". Equivalent to closure=\"kh\", \"pse3\", tolerance=1,0.00001 closure=\"kh\",\"pse2\",\"pse3\", tolerance=0.01,0.00001 A tolerance of 0.01 will be used for clousures \"kh\" and \"pse2\", while 0.00001 will be used for clousure \"pse3\". Equivalent to closure=\"kh\",\"pse2\",\"pse3\", tolerance=0.01,0.01,0.00001 closure=\"kh\",\"pse2\",\"pse3\", tolerance=0.1,0.01,0.00001 A tolerance of 0.1 will be used for clousure \"kh\", 0.01 will be used for clousure \"pse2\", while 0.00001 will be used for clousure \"pse3\". One closure/One tolerance Several closures/One tolerance Several closures/Two tolerances Several closures/Several tolerances closure=\"pse3\", tolerance=0.00001 A tolerance of 0.00001 will be used for clousure \"pse3\" closure=\"kh,pse3\", tolerance=0.00001 A tolerance of 1 will be used for clousure \"kh\", while 0.00001 will be used for clousure \"pse3\". Equivalent to closure=\"kh, pse3\", tolerance=1,0.00001 closure=\"kh,pse2,pse3\", tolerance=0.01,0.00001 A tolerance of 0.01 will be used for clousures \"kh\" and \"pse2\", while 0.00001 will be used for clousure \"pse3\". Equivalent to closure=\"kh,pse2,pse3\", tolerance=0.01,0.01,0.00001 closure=\"kh,pse2,pse3\", tolerance=0.1,0.01,0.00001 A tolerance of 0.1 will be used for clousure \"kh\", 0.01 will be used for clousure \"pse2\", while 0.00001 will be used for clousure \"pse3\". ljTolerance (Default = -1) Lennard-Jones accuracy (Optional.) Determines the Lennard-Jones cutoff distance based on the desired accuracy of the calculation. See \u00a77.2.3 for details on how this affects numerical accuracy and how this interacts with tolerance , buffer , and solvbox . Implemented in v1.5.0 asympKSpaceTolerance (Default = -1) Tolerance reciprocal space long range asymptotics accuracy (Optional.) Determines the reciprocal space long range asymptotic cutoff distance based on the desired accuracy of the calculation. See \u00a77.2.3 for details on how this affects numerical accuracy. Possible values are: when < 0: asympKSpaceTolerance = tolerance/10 when = 0: no cutoff when > 0: given value determines the maximum error in the reciprocal-space long range asymptotics calculations Implemented in v1.5.0 mdiis_del (Default = 0.7) MDIIS step size. Implemented in v1.5.0 mdiis_nvec (Default = 5) Number of previous iterations MDIIS uses to predict a new solution. Implemented in v1.5.0 mdiis_restart (Default = 10) If the current residual is mdiis_restart times larger than the smallest residual in memory, then the MDIIS procedure is restarted using the lowest residual solution stored in memory. Increasing this number can sometimes help convergence. Implemented in v1.5.0 maxstep (Default = 10000) Maximum number of iterations allowed to converge on a solution. Implemented in v1.5.0 npropagate (Default = 5) Number of previous solutions propagated forward to create an initial guess for this solute atom configuration. =0: Do not use any previous solutions = 1..5: Values greater than 0 but less than 4 or 5 will use less system memory but may introduce artifacts to the solution ( e.g. , energy drift). Implemented in v1.5.0","title":"Solution convergence"},{"location":"input_file/#output","text":"polardecomp (Default = 0) Decomposes solvation free energy into polar and non-polar components. Note that this typically requires 80% more computation time. 0: Do not decompose solvation free energy into polar and non-polar components. 1: Decompose solvation free energy into polar and non-polar components. entropicdecomp (Default = 0) Decomposes solvation free energy into energy and entropy components. Also performs temperature derivatives of other calculated quantities. Note that this typically requires 80% more computation time and requires a .xvv file version 1.000 or higher (available within GMXMMPBSA data folder). See \u00a77.1.3 and \u00a77.3 0: No entropic decomposition 1: Entropic decomposition rism_verbose (Default = 0) Level of output in temporary RISM output files. May be helpful for debugging or following convergence. 0: just print the final result 1: additionally prints the total number of iterations for each solution 2: additionally prints the residual for each iteration and details of the MDIIS solver (useful for debugging and convergence analyses)","title":"Output"},{"location":"input_file/#alanine_scanning-namelist-variables","text":"Keep in mind A default alanine scanning input file can be created as follows: gmx_MMPBSA --create_input ala A sample alanine scanning input file is shown here A tutorial on alanine scanning is available here mutant_res (Default = None. Must be defined) Define the specific residue that is going to be mutated. Use the following format CHAIN/RESNUM ( e.g. : 'A/350') or CHAIN/RESNUM:INSERTION_CODE if applicable ( e.g. : \"A/27:B\"). Important Only one residue can be mutated per calculation! We recommend using the reference structure (-cr) to ensure the perfect match between the selected residue in the defined structure or topology Wehn this varibale is defined, gmx_MMPBSA performs the mutation. This way the user does not have to provide the mutant topology Changed in v1.4.0: Allows mutation in antibodies since it support insertion code notation mutant (Default = \"ALA\") Defines the residue that it is going to be mutated for. Allowed values are: \"ALA\" or \"A\" : Alanine scanning \"GLY\" or \"G\" : Glycine scanning Changed in v1.3.0: Change mol (receptor or ligand) by mutant aminoacid (ALA or GLY) mutant_only (Default = 0) Option to perform specified calculations only for the mutants. 0: Perform calcultion on mutant and original 1: Perform calcultion on mutant only Note Note that all calculation details are controlled in the other namelists, though for alanine scanning to be performed, the namelist must be included (blank if desired) cas_intdiel (Default = 0) The dielectric constant ( intdiel (GB)/ indi (PB)) will be modified depending on the nature of the residue to be mutated. 0: Do not use adaptative intdiel assignation 1: Use adaptative intdiel assignation Important Works with the GB and PB calculations It is ignored when intdiel (GB)/ indi (PB) has been explicitly defined, that is, it is ignored if intdiel != 1.0 / indi != 1.0 (default values) Dielectric constant values has been assigned according to Yan et al., 2017 Implemented in v1.4.2 intdiel_nonpolar (Default = 1) Define the intdiel (GB)/ indi (PB) value for non-polar residues ( PHE , TRP , VAL , ILE , LEU , MET , PRO , CYX , ALA , GLY , PRO ) Implemented in v1.4.2 intdiel_polar (Default = 3) Define the intdiel (GB)/ indi (PB) value for polar residues ( TYR , SER , THR , CYM , CYS , HIE , HID , ASN , GLN , ASH , GLH , LYN ) Implemented in v1.4.2 intdiel_positive (Default = 5) Define the intdiel (GB)/ indi (PB) value for positive charged residues ( LYS , ARG , HIP ) Implemented in v1.4.2 intdiel_negative (Default = 5) Define the intdiel (GB)/ indi (PB) value for negative charged residues ( GLU , ASP ) Implemented in v1.4.2","title":"&amp;alanine_scanning namelist variables"},{"location":"input_file/#decomp-namelist-variables","text":"Keep in mind A default decomp input file can be created as follows: gmx_MMPBSA --create_input decomp A sample decomp input file is shown here A tutorial on binding free energy decomposition is available here idecomp Energy decomposition scheme to use: 1: Per-residue decomp with 1-4 terms added to internal potential terms 2: Per-residue decomp with 1-4 EEL added to EEL and 1-4 VDW added to VDW potential terms 3: Pairwise decomp with 1-4 terms added to internal potential terms 4: Pairwise decomp with 1-4 EEL added to EEL and 1-4 VDW added to VDW potential terms Warning No default. This must be specified! dec_verbose (Default = 0) Set the level of output to print in the decomp_output file. 0: DELTA energy, total contribution only 1: DELTA energy, total, sidechain, and backbone contributions 2: Complex, Receptor, Ligand, and DELTA energies, total contribution only 3: Complex, Receptor, Ligand, and DELTA energies, total, sidechain, and backbone contributions Note If the values 0 or 2 are chosen, only the Total contributions are required, so only those will be printed to the mdout files to cut down on the size of the mdout files and the time required to parse them. print_res (Default = \"within 6\") Select residues whose information is going to be printed in the output file. The default selection should be sufficient in most cases, however we have added several additional notations Selection schemes By Distance (recommended) Amino acid selection All Notation: [ within distance ] within corresponds to the keyword and distance to the maximum distance criterion in \u00c5 necessary to select the residues from both the receptor and the ligand. In case the cutoff used is so small that the number of decomp residues to print < 2, the cutoff value will be increased by 0.1 until the number of decomp residues to print >= 2. Example print_res=\"within 6\" Will print all residues within 6 \u00c5 between receptor and ligand including both. Notation: [ CHAIN /( RESNUM or RESNUM-RESNUM ) ] Print residues individual or ranges. This notation also supports insertion codes, in which case you must define them individually Example print_res=\"A/1,3-10,15,100 B/25\" This will print Chain A residues 1, 3 through 10, 15, and 100 along with chain B residue 25 from the complex topology file and the corresponding residues in either the ligand and/or receptor topology files. Danger make sure to include at least one residue from both the receptor and ligand in the print_res mask of the &decomp section. Check http://archive.ambermd.org/201308/0075.html Suppost that we can have the following sequence where chain A is the receptor and B is the ligand: A:LEU:5, A:GLY:6:A, A:THR:6:B, A:SER:6:C A:ASP:6D, A:ILE:7 , B:25 Supported notation Wrong notation Ranges selection print_res=\"A/5-7 B/25 Will print all mentioned residues because all residues with insertion code are contained in the range Individual selection print_res=\"A/5,6B,6C,7 B/25 Will print all mentioned residues except the residues 6A and 6D from chain A print_res=\"A/5-6B,6D-7 Will end in error. Notation: all will print all residues. This option is often not recommended since most residues contribution is zero and it is just going to be a waste of time and computational resources. Danger Using idecomp=3 or 4 (pairwise) with a very large number of printed residues and a large number of frames can quickly create very, very large temporary mdout files. Large print selections also demand a large amount of memory to parse the mdout files and write decomposition output file (~500 MB for just 250 residues, since that\u2019s 62500 pairs!) It is not unusual for the output file to take a significant amount of time to print if you have a lot of data. This is most applicable to pairwise decomp, since the amount of data scales as O(N 2 ). Important We recommend using the reference structure (-cr) to ensure the perfect match between the selected residue in the defined structure or topology Changed in v1.4.0: Improve residue selection csv_format (Default = 1) Print the decomposition output in a Comma-Separated-Values (CSV) file. CSV files open natively in most spreadsheets. 0: Data to be written out in the standard ASCII format. 1: Data to be written out in a CSV file, and standard error of the mean will be calculated and included for all data.","title":"&amp;decomp namelist variables"},{"location":"input_file/#nmode-namelist-variables","text":"Keep in mind A default nmode input file can be created as follows: gmx_MMPBSA --create_input nmode A sample nmode input file is shown here A tutorial on normal mode analysis is available here","title":"&amp;nmode namelist variables"},{"location":"input_file/#basic-input-options_4","text":"nmstartframe 2 Frame number to begin performing nmode calculations on nmendframe 2 (Default = 1000000) Frame number to stop performing nmode calculations on nminterval 2 (Default = 1) Offset from which to choose frames to perform nmode calculations on","title":"Basic input options"},{"location":"input_file/#parameter-options_1","text":"nmode_igb (Default = 1) Value for Generalized Born model to be used in calculations. Options are: 0: Vacuum 1: HCT GB model nmode_istrng (Default = 0.0) Ionic strength to use in nmode calculations. Units are Molarity (M). Non-zero values are ignored if nmode_igb is 0 above. dielc (Default = 1.0) Distance-dependent dielectric constant drms (Default = 0.001) Convergence criteria for minimized energy gradient. maxcyc (Default = 10000) Maximum number of minimization cycles to use per snapshot in sander.","title":"Parameter options"},{"location":"input_file/#sample-input-files","text":"Tip You can refer to the examples to understand the input file in a practical way.","title":"Sample input files"},{"location":"input_file/#gb","text":"1 2 3 4 5 6 7 8 9 10 Sample input file for GB calculation building the Amber topologies from structures. Please refer to the section \"How gmx_MMPBSA works\" &general startframe=5, endframe=100, interval=5, verbose=2 / &gb igb=5, saltcon=0.150, /","title":"GB"},{"location":"input_file/#gbnsr6","text":"1 2 3 4 5 6 7 8 9 10 Sample input file for GBNSR6 calculation building the Amber topologies from structures. Please refer to the section \"How gmx_MMPBSA works\" &general startframe=5, endframe=100, interval=5, verbose=2 / &gbnsr6 epsin=1.0, istrng=0.150, /","title":"GBNSR6"},{"location":"input_file/#qmmmgbsa","text":"Sample input file for QM/MMGBSA &general startframe=5, endframe=100, interval=5, / &gb igb=5, saltcon=0.100, ifqnt=1, qm_residues=\"A/240-251 B/297\", qm_theory=\"PM3\" /","title":"QM/MMGBSA"},{"location":"input_file/#pb","text":"1 2 3 4 5 6 7 8 9 10 Sample input file for PB calculation building the Amber topologies from structures. Please refer to the section \"How gmx_MMPBSA works\" &general startframe=5, endframe=100, interval=5 / &pb istrng=0.15, fillratio=4.0 /","title":"PB"},{"location":"input_file/#mmpbsa-with-membrane-proteins","text":"Sample input file for MMPBSA with membrane proteins &general startframe=1, endframe=100, interval=1, / &pb memopt=1, emem=7.0, indi=4.0, mctrdz=-10.383, mthick=36.086, poretype=1, radiopt=0, indi=4.0, istrng=0.150, fillratio=1.25, inp=2, sasopt=0, solvopt=2, ipb=1, bcopt=10, nfocus=1, linit=1000, eneopt=1, cutfd=7.0, cutnb=99.0, maxarcdot=15000, npbverb=1, /","title":"MMPBSA with membrane proteins"},{"location":"input_file/#mm3d-rism","text":"Sample input file for 3D-RISM &general startframe=20, endframe=100, interval=5, / &rism polardecomp=1, thermo=\"gf\" /","title":"MM/3D-RISM"},{"location":"input_file/#alanine-scanning","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 Sample input file for Alanine scanning &general startframe=5, endframe=21, interval=1, PBRadii=4 / &gb igb=8, saltcon=0.150, intdiel=10 / &alanine_scanning mutant='ALA', mutant_res='B:12' /","title":"Alanine scanning"},{"location":"input_file/#decomposition-analysis","text":"Sample input file for decomposition analysis Make sure to include at least one residue from both the receptor and ligand in the print_res mask of the &decomp section. http://archive.ambermd.org/201308/0075.html. This is automally guaranteed when using \"within\" keyword. &general startframe=5, endframe=21, interval=1, / &gb igb=5, saltcon=0.150, / &decomp idecomp=2, dec_verbose=3, # This will print all residues that are less than 4 \u00c5 between # the receptor and the ligand print_res=\"within 4\" /","title":"Decomposition analysis"},{"location":"input_file/#entropy-with-nmode","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for entropy calculations &general startframe=5, endframe=21, interval=1, temperature=298 / &gb igb=2, saltcon=0.150, / &nmode nmstartframe=10, nmendframe=21, nminterval=2, maxcyc=50000, drms=0.0001, /","title":"Entropy with NMODE"},{"location":"input_file/#interaction-entropy","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 Sample input file for entropy calculations &general startframe=5, endframe=21, interval=1, # Interaction Entropy (IE) # (https://pubs.acs.org/doi/abs/10.1021/jacs.6b02682) approximation forcefields=\"oldff/leaprc.ff99SB\", interaction_entropy=1, ie_segment=25, temperature=298 / &gb igb=2, saltcon=0.150, / Info Comments are allowed by placing a # at the beginning of the line (whites-space are ignored). Variable initialization may span multiple lines. In-line comments ( i.e. , putting a # for a comment after a variable is initialized in the same line) is not allowed and will result in an input error. Variable declarations must be comma-delimited, though all whitespace is ignored. Finally, all lines between namelists are ignored, so comments can be added before each namelist without using #. The chain ID is assigned according to two criteria: terminal amino acids and residue numbering . If both criteria or residue numbering changes are present, we assign a new chain ID. If there are terminal amino acids, but the numbering of the residue continues, we do not change the ID of the chain. \u21a9 \u21a9 These variables will choose a subset of the frames chosen from the variables in the &general namelist. Thus, the \"trajectory\" from which snapshots will be chosen for nmode calculations will be the collection of snapshots upon which the other calculations were performed. \u21a9 \u21a9 \u21a9","title":"Interaction Entropy"},{"location":"installation/","text":"Installing gmx_MMPBSA \u00b6 Requirements \u00b6 gmx_MMPBSA requires GROMACS (series 4.x.x or 5.x.x or 20xx.x ) and AmberTools20 or 21 to be installed in your machine with Python3 . gmx_MMPBSA has been tested with GROMACS 4.6.7 , 5.1.2 , 2018.3 , 2020.4 and 2022.4 , although it should run smoothly with any GROMACS present in the PATH and that is compatible with the files you are using. Installing gmx_MMPBSA v1.5.x \u00b6 Danger gmx_MMPBSA v1.5.x includes a number of new functionalities and parts of the code have been completely rewritten, hence it is incompatible with previous versions. Currently, gmx_MMPBSA can be installed using two ways: conda environment The conda environment provides a clean and efficient way of installing gmx_MMPBSA. It also allows to have different versions of gmx_MMPBSA in isolated environments, thus reducing the possibility of incompatibility with other packages. Installation time is also less since it does not require the compilation of AmberTools or GROMACS. ( Recommended, especially if you want to keep older versions of gmx_MMPBSA ) AmberTools compilation In this way, we assume that you have AmberTools compiled on your machine and that you want to do an installation without worrying about enabling or disabling conda environments. It also involves user compilation of GROMACS, which takes considerable installation time. This way also requires installed packages to be compatible and installation errors are more frequent. Installation conda environment AmberTools compilation Miniconda Installation Important Make sure to have conda installed in your computer. Check the third tab \"Miniconda installation\" for more info. *.yml file pip Installing gmx_MMPBSA using a yml file. Download env.yml file // Create a new environment and use the *.yml file to install dependencies $ conda env create -n gmxMMPBSA --file env.yml // To use gmx_MMPBSA, just activate the environment $ conda activate gmxMMPBSA Copy described intructions conda env create -n gmxMMPBSA --file env.yml # (1) conda activate gmxMMPBSA # (2) Create the gmxMMPBSA environment and use the *.yml file to install dependencies Activate gmxMMPBSA environment Installing dependencies // Update conda $ conda update conda // Create a new environment and activate it $ conda create -n gmxMMPBSA python = 3 .10 -y -q $ conda activate gmxMMPBSA // Install mpi4py and AmberTools $ conda install -c conda-forge \"mpi4py<=3.1.5\" \"ambertools<=23.3\" -y -q // Install PyQt6 required to use the GUI analyzer tool (gmx_MMPBSA_ana). Not needed for HPC $ python -m pip install \"pyqt6<=6.6.1\" // (Optional) Install GROMACS $ conda install -c conda-forge \"gromacs<=2023.4\" pocl -y -q Copy described intructions conda update conda conda create -n gmxMMPBSA python = 3 .10 -y -q # (1) conda activate gmxMMPBSA # (2) conda install -c conda-forge \"mpi4py<=3.1.5\" \"ambertools<=23.3\" -y -q # (3) python -m pip install \"pyqt6<=6.6.1\" # (4) # Optional conda install -c conda-forge \"gromacs<=2023.4\" pocl -y -q # (5) Create gmxMMPBSA environment Activate gmxMMPBSA environment Install dependencies Install PyQt6 if you will use gmx_MMPBSA_ana (Optional) Install GROMACS if GROMACS is not installed in your machine Rolling/stable release development version INSTALLATION // INSTALLATION $ python -m pip install gmx_MMPBSA UPDATE // UPDATE $ python -m pip install gmx_MMPBSA -U Info Install/update gmx_MMPBSA from PyPI. PyPI has the latest version of gmx_MMPBSA including stable and beta versions. INSTALLATION // INSTALLATION $ python -m pip install git+https://github.com/Valdes-Tresanco-MS/gmx_MMPBSA UPDATE // UPDATE $ python -m pip install git+https://github.com/Valdes-Tresanco-MS/gmx_MMPBSA -U Warning Install gmx_MMPBSA from the master branch of GitHub repository. This is only recommended for testing new versions or temporary solutions to reported bugs. Follow the oficial AmberTools installation according to your OS Note We asume that AmberTools and their shell environment are correctly configured Rolling/stable release development version INSTALLATION // Install gmx_MMPBSA $ amber.python -m pip install gmx_MMPBSA UPDATE // Update gmx_MMPBSA $ amber.python -m pip install gmx_MMPBSA -U Info Install gmx_MMPBSA from PyPI PyPI has the latest version of gmx_MMPBSA including stable and beta versions. INSTALLATION // Install gmx_MMPBSA $ amber.python -m pip install git+https://github.com/Valdes-Tresanco-MS/gmx_MMPBSA UPDATE amber.python -m pip install git+https://github.com/Valdes-Tresanco-MS/gmx_MMPBSA -U Warning Install/update gmx_MMPBSA from the master branch of GitHub repository. This version is only recommended to test a new version or to try temporary solutions to reported bugs. Danger If you get an error related to installing mpi4py , you may want to install this package manually from conda-forge as follows: amber.conda install -c conda-forge mpi4py=3.1.3 If you get an error related to pip , you may want to install this package manually as follows: amber.conda install pip Download and install Miniconda $ curl -O https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh ---> 100 % $ chmod +x Miniconda3-latest-Linux-x86_64.sh $ ./Miniconda3-latest-Linux-x86_64.sh ---> 100 % Successful miniconda intallation Copy described intructions curl -O https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh # (1) chmod +x Miniconda3-latest-Linux-x86_64.sh # (2) ./Miniconda3-latest-Linux-x86_64.sh # (3) Download Miniconda installer Change permissions for the installer Execute and install miniconda Extra Dependencies \u00b6 gmx_MMPBSA uses some dependencies for other functions independent of calculations or in some cases they may be necessary due to the nature of your OS. ParmEd The current version of ParmEd implemented in AmberTools has some limitations that have been resolved in the GitHub repository by its author Jason Swails and others with our help. Some of these limitations are: Error reading topology when it has insertion codes Error processing topologies generated with the Amber ff19SB force field New PBRadii sets for GAFF and CHARMM force fields Danger The gmx_MMPBSA installation process has been optimized to be as straightforward as possible. In rare cases, a few extra dependencies may be needed. pip In some cases, the miniconda environment created in the AmberTools compilation does not have the pip module, so any installation that depends on this package will fail. Required only if you did not install gmx_MMPBSA via conda amber.conda install pip Git Used by gmx_MMPBSA_test to download the GitHub repository to get the examples' folder or to install the development version. conda install -c anaconda git or sudo apt install git mpi In some cases it is necessary to install the MPI dependencies. Required only if you did not install gmx_MMPBSA via conda sudo apt install openmpi-bin libopenmpi-dev openssh-client libxcb If you get an error related to Qt plugins sudo apt install --reinstall libxcb-xinerama0 Troubleshooting after installation \u00b6 Once the installation is completed, the following warning may appear: WARNING: The scripts gmx_MMPBSA, gmx_MMPBSA_ana and gmx_MMPBSA_test are installed in '/home/user/path_to_amber_install/amber20/miniconda/bin' which is not on PATH. This warning is because pip installs the executables ( gmx_MMPBSA , gmx_MMPBSA_ana and gmx_MMPBSA_test ) in installation_path/amber20/miniconda/bin . You have two options to solve this: Add this folder (*/amber20/miniconda/bin) to PATH: export PATH=\"/path_to_amber_install/amber20/miniconda/bin:$PATH\" Tip This option is more permanent and is recommended if you don't want to activate and deactivate the conda environment Make sure to update path_to_amber_install in the PATH variable Initializing the environment of conda amber: amber.conda init bash You can deactivate like this: conda deactivate Note After using one of the above options, you should be able to run gmx_MMPBSA , gmx_MMPBSA_ana and gmx_MMPBSA_test through the terminal If when running gmx_MMPBSA , you get an error like this: ModuleNotFoundError: No module named 'parmed' please see the following issue to see the solution Autocompletion script \u00b6 Since gmx_MMPBSA has many flags, we believe that this autocompletion can significantly improve productivity, be more user-friendly and reduce the number of unforced errors. That is why we created this script, which manages the autocompletion of the gmx_MMPBSA , gmx_MMPBSA_ana and gmx_MMPBSA_test . Execution: Enter the following command in the terminal: source /path/to/ambertools/lib/python3.x/site-packages/GMXMMPBSA/GMXMMPBSA.sh Tip If you want it to be activated automatically, add that command to your .bashrc Warning This script requires that gmx_MMPBSA , gmx_MMPBSA_ana and gmx_MMPBSA_test be accessible in PATH If the command-line above end in error, please make sure the file has executed permissions. On Ubuntu, Debian, Linux Mint or related: GUI: Right-click on GMXMMPBSA.sh file > Properties > Permissions > Mark the checkbox \"Allow to execute the file as a program\" Terminal: chmod 755 /path/to/ambertools/lib/python3.x/site-packages/GMXMMPBSA/GMXMMPBSA.sh Once you make the source of GMXMMPBSA.sh you can check its operation as follows: All you have to do is enter the name of the program in the terminal and press the tab key twice: gmx_MMPBSA <tab> <tab> Testing the operation of gmx_MMPBSA \u00b6 After preparing everything to run gmx_MMPBSA , it only remains to check its correct operation. To know how to do it, consult the documentation of gmx_MMPBSA_test","title":"Installation"},{"location":"installation/#installing-gmx_mmpbsa","text":"","title":"Installing gmx_MMPBSA"},{"location":"installation/#requirements","text":"gmx_MMPBSA requires GROMACS (series 4.x.x or 5.x.x or 20xx.x ) and AmberTools20 or 21 to be installed in your machine with Python3 . gmx_MMPBSA has been tested with GROMACS 4.6.7 , 5.1.2 , 2018.3 , 2020.4 and 2022.4 , although it should run smoothly with any GROMACS present in the PATH and that is compatible with the files you are using.","title":"Requirements"},{"location":"installation/#installing-gmx_mmpbsa-v15x","text":"Danger gmx_MMPBSA v1.5.x includes a number of new functionalities and parts of the code have been completely rewritten, hence it is incompatible with previous versions. Currently, gmx_MMPBSA can be installed using two ways: conda environment The conda environment provides a clean and efficient way of installing gmx_MMPBSA. It also allows to have different versions of gmx_MMPBSA in isolated environments, thus reducing the possibility of incompatibility with other packages. Installation time is also less since it does not require the compilation of AmberTools or GROMACS. ( Recommended, especially if you want to keep older versions of gmx_MMPBSA ) AmberTools compilation In this way, we assume that you have AmberTools compiled on your machine and that you want to do an installation without worrying about enabling or disabling conda environments. It also involves user compilation of GROMACS, which takes considerable installation time. This way also requires installed packages to be compatible and installation errors are more frequent. Installation conda environment AmberTools compilation Miniconda Installation Important Make sure to have conda installed in your computer. Check the third tab \"Miniconda installation\" for more info. *.yml file pip Installing gmx_MMPBSA using a yml file. Download env.yml file // Create a new environment and use the *.yml file to install dependencies $ conda env create -n gmxMMPBSA --file env.yml // To use gmx_MMPBSA, just activate the environment $ conda activate gmxMMPBSA Copy described intructions conda env create -n gmxMMPBSA --file env.yml # (1) conda activate gmxMMPBSA # (2) Create the gmxMMPBSA environment and use the *.yml file to install dependencies Activate gmxMMPBSA environment Installing dependencies // Update conda $ conda update conda // Create a new environment and activate it $ conda create -n gmxMMPBSA python = 3 .10 -y -q $ conda activate gmxMMPBSA // Install mpi4py and AmberTools $ conda install -c conda-forge \"mpi4py<=3.1.5\" \"ambertools<=23.3\" -y -q // Install PyQt6 required to use the GUI analyzer tool (gmx_MMPBSA_ana). Not needed for HPC $ python -m pip install \"pyqt6<=6.6.1\" // (Optional) Install GROMACS $ conda install -c conda-forge \"gromacs<=2023.4\" pocl -y -q Copy described intructions conda update conda conda create -n gmxMMPBSA python = 3 .10 -y -q # (1) conda activate gmxMMPBSA # (2) conda install -c conda-forge \"mpi4py<=3.1.5\" \"ambertools<=23.3\" -y -q # (3) python -m pip install \"pyqt6<=6.6.1\" # (4) # Optional conda install -c conda-forge \"gromacs<=2023.4\" pocl -y -q # (5) Create gmxMMPBSA environment Activate gmxMMPBSA environment Install dependencies Install PyQt6 if you will use gmx_MMPBSA_ana (Optional) Install GROMACS if GROMACS is not installed in your machine Rolling/stable release development version INSTALLATION // INSTALLATION $ python -m pip install gmx_MMPBSA UPDATE // UPDATE $ python -m pip install gmx_MMPBSA -U Info Install/update gmx_MMPBSA from PyPI. PyPI has the latest version of gmx_MMPBSA including stable and beta versions. INSTALLATION // INSTALLATION $ python -m pip install git+https://github.com/Valdes-Tresanco-MS/gmx_MMPBSA UPDATE // UPDATE $ python -m pip install git+https://github.com/Valdes-Tresanco-MS/gmx_MMPBSA -U Warning Install gmx_MMPBSA from the master branch of GitHub repository. This is only recommended for testing new versions or temporary solutions to reported bugs. Follow the oficial AmberTools installation according to your OS Note We asume that AmberTools and their shell environment are correctly configured Rolling/stable release development version INSTALLATION // Install gmx_MMPBSA $ amber.python -m pip install gmx_MMPBSA UPDATE // Update gmx_MMPBSA $ amber.python -m pip install gmx_MMPBSA -U Info Install gmx_MMPBSA from PyPI PyPI has the latest version of gmx_MMPBSA including stable and beta versions. INSTALLATION // Install gmx_MMPBSA $ amber.python -m pip install git+https://github.com/Valdes-Tresanco-MS/gmx_MMPBSA UPDATE amber.python -m pip install git+https://github.com/Valdes-Tresanco-MS/gmx_MMPBSA -U Warning Install/update gmx_MMPBSA from the master branch of GitHub repository. This version is only recommended to test a new version or to try temporary solutions to reported bugs. Danger If you get an error related to installing mpi4py , you may want to install this package manually from conda-forge as follows: amber.conda install -c conda-forge mpi4py=3.1.3 If you get an error related to pip , you may want to install this package manually as follows: amber.conda install pip Download and install Miniconda $ curl -O https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh ---> 100 % $ chmod +x Miniconda3-latest-Linux-x86_64.sh $ ./Miniconda3-latest-Linux-x86_64.sh ---> 100 % Successful miniconda intallation Copy described intructions curl -O https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh # (1) chmod +x Miniconda3-latest-Linux-x86_64.sh # (2) ./Miniconda3-latest-Linux-x86_64.sh # (3) Download Miniconda installer Change permissions for the installer Execute and install miniconda","title":"Installing gmx_MMPBSA v1.5.x"},{"location":"installation/#extra-dependencies","text":"gmx_MMPBSA uses some dependencies for other functions independent of calculations or in some cases they may be necessary due to the nature of your OS. ParmEd The current version of ParmEd implemented in AmberTools has some limitations that have been resolved in the GitHub repository by its author Jason Swails and others with our help. Some of these limitations are: Error reading topology when it has insertion codes Error processing topologies generated with the Amber ff19SB force field New PBRadii sets for GAFF and CHARMM force fields Danger The gmx_MMPBSA installation process has been optimized to be as straightforward as possible. In rare cases, a few extra dependencies may be needed. pip In some cases, the miniconda environment created in the AmberTools compilation does not have the pip module, so any installation that depends on this package will fail. Required only if you did not install gmx_MMPBSA via conda amber.conda install pip Git Used by gmx_MMPBSA_test to download the GitHub repository to get the examples' folder or to install the development version. conda install -c anaconda git or sudo apt install git mpi In some cases it is necessary to install the MPI dependencies. Required only if you did not install gmx_MMPBSA via conda sudo apt install openmpi-bin libopenmpi-dev openssh-client libxcb If you get an error related to Qt plugins sudo apt install --reinstall libxcb-xinerama0","title":"Extra Dependencies"},{"location":"installation/#troubleshooting-after-installation","text":"Once the installation is completed, the following warning may appear: WARNING: The scripts gmx_MMPBSA, gmx_MMPBSA_ana and gmx_MMPBSA_test are installed in '/home/user/path_to_amber_install/amber20/miniconda/bin' which is not on PATH. This warning is because pip installs the executables ( gmx_MMPBSA , gmx_MMPBSA_ana and gmx_MMPBSA_test ) in installation_path/amber20/miniconda/bin . You have two options to solve this: Add this folder (*/amber20/miniconda/bin) to PATH: export PATH=\"/path_to_amber_install/amber20/miniconda/bin:$PATH\" Tip This option is more permanent and is recommended if you don't want to activate and deactivate the conda environment Make sure to update path_to_amber_install in the PATH variable Initializing the environment of conda amber: amber.conda init bash You can deactivate like this: conda deactivate Note After using one of the above options, you should be able to run gmx_MMPBSA , gmx_MMPBSA_ana and gmx_MMPBSA_test through the terminal If when running gmx_MMPBSA , you get an error like this: ModuleNotFoundError: No module named 'parmed' please see the following issue to see the solution","title":"Troubleshooting after installation"},{"location":"installation/#autocompletion-script","text":"Since gmx_MMPBSA has many flags, we believe that this autocompletion can significantly improve productivity, be more user-friendly and reduce the number of unforced errors. That is why we created this script, which manages the autocompletion of the gmx_MMPBSA , gmx_MMPBSA_ana and gmx_MMPBSA_test . Execution: Enter the following command in the terminal: source /path/to/ambertools/lib/python3.x/site-packages/GMXMMPBSA/GMXMMPBSA.sh Tip If you want it to be activated automatically, add that command to your .bashrc Warning This script requires that gmx_MMPBSA , gmx_MMPBSA_ana and gmx_MMPBSA_test be accessible in PATH If the command-line above end in error, please make sure the file has executed permissions. On Ubuntu, Debian, Linux Mint or related: GUI: Right-click on GMXMMPBSA.sh file > Properties > Permissions > Mark the checkbox \"Allow to execute the file as a program\" Terminal: chmod 755 /path/to/ambertools/lib/python3.x/site-packages/GMXMMPBSA/GMXMMPBSA.sh Once you make the source of GMXMMPBSA.sh you can check its operation as follows: All you have to do is enter the name of the program in the terminal and press the tab key twice: gmx_MMPBSA <tab> <tab>","title":"Autocompletion script"},{"location":"installation/#testing-the-operation-of-gmx_mmpbsa","text":"After preparing everything to run gmx_MMPBSA , it only remains to check its correct operation. To know how to do it, consult the documentation of gmx_MMPBSA_test","title":"Testing the operation of gmx_MMPBSA"},{"location":"introduction/","text":"Introduction \u00b6 MM/PB(GB)SA method can be used for calculating binding free energies of non covalently bound complexes. Figure 1. Thermodynamic cycle for binding free energy calculations The free binding energy for a complex can be estimated as follows: \u2206\ud835\udc3a \ud835\udc4f\ud835\udc56\ud835\udc5b\ud835\udc51 = \u2329\ud835\udc3a \ud835\udc36\ud835\udc42\ud835\udc40 \u232a\u2212\u2329\ud835\udc3a \ud835\udc45\ud835\udc38\ud835\udc36 \u232a\u2212\u2329\ud835\udc3a \ud835\udc3f\ud835\udc3c\ud835\udc3a \u232a (1) where each term to the right in the equation is given by: \u2329\ud835\udc3a \ud835\udc65 \u232a = \u2329\ud835\udc38 \ud835\udc40\ud835\udc40 \u232a + \u2329\ud835\udc3a \ud835\udc60\ud835\udc5c\ud835\udc59 \u232a \u2212 \u2329\ud835\udc47\ud835\udc46\u232a (2) In turn, \u2206\ud835\udc3a \ud835\udc4f\ud835\udc56\ud835\udc5b\ud835\udc51 can also be represented as: \u2206\ud835\udc3a \ud835\udc4f\ud835\udc56\ud835\udc5b\ud835\udc51 = \u2206\ud835\udc3b \u2212 \ud835\udc47\u2206\ud835\udc46 (3) where \u2206\ud835\udc3b corresponds to the enthalpy of binding and \u2212\ud835\udc47\u2206\ud835\udc46 to the conformational entropy after ligand binding. When the entropic term is dismissed, the computed value is the effective free energy, which is usually sufficient for comparing relative binding free energies of related ligands. The \u2206\ud835\udc3b can be decomposed into different terms: \u2206\ud835\udc3b = \u2206\ud835\udc38 \ud835\udc40\ud835\udc40 + \u2206\ud835\udc3a \ud835\udc60\ud835\udc5c\ud835\udc59 (4) where: \u2206\ud835\udc38 \ud835\udc40\ud835\udc40 = \u2206\ud835\udc38 \ud835\udc4f\ud835\udc5c\ud835\udc5b\ud835\udc51\ud835\udc52\ud835\udc51 + \u2206\ud835\udc38 \ud835\udc5b\ud835\udc5c\ud835\udc5b\ud835\udc4f\ud835\udc5c\ud835\udc5b\ud835\udc51\ud835\udc52\ud835\udc51 = (\u2206\ud835\udc38 \ud835\udc4f\ud835\udc5c\ud835\udc5b\ud835\udc51 + \u2206\ud835\udc38 \ud835\udc4e\ud835\udc5b\ud835\udc54\ud835\udc59\ud835\udc52 + \u2206\ud835\udc38 \ud835\udc51\ud835\udc56\u210e\ud835\udc52\ud835\udc51\ud835\udc5f\ud835\udc4e\ud835\udc59 ) + (\u2206\ud835\udc38 \ud835\udc52\ud835\udc59\ud835\udc52 + \u2206\ud835\udc38 \ud835\udc63\ud835\udc51\ud835\udc4a ) (5) The gas phase free energy contributions (\u2206\ud835\udc38 \ud835\udc40\ud835\udc40 ) are calculated by sander within the AmberTools package according to the force field used in the MD simulation. The \u2206\ud835\udc3a \ud835\udc60\ud835\udc5c\ud835\udc59 is given by: \u2206\ud835\udc3a \ud835\udc60\ud835\udc5c\ud835\udc59 = \u2206\ud835\udc3a \ud835\udc5d\ud835\udc5c\ud835\udc59 + \u2206\ud835\udc3a \ud835\udc5b\ud835\udc5c\ud835\udc5b\u2212\ud835\udc5d\ud835\udc5c\ud835\udc59 = \u2206\ud835\udc3a \ud835\udc43\ud835\udc35/\ud835\udc3a\ud835\udc35 + \u2206\ud835\udc3a \ud835\udc5b\ud835\udc5c\ud835\udc5b\u2212\ud835\udc5d\ud835\udc5c\ud835\udc59 (6) where: \u2206\ud835\udc3a \ud835\udc5b\ud835\udc5c\ud835\udc5b\u2212\ud835\udc5d\ud835\udc5c\ud835\udc59\ud835\udc4e\ud835\udc5f = \ud835\udc41\ud835\udc43 \ud835\udc47\ud835\udc38\ud835\udc41\ud835\udc46\ud835\udc3c\ud835\udc42\ud835\udc41 \u2217 \u2206\ud835\udc46\ud835\udc34\ud835\udc46\ud835\udc34 + \ud835\udc41\ud835\udc43 \ud835\udc42\ud835\udc39\ud835\udc39\ud835\udc46\ud835\udc38\ud835\udc47 (7) or, \u2206\ud835\udc3a \ud835\udc5b\ud835\udc5c\ud835\udc5b\u2212\ud835\udc5d\ud835\udc5c\ud835\udc59 = \u2206\ud835\udc3a \ud835\udc51\ud835\udc56\ud835\udc60\ud835\udc5d + \u2206\ud835\udc3a \ud835\udc50\ud835\udc4e\ud835\udc63\ud835\udc56\ud835\udc61\ud835\udc66 = \u2206\ud835\udc3a \ud835\udc51\ud835\udc56\ud835\udc60\ud835\udc5d + (\ud835\udc36\ud835\udc34\ud835\udc49\ud835\udc3c\ud835\udc47\ud835\udc4c \ud835\udc47\ud835\udc38\ud835\udc41\ud835\udc46\ud835\udc3c\ud835\udc42\ud835\udc41 \u2217 \u2206\ud835\udc46\ud835\udc34\ud835\udc46\ud835\udc34 + \ud835\udc36\ud835\udc34\ud835\udc49\ud835\udc3c\ud835\udc47\ud835\udc4c \ud835\udc42\ud835\udc39\ud835\udc39\ud835\udc46\ud835\udc38\ud835\udc47 ) (8) In the above equations, \u2206\ud835\udc38 \ud835\udc40\ud835\udc40 corresponds to the molecular mechanical energy changes in the gas phase. \u2206\ud835\udc38 \ud835\udc40\ud835\udc40 includes \u2206\ud835\udc38 \ud835\udc4f\ud835\udc5c\ud835\udc5b\ud835\udc51\ud835\udc52\ud835\udc51 , also known as internal energy, and \u2206\ud835\udc38 \ud835\udc5b\ud835\udc5c\ud835\udc5b\ud835\udc4f\ud835\udc5c\ud835\udc5b\ud835\udc51\ud835\udc52\ud835\udc51 , corresponding to the van der Waals and electrostatic contributions. The solvation energy is determined differently, depending on the method employed. In the 3D-RISM model, both components -polar and non-polar- of the solvation energy are calculated. However, the PB and GB models estimate only the polar component of the solvation. The non-polar component is usually assumed to be proportional to the molecule's total solvent accessible surface area (SASA), with a proportionality constant derived from experimental solvation energies of small non-polar molecules (eq. 7). Alternatively, a modern approach that separates non-polar solvation free energies into cavity and dispersion terms can be used. In this approach, SASA is used to correlate the cavity term only, while a surface-integration method is employed to compute the dispersion term (eq. 8). Furthermore, the entropic component is usually calculated by normal modes analysis (NMODE). The translational and rotational entropies can be estimated using standard statistical mechanical formulas. Nevertheless, calculating vibrational entropy using normal modes is computationally expensive because it requires expanding the internal coordinate covariance matrix for all degrees of freedom for a set of minimized structures. Conversely, the Quasi-harmonic (QH) approximation is less computationally expensive, although it requires a considerable number of frames to converge. Recently, other alternatives have been developed, such as NMODE in truncated systems, which considerably reduces the computational cost. Interaction Entropy (IE) is another novel method that calculates the entropic component of the binding free energy directly from MD simulations without any extra computational cost. This method is numerically reliable, more computationally efficient, and superior to the standard NMODE approach, as shown in an extensive study of over a dozen randomly selected protein-ligand binding systems. Typically, two approaches are used for MM/PB(GB)SA calculations, known as Single Trajectory Protocol (STP) and Multiple Trajectory Protocol (MTP). In STP, both the receptor and the ligand trajectories are extracted from that of the complex. This approach is valid when the bound and unbound states of the receptor, and the ligand are similar. It is computationally less expensive than the MTP approach since only a simulation of the complex is required. Additionally, the potential internal terms ( e.g. , bonds, angles, and dihedrals) cancel exactly in STP since these terms are the same in both bound and unbound states. On the other hand, the MTP is a more realistic approach because it considers multiple trajectories ( i.e. , complex, receptor, and ligand). However, significant conformational changes can lead to numerous errors. In practice, a detailed study of the system is required to select the approach to be used. Literature \u00b6 Further information can be found in Amber manual : MMPBSA.py The Generalized Born/Surface Area Model PBSA Reference Interaction Site Model Generalized Born (GB) for QM/MM calculations and the foundational papers: Srinivasan J. et al., 1998 Kollman P. A. et al., 2000 Gohlke H., Case D. A. 2004 as well as some reviews and expert opinions: Genheden S., Ryde U. 2015 Wang et. al., 2018 Wang et. al., 2019 Tuccinardi, 2021","title":"Introduction"},{"location":"introduction/#introduction","text":"MM/PB(GB)SA method can be used for calculating binding free energies of non covalently bound complexes. Figure 1. Thermodynamic cycle for binding free energy calculations The free binding energy for a complex can be estimated as follows: \u2206\ud835\udc3a \ud835\udc4f\ud835\udc56\ud835\udc5b\ud835\udc51 = \u2329\ud835\udc3a \ud835\udc36\ud835\udc42\ud835\udc40 \u232a\u2212\u2329\ud835\udc3a \ud835\udc45\ud835\udc38\ud835\udc36 \u232a\u2212\u2329\ud835\udc3a \ud835\udc3f\ud835\udc3c\ud835\udc3a \u232a (1) where each term to the right in the equation is given by: \u2329\ud835\udc3a \ud835\udc65 \u232a = \u2329\ud835\udc38 \ud835\udc40\ud835\udc40 \u232a + \u2329\ud835\udc3a \ud835\udc60\ud835\udc5c\ud835\udc59 \u232a \u2212 \u2329\ud835\udc47\ud835\udc46\u232a (2) In turn, \u2206\ud835\udc3a \ud835\udc4f\ud835\udc56\ud835\udc5b\ud835\udc51 can also be represented as: \u2206\ud835\udc3a \ud835\udc4f\ud835\udc56\ud835\udc5b\ud835\udc51 = \u2206\ud835\udc3b \u2212 \ud835\udc47\u2206\ud835\udc46 (3) where \u2206\ud835\udc3b corresponds to the enthalpy of binding and \u2212\ud835\udc47\u2206\ud835\udc46 to the conformational entropy after ligand binding. When the entropic term is dismissed, the computed value is the effective free energy, which is usually sufficient for comparing relative binding free energies of related ligands. The \u2206\ud835\udc3b can be decomposed into different terms: \u2206\ud835\udc3b = \u2206\ud835\udc38 \ud835\udc40\ud835\udc40 + \u2206\ud835\udc3a \ud835\udc60\ud835\udc5c\ud835\udc59 (4) where: \u2206\ud835\udc38 \ud835\udc40\ud835\udc40 = \u2206\ud835\udc38 \ud835\udc4f\ud835\udc5c\ud835\udc5b\ud835\udc51\ud835\udc52\ud835\udc51 + \u2206\ud835\udc38 \ud835\udc5b\ud835\udc5c\ud835\udc5b\ud835\udc4f\ud835\udc5c\ud835\udc5b\ud835\udc51\ud835\udc52\ud835\udc51 = (\u2206\ud835\udc38 \ud835\udc4f\ud835\udc5c\ud835\udc5b\ud835\udc51 + \u2206\ud835\udc38 \ud835\udc4e\ud835\udc5b\ud835\udc54\ud835\udc59\ud835\udc52 + \u2206\ud835\udc38 \ud835\udc51\ud835\udc56\u210e\ud835\udc52\ud835\udc51\ud835\udc5f\ud835\udc4e\ud835\udc59 ) + (\u2206\ud835\udc38 \ud835\udc52\ud835\udc59\ud835\udc52 + \u2206\ud835\udc38 \ud835\udc63\ud835\udc51\ud835\udc4a ) (5) The gas phase free energy contributions (\u2206\ud835\udc38 \ud835\udc40\ud835\udc40 ) are calculated by sander within the AmberTools package according to the force field used in the MD simulation. The \u2206\ud835\udc3a \ud835\udc60\ud835\udc5c\ud835\udc59 is given by: \u2206\ud835\udc3a \ud835\udc60\ud835\udc5c\ud835\udc59 = \u2206\ud835\udc3a \ud835\udc5d\ud835\udc5c\ud835\udc59 + \u2206\ud835\udc3a \ud835\udc5b\ud835\udc5c\ud835\udc5b\u2212\ud835\udc5d\ud835\udc5c\ud835\udc59 = \u2206\ud835\udc3a \ud835\udc43\ud835\udc35/\ud835\udc3a\ud835\udc35 + \u2206\ud835\udc3a \ud835\udc5b\ud835\udc5c\ud835\udc5b\u2212\ud835\udc5d\ud835\udc5c\ud835\udc59 (6) where: \u2206\ud835\udc3a \ud835\udc5b\ud835\udc5c\ud835\udc5b\u2212\ud835\udc5d\ud835\udc5c\ud835\udc59\ud835\udc4e\ud835\udc5f = \ud835\udc41\ud835\udc43 \ud835\udc47\ud835\udc38\ud835\udc41\ud835\udc46\ud835\udc3c\ud835\udc42\ud835\udc41 \u2217 \u2206\ud835\udc46\ud835\udc34\ud835\udc46\ud835\udc34 + \ud835\udc41\ud835\udc43 \ud835\udc42\ud835\udc39\ud835\udc39\ud835\udc46\ud835\udc38\ud835\udc47 (7) or, \u2206\ud835\udc3a \ud835\udc5b\ud835\udc5c\ud835\udc5b\u2212\ud835\udc5d\ud835\udc5c\ud835\udc59 = \u2206\ud835\udc3a \ud835\udc51\ud835\udc56\ud835\udc60\ud835\udc5d + \u2206\ud835\udc3a \ud835\udc50\ud835\udc4e\ud835\udc63\ud835\udc56\ud835\udc61\ud835\udc66 = \u2206\ud835\udc3a \ud835\udc51\ud835\udc56\ud835\udc60\ud835\udc5d + (\ud835\udc36\ud835\udc34\ud835\udc49\ud835\udc3c\ud835\udc47\ud835\udc4c \ud835\udc47\ud835\udc38\ud835\udc41\ud835\udc46\ud835\udc3c\ud835\udc42\ud835\udc41 \u2217 \u2206\ud835\udc46\ud835\udc34\ud835\udc46\ud835\udc34 + \ud835\udc36\ud835\udc34\ud835\udc49\ud835\udc3c\ud835\udc47\ud835\udc4c \ud835\udc42\ud835\udc39\ud835\udc39\ud835\udc46\ud835\udc38\ud835\udc47 ) (8) In the above equations, \u2206\ud835\udc38 \ud835\udc40\ud835\udc40 corresponds to the molecular mechanical energy changes in the gas phase. \u2206\ud835\udc38 \ud835\udc40\ud835\udc40 includes \u2206\ud835\udc38 \ud835\udc4f\ud835\udc5c\ud835\udc5b\ud835\udc51\ud835\udc52\ud835\udc51 , also known as internal energy, and \u2206\ud835\udc38 \ud835\udc5b\ud835\udc5c\ud835\udc5b\ud835\udc4f\ud835\udc5c\ud835\udc5b\ud835\udc51\ud835\udc52\ud835\udc51 , corresponding to the van der Waals and electrostatic contributions. The solvation energy is determined differently, depending on the method employed. In the 3D-RISM model, both components -polar and non-polar- of the solvation energy are calculated. However, the PB and GB models estimate only the polar component of the solvation. The non-polar component is usually assumed to be proportional to the molecule's total solvent accessible surface area (SASA), with a proportionality constant derived from experimental solvation energies of small non-polar molecules (eq. 7). Alternatively, a modern approach that separates non-polar solvation free energies into cavity and dispersion terms can be used. In this approach, SASA is used to correlate the cavity term only, while a surface-integration method is employed to compute the dispersion term (eq. 8). Furthermore, the entropic component is usually calculated by normal modes analysis (NMODE). The translational and rotational entropies can be estimated using standard statistical mechanical formulas. Nevertheless, calculating vibrational entropy using normal modes is computationally expensive because it requires expanding the internal coordinate covariance matrix for all degrees of freedom for a set of minimized structures. Conversely, the Quasi-harmonic (QH) approximation is less computationally expensive, although it requires a considerable number of frames to converge. Recently, other alternatives have been developed, such as NMODE in truncated systems, which considerably reduces the computational cost. Interaction Entropy (IE) is another novel method that calculates the entropic component of the binding free energy directly from MD simulations without any extra computational cost. This method is numerically reliable, more computationally efficient, and superior to the standard NMODE approach, as shown in an extensive study of over a dozen randomly selected protein-ligand binding systems. Typically, two approaches are used for MM/PB(GB)SA calculations, known as Single Trajectory Protocol (STP) and Multiple Trajectory Protocol (MTP). In STP, both the receptor and the ligand trajectories are extracted from that of the complex. This approach is valid when the bound and unbound states of the receptor, and the ligand are similar. It is computationally less expensive than the MTP approach since only a simulation of the complex is required. Additionally, the potential internal terms ( e.g. , bonds, angles, and dihedrals) cancel exactly in STP since these terms are the same in both bound and unbound states. On the other hand, the MTP is a more realistic approach because it considers multiple trajectories ( i.e. , complex, receptor, and ligand). However, significant conformational changes can lead to numerous errors. In practice, a detailed study of the system is required to select the approach to be used.","title":"Introduction"},{"location":"introduction/#literature","text":"Further information can be found in Amber manual : MMPBSA.py The Generalized Born/Surface Area Model PBSA Reference Interaction Site Model Generalized Born (GB) for QM/MM calculations and the foundational papers: Srinivasan J. et al., 1998 Kollman P. A. et al., 2000 Gohlke H., Case D. A. 2004 as well as some reviews and expert opinions: Genheden S., Ryde U. 2015 Wang et. al., 2018 Wang et. al., 2019 Tuccinardi, 2021","title":"Literature"},{"location":"output/","text":"Output Files \u00b6 The output file \u00b6 This is how a typical output file (\"FINAL_RESULTS_MMPBSA.dat\" by default) looks like: Output file | Run on Tue Feb 8 22:31:58 2022 | # (1) | + | gmx_MMPBSA Version=v1.4.3+462.gf64aa73 based on MMPBSA.py v.16.0 | # (2) | Complex Structure file com.tpr + | Complex (AMBER) topology file COM.prmtop | | Receptor (AMBER) topology file REC.prmtop | # (3) | Ligand Structure file ligand.mol2 | | Complex (AMBER) topology file LIG.prmtop | | Initial trajectories COM_traj_0.xtc + | | Receptor mask \":1-240\" + # (4) | Ligand mask \":241\" | | Ligand residue name is \"RAL\" + | | Calculations performed using 16 complex frames + # (5) | C 2 Entropy Std. Dev. and Conf. Interv. (95%) have been obtained by bootstrapping | | with number of re-samplings = 2000 | | | | Generalized Born ESURF calculated using 'LCPO' surface areas | | | | Using temperature = 300.00 K) | | All units are reported in kcal/mol. | | | | SD - Sample standard deviation, SEM - Sample standard error of the mean | | SD(Prop.), SEM(Prop.) - SD and SEM obtained with propagation of uncertainty formula | | https://en.wikipedia.org/wiki/Propagation_of_uncertainty#Example_formulae + ------------------------------------------------------------------------------- + ------------------------------------------------------------------------------- | ENTROPY RESULTS (C2 ENTROPY) | Model \u03c3(Int. Energy) C2 Value Std. Dev. Conf. Interv. (95%) | # (6) ------------------------------------------------------------------------------- | gb 3.308 9.176 2.086 4.601-12.477 | ------------------------------------------------------------------------------- | ------------------------------------------------------------------------------- + GENERALIZED BORN : | # (7) Complex : + Energy Component Average SD(Prop.) SD SEM(Prop.) SEM | ------------------------------------------------------------------------------- | BOND 730.92 21.73 21.73 5.43 5.43 | ANGLE 2022.96 27.54 27.54 6.89 6.89 | DIHED 2631.46 15.99 15.99 4.00 4.00 | VDWAALS -2035.53 14.81 14.81 3.70 3.70 | EEL -16750.43 22.60 22.60 5.65 5.65 | 1-4 VDW 911.73 15.17 15.17 3.79 3.79 | # (8) 1-4 EEL 10292.96 23.03 23.03 5.76 5.76 | EGB -3270.77 15.90 15.90 3.98 3.98 | ESURF 96.07 0.58 0.58 0.15 0.15 | | GGAS -2195.93 54.56 33.37 13.64 8.34 | GSOLV -3174.70 15.91 15.72 3.98 3.93 | | TOTAL -5370.63 56.84 31.88 14.21 7.97 + Receptor : + Energy Component Average SD(Prop.) SD SEM(Prop.) SEM | ------------------------------------------------------------------------------- | BOND 719.57 21.28 21.28 5.32 5.32 | ANGLE 1996.26 27.60 27.60 6.90 6.90 | DIHED 2597.25 13.84 13.84 3.46 3.46 | VDWAALS -1972.61 13.52 13.52 3.38 3.38 | EEL -16735.20 22.33 22.33 5.58 5.58 | 1-4 VDW 895.00 14.81 14.81 3.70 3.70 | # (9) 1-4 EEL 10339.15 23.01 23.01 5.75 5.75 | EGB -3288.63 16.59 16.59 4.15 4.15 | ESURF 99.77 0.61 0.61 0.15 0.15 | | GGAS -2160.58 53.26 35.11 13.31 8.78 | GSOLV -3188.86 16.60 16.39 4.15 4.10 | | TOTAL -5349.43 55.78 32.13 13.95 8.03 + Ligand : + Energy Component Average SD(Prop.) SD SEM(Prop.) SEM | ------------------------------------------------------------------------------- | BOND 11.35 1.94 1.94 0.48 0.48 | ANGLE 26.70 2.68 2.68 0.67 0.67 | DIHED 34.21 3.59 3.59 0.90 0.90 | VDWAALS -4.03 1.35 1.35 0.34 0.34 | EEL 15.90 0.96 0.96 0.24 0.24 | 1-4 VDW 16.73 1.19 1.19 0.30 0.30 | # (10) 1-4 EEL -46.19 0.94 0.94 0.24 0.24 | EGB -23.14 0.63 0.63 0.16 0.16 | ESURF 4.52 0.02 0.02 0.00 0.00 | | GGAS 54.67 5.37 3.97 1.34 0.99 | GSOLV -18.61 0.63 0.63 0.16 0.16 | | TOTAL 36.05 5.41 4.16 1.35 1.04 + Delta (Complex - Receptor - Ligand) : + # (11) Energy Component Average SD(Prop.) SD SEM(Prop.) SEM | ------------------------------------------------------------------------------- | \u0394BOND 0.00 1.49 0.00 0.37 0.00 | # (12) \u0394ANGLE 0.00 2.62 0.00 0.65 0.00 | # (13) \u0394DIHED -0.00 1.44 0.00 0.36 0.00 | # (14) \u0394VDWAALS -58.89 0.06 2.31 0.01 0.58 | # (15) \u0394EEL -31.13 0.69 3.04 0.17 0.76 | # (16) \u03941-4 VDW 0.00 0.83 0.00 0.21 0.00 | # (17) \u03941-4 EEL -0.00 0.92 0.00 0.23 0.00 | # (18) \u0394EGB 40.99 0.05 1.41 0.01 0.35 | # (19) \u0394ESURF -8.22 0.01 0.09 0.00 0.02 | # (20) | \u0394GGAS -90.02 0.69 3.31 0.17 0.83 | # (21) \u0394GSOLV 32.77 0.06 1.37 0.01 0.34 | # (22) | \u0394TOTAL -57.25 0.69 2.55 0.17 0.64 + # (23) ------------------------------------------------------------------------------- ------------------------------------------------------------------------------- Using C2 Entropy Approximation : | \u0394G binding = -48.0704 +/- 2.1972 | # (24) ------------------------------------------------------------------------------- ------------------------------------------------------------------------------- Date of running gmx_MMPBSA version used Input files used Receptor and ligand masks General description of the methods used and units Entropy results in case any entropy approximation was used Model used (GB in this case) Energy components (complex) Energy components (receptor) Energy components (ligand) Energy components (delta) Bond potential term Angle potential term Dihedral potential term Van der Waals contribution Electrostatic contribution Van der Waals 1-4 contribution Electrostatic 1-4 contribution Polar contribution to the solvation free energy Non-polar contribution to the solvation free energy = \u0394BOND + \u0394ANGLE + \u0394DIHED + \u0394VDWAALS + \u0394EEL = \u0394EGB + \u0394ESURF = \u0394GGAS + \u0394GSOLV Binding free energy \u0394G binding = \u0394TOTAL - T\u0394S The header of the output file will contain information about the calculation. It will also show the names of all files that were used in the calculation (topology files and coordinate file(s)). If the masks were not specified, it prints its best guess so that you can verify its accuracy, along with the residue name of the ligand (if it is only a single residue). After that, general information about methods, units, constants used is included. Entropy results are shown next in case any entropy approximation was used. Next, the energy and entropy contributions are broken up into their components as they are in sander and nmode or cpptraj . The contributions are further broken for the complex, receptor and ligand into GGAS and GSOLV . GGAS is the interaction energy and is obtained after sum the internal(bonded) components ( BOND + ANGLE + DIHED ) and the non-bonded ( VDWAALS + EEL ) components. For GSOLV , the polar and non-polar contributions are EGB (or EPB ) and ESURF (or ENPOLAR + EDISPER ), respectively for GB (or PB ) calculations. A single trajectory protocol does not produce any differences between bond lengths, angles, dihedrals or 1-4 interactions between the complex and receptor/ligand structures. Thus, when subtracted they cancel completely. If not, these values are displayed and inconsistency warnings are printed. When this occurs the results are generally useless. Of course this does not hold for the multiple trajectory protocol as independent trajectories are used for the complex, receptor and ligand. Two approaches are used when calculating the standard deviation, and the standard error of the mean. The SD and SEM values are calculated using a sample (array) of values. On the other hand, SD(Prop.) and SEM(Prop.) are obtained with the propagation of uncertainty formula for f = A - B . Check this thread for more details on MM/PB(GB)SA statistics. This is how a typical decomposition output file ( FINAL_DECOMP_MMPBSA.dat by default) looks like: FINAL_DECOMP_MMPBSA.dat | Run on Tue Mar 9 23:48:23 2021 | # (1)! | GB non-polar solvation energies calculated with gbsa=2 + # (2)! | idecomp = 2 Per-residue decomp adding 1-4 interactions to EEL and VDW. | | Energy Decomposition Analysis (All units kcal/mol) Generalized Born solvent + Complex : | # (3)! Total Energy Decomposition : | # (4)! Residue Internal van der Waals Electrostatic Polar Solvation Non-Polar Solv. TOTAL Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean LEU 40 22.06 3.40 0.82 -6.83 1.27 0.31 -32.53 0.81 0.20 -1.57 0.38 0.09 0.01 0.00 0.00 -18.86 3.27 0.79 THR 41 19.15 2.58 0.63 -3.64 1.06 0.26 -36.16 0.96 0.23 -3.58 0.37 0.09 0.23 0.02 0.00 -23.99 1.97 0.48 ALA 44 15.67 1.92 0.47 -5.42 0.72 0.18 -7.54 0.90 0.22 -2.36 0.33 0.08 0.00 0.00 0.00 0.35 2.42 0.59 RAL 241 72.32 3.91 0.95 -16.88 2.66 0.65 -46.00 1.94 0.47 -0.74 0.89 0.22 0.42 0.02 0.00 9.12 3.79 0.92 Sidechain Energy Decomposition : | # (5)! Residue Internal van der Waals Electrostatic Polar Solvation Non-Polar Solv. TOTAL Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean LEU 40 9.64 2.16 0.52 -4.15 0.92 0.22 -27.51 0.45 0.11 4.14 0.11 0.03 0.01 0.00 0.00 -17.88 2.48 0.60 THR 41 6.60 1.19 0.29 -1.62 0.70 0.17 -26.20 0.93 0.23 2.38 0.25 0.06 0.23 0.02 0.00 -18.61 1.11 0.27 ALA 44 2.94 1.08 0.26 -2.20 0.26 0.06 2.19 0.13 0.03 -0.31 0.04 0.01 0.00 0.00 0.00 2.63 1.25 0.30 RAL 241 72.32 3.91 0.95 -16.88 2.66 0.65 -46.00 1.94 0.47 -0.74 0.89 0.22 0.42 0.02 0.00 9.12 3.79 0.92 Backbone Energy Decomposition : | # (6)! Residue Internal van der Waals Electrostatic Polar Solvation Non-Polar Solv. TOTAL Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean LEU 40 12.42 2.04 0.49 -2.67 0.66 0.16 -5.03 0.80 0.19 -5.70 0.43 0.11 0.00 0.00 0.00 -0.98 1.72 0.42 THR 41 12.55 1.83 0.44 -2.02 0.71 0.17 -9.95 0.98 0.24 -5.96 0.34 0.08 0.00 0.00 0.00 -5.38 1.59 0.39 ALA 44 12.72 1.21 0.29 -3.22 0.73 0.18 -9.73 0.87 0.21 -2.05 0.33 0.08 0.00 0.00 0.00 -2.28 1.44 0.35 RAL 241 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 Receptor : | # (7)! Total Energy Decomposition : | # (8)! Residue Internal van der Waals Electrostatic Polar Solvation Non-Polar Solv. TOTAL Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean LEU 40 22.06 3.40 0.82 -4.37 1.27 0.31 -32.08 0.79 0.19 -2.68 0.39 0.09 0.23 0.02 0.01 -16.84 3.30 0.80 THR 41 19.15 2.58 0.63 -1.55 1.04 0.25 -35.55 0.96 0.23 -4.84 0.33 0.08 0.52 0.02 0.00 -22.28 2.03 0.49 ALA 44 15.67 1.92 0.47 -3.91 0.72 0.17 -7.61 0.86 0.21 -2.02 0.35 0.08 0.21 0.02 0.00 2.33 2.36 0.57 Sidechain Energy Decomposition : | # (9)! Residue Internal van der Waals Electrostatic Polar Solvation Non-Polar Solv. TOTAL Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean LEU 40 9.64 2.16 0.52 -2.70 0.89 0.21 -27.27 0.44 0.11 3.89 0.09 0.02 0.20 0.02 0.01 -16.25 2.49 0.60 THR 41 6.60 1.19 0.29 -0.40 0.70 0.17 -25.86 0.88 0.21 1.62 0.21 0.05 0.49 0.02 0.00 -17.55 1.10 0.27 ALA 44 2.94 1.08 0.26 -1.33 0.18 0.04 2.24 0.12 0.03 -0.43 0.04 0.01 0.20 0.01 0.00 3.62 1.17 0.28 Backbone Energy Decomposition : | # (10)! Residue Internal van der Waals Electrostatic Polar Solvation Non-Polar Solv. TOTAL Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean LEU 40 12.42 2.04 0.49 -1.66 0.66 0.16 -4.81 0.81 0.20 -6.57 0.42 0.10 0.03 0.01 0.00 -0.59 1.69 0.41 THR 41 12.55 1.83 0.44 -1.15 0.72 0.17 -9.70 0.95 0.23 -6.46 0.34 0.08 0.02 0.01 0.00 -4.73 1.65 0.40 ALA 44 12.72 1.21 0.29 -2.59 0.71 0.17 -9.85 0.84 0.20 -1.58 0.35 0.08 0.01 0.01 0.00 -1.28 1.46 0.35 Ligand : | # (11)! Total Energy Decomposition : | # (12)! Residue Internal van der Waals Electrostatic Polar Solvation Non-Polar Solv. TOTAL Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean RAL 1 72.32 3.91 0.95 12.61 2.08 0.51 -30.28 0.65 0.16 -23.18 0.63 0.15 5.65 0.03 0.01 37.11 4.05 0.98 Sidechain Energy Decomposition : | # (13)! Residue Internal van der Waals Electrostatic Polar Solvation Non-Polar Solv. TOTAL Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean RAL 1 72.32 3.91 0.95 12.61 2.08 0.51 -30.28 0.65 0.16 -23.18 0.63 0.15 5.65 0.03 0.01 37.11 4.05 0.98 Backbone Energy Decomposition : | # (14)! Residue Internal van der Waals Electrostatic Polar Solvation Non-Polar Solv. TOTAL Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean RAL 1 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 DELTAS : | # (15)! Total Energy Decomposition : | # (16)! Residue Location Internal van der Waals Electrostatic Polar Solvation Non-Polar Solv. TOTAL Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean LEU 40 R LEU 40 0.00 0.00 0.00 -2.46 0.21 0.05 -0.45 0.13 0.03 1.11 0.18 0.04 -0.22 0.02 0.01 -2.02 0.23 0.06 THR 41 R THR 41 0.00 0.00 0.00 -2.09 0.15 0.04 -0.60 0.12 0.03 1.26 0.15 0.04 -0.28 0.02 0.00 -1.72 0.17 0.04 ALA 44 R ALA 44 0.00 0.00 0.00 -1.50 0.13 0.03 0.07 0.05 0.01 -0.34 0.04 0.01 -0.21 0.02 0.00 -1.98 0.17 0.04 RAL 241 L RAL 1 0.00 0.00 0.00 -29.49 1.14 0.28 -15.72 1.60 0.39 22.44 0.74 0.18 -5.22 0.04 0.01 -28.00 1.36 0.33 Sidechain Energy Decomposition : | # (17)! Residue Location Internal van der Waals Electrostatic Polar Solvation Non-Polar Solv. TOTAL Avg. td. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean LEU 40 R LEU 40 0.00 0.00 0.00 -1.45 0.17 0.04 -0.23 0.10 0.02 0.25 0.05 0.01 -0.19 0.02 0.01 -1.63 0.15 0.04 THR 41 R THR 41 0.00 0.00 0.00 -1.22 0.13 0.03 -0.34 0.12 0.03 0.76 0.15 0.04 -0.26 0.02 0.00 -1.06 0.13 0.03 ALA 44 R ALA 44 0.00 0.00 0.00 -0.87 0.15 0.04 -0.05 0.02 0.01 0.13 0.02 0.00 -0.19 0.01 0.00 -0.99 0.16 0.04 RAL 241 L RAL 1 0.00 0.00 0.00 -29.49 1.14 0.28 -15.72 1.60 0.39 22.44 0.74 0.18 -5.22 0.04 0.01 -28.00 1.36 0.33 Backbone Energy Decomposition : | # (18)! Residue Location Internal van der Waals Electrostatic Polar Solvation Non-Polar Solv. TOTAL Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean LEU 40 R LEU 40 0.00 0.00 0.00 -1.01 0.08 0.02 -0.22 0.10 0.02 0.86 0.18 0.04 -0.03 0.01 0.00 -0.40 0.11 0.03 THR 41 R THR 41 0.00 0.00 0.00 -0.87 0.10 0.02 -0.26 0.06 0.02 0.50 0.04 0.01 -0.02 0.01 0.00 -0.66 0.16 0.04 ALA 44 R ALA 44 0.00 0.00 0.00 -0.63 0.06 0.01 0.12 0.04 0.01 -0.47 0.04 0.01 -0.01 0.01 0.00 -1.00 0.08 0.02 RAL 241 L RAL 1 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 Date of running General description of the methods used and units Data for the complex Total Decomposition (TDC) by term for the complex (= Sidechain Energy Decomposition + Backbone Energy Decomposition) Sidechain Energy Decomposition (SDC) by term for the complex Backbone Energy Decomposition (BDC) by term for the complex Data for the receptor Total Decomposition (TDC) by term for the receptor (= Sidechain Energy Decomposition + Backbone Energy Decomposition) Sidechain Energy Decomposition (SDC) by term for the receptor Backbone Energy Decomposition (BDC) by term for the receptor Data for the ligand Total Decomposition (TDC) by term for the ligand (= Sidechain Energy Decomposition + Backbone Energy Decomposition) Sidechain Energy Decomposition (SDC) by term for the ligand Backbone Energy Decomposition (BDC) by term for the ligand Delta Energies Delta energy for the Total Decomposition (TDC) by term Delta energy for the Sidechain Energy Decomposition (SDC) by term Delta energy for the Backbone Energy Decomposition (BDC) by term The header of the output file will contain information about the calculation and parameters specified. Next, the TDC, SDC, and BDC data are shown for the complex, receptor and ligand, respectively. Finally, the delta energies are shown by terms for TDC, SDC, and BDC, respectively. Temporary files \u00b6 Warning This section does not record all the temporary files that are currently generated. gmx_MMPBSA creates working files during the execution of the script beginning with the prefix _GMXMMPBSA_ . If gmx_MMPBSA does not finish successfully, several of these files may be helpful in diagnosing the problem. For that reason, every temporary file is described below. Note that not every temporary file is generated in every simulation. At the end of each description, the lowest value of the original \u201ckeep_files\u201d variable that will retain this file will be shown in parentheses. Nevertheless, in the current version, all the files are retained for plotting purposes. gmx_MMPBSA.log This file contains the output coming from gmx_MMPBSA . leap.log This file contains the output coming from tleap program. _GMXMMPBSA_gb.mdin Input file that controls the GB calculation done in sander. (2) _GMXMMPBSA_pb.mdin Input file that controls the PB calculation done in sander. (2) _GMXMMPBSA_gb_decomp_com.mdin Input file that controls the GB decomp calculation for the complex done in sander. (2) _GMXMMPBSA_gb_decomp_rec.mdin Input file that controls the GB decomp calculation for the receptor done in sander. (2) _GMXMMPBSA_gb_decomp_lig.mdin Input file that controls the GB decomp calculation for the ligand done in sander. (2) _GMXMMPBSA_pb_decomp_com.mdin Input file that controls the PB decomp calculation for the complex done in sander. (2) _GMXMMPBSA_pb_decomp_rec.mdin Input file that controls the PB decomp calculation for the receptor done in sander. (2) _GMXMMPBSA_pb_decomp_lig.mdin Input file that controls the PB decomp calculation for the ligand done in sander. (2) _GMXMMPBSA_gb_qmmm_com.mdin Input file that controls the GB QM/MM calculation for the complex done in sander. (2) _GMXMMPBSA_gb_qmmm_rec.mdin Input file that controls the GB QM/MM calculation for the receptor done in sander. (2) _GMXMMPBSA_gb_qmmm_lig.mdin Input file that controls the GB QM/MM calculation for the ligand done in sander. (2) _GMXMMPBSA_complex.mdcrd.# Trajectory file(s) that contains only those complex snapshots that will be processed by MMPBSA.py. (1) _GMXMMPBSA_ligand.mdcrd.# Trajectory file(s) that contains only those ligand snapshots that will be processed by MMPBSA.py. (1) _GMXMMPBSA_receptor.mdcrd.# Trajectory file(s) that contains only those receptor snapshots that will be processed by MMPBSA.py. (1) _GMXMMPBSA_complex_nc.# Same as _GMXMMPBSA_complex.mdcrd.#, except in the NetCDF format. (1) _GMXMMPBSA_receptor_nc.# Same as _GMXMMPBSA_receptor.mdcrd.#, except in the NetCDF format. (1) _GMXMMPBSA_ligand_nc.# Same as _GMXMMPBSA_ligand.mdcrd.#, except in the NetCDF format. (1) _GMXMMPBSA_dummycomplex.inpcrd Dummy inpcrd file generated by _GMXMMPBSA_complexinpcrd.in for use with imin=5 functionality in sander. (1) _GMXMMPBSA_dummyreceptor.inpcrd Same as above, but for the receptor. (1) _GMXMMPBSA_dummyligand.inpcrd Same as above, but for the ligand. (1) _GMXMMPBSA_complex.pdb Dummy PDB file of the complex required to set molecule up in nab programs _GMXMMPBSA_receptor.pdb Dummy PDB file of the receptor required to set molecule up in nab programs _GMXMMPBSA_ligand.pdb Dummy PDB file of the ligand required to set molecule up in nab programs _GMXMMPBSA_complex_nm.mdcrd.# Trajectory file(s) for each thread with snapshots used for normal mode calcula- tions on the complex. (1) _GMXMMPBSA_receptor_nm.mdcrd.# Trajectory file for each thread with snapshots used for normal mode calcula- tions on the receptor. (1) _GMXMMPBSA_ligand_nm.mdcrd.# Trajectory file for each thread with snapshots used for normal mode calculations on the ligand. (1) _GMXMMPBSA_ptrajentropy.in Input file that calculates the entropy via the quasi-harmonic approximation. This file is processed by ptraj. (2) _GMXMMPBSA_avgcomplex.pdb PDB file containing the average positions of all complex conformations processed by _GMXMMPBSA_cenptraj.in. It is used as the reference for the _GMXMMPBSA_ptrajentropy.in file above. (1) _GMXMMPBSA_complex_entropy.out File into which the entropy results from _GMXMMPBSA_ptrajentropy.in analysis on the complex are dumped. (1) _GMXMMPBSA_receptor_entropy.out Same as above, but for the receptor. (1) _GMXMMPBSA_ligand_entropy.out Same as above, but for the ligand. (1) _GMXMMPBSA_ptraj_entropy.out Output from running ptraj using _GMXMMPBSA_ptrajentropy.in. (1) _GMXMMPBSA_complex_gb.mdout.# sander output file containing energy components of all complex snapshots done in GB. (1) _GMXMMPBSA_receptor_gb.mdout.# sander output file containing energy components of all receptor snapshots done in GB. ( 1) _GMXMMPBSA_ligand_gb.mdout.# sander output file containing energy components of all ligand snapshots done in GB. (1) _GMXMMPBSA_complex_pb.mdout.# sander output file containing energy components of all complex snapshots done in PB. (1) _GMXMMPBSA_receptor_pb.mdout.# sander output file containing energy components of all receptor snapshots done in PB. ( 1) _GMXMMPBSA_ligand_pb.mdout.# sander output file containing energy components of all ligand snapshots done in PB. (1) _GMXMMPBSA_complex_rism.out.# rism3d.snglpnt output file containing energy components of all complex snap- shots done with 3D-RISM (1) _GMXMMPBSA_receptor_rism.out.# rism3d.snglpnt output file containing energy components of all receptor snap- shots done with 3D-RISM (1) _GMXMMPBSA_ligand_rism.out.# rism3d.snglpnt output file containing energy components of all ligand snapshots done with 3D-RISM (1) _GMXMMPBSA_pbsanderoutput.junk.# File containing the information dumped by sander.APBS to STDOUT. (1) _GMXMMPBSA_ligand_nm.out.# Output file from mmpbsa_py_nabnmode that contains the entropy data for the ligand for all snapshots. (1) _GMXMMPBSA_receptor_nm.out.# Output file from mmpbsa_py_nabnmode that contains the entropy data for the receptor for all snapshots. (1) _GMXMMPBSA_complex_nm.out.# Output file from mmpbsa_py_nabnmode that contains the entropy data for the com- plex for all snapshots. (1) _GMXMMPBSA_mutant_... These files are analogs of the files that only start with _GMXMMPBSA_ described above, but instead refer to the mutant system of alanine scanning calculations. _GMXMMPBSA_*out.# These files are thread-specific files. For serial simulations, only #=0 files are created. For parallel, #=0 through NUM_PROC - 1 are created.","title":"The output file"},{"location":"output/#output-files","text":"","title":"Output Files"},{"location":"output/#the-output-file","text":"This is how a typical output file (\"FINAL_RESULTS_MMPBSA.dat\" by default) looks like: Output file | Run on Tue Feb 8 22:31:58 2022 | # (1) | + | gmx_MMPBSA Version=v1.4.3+462.gf64aa73 based on MMPBSA.py v.16.0 | # (2) | Complex Structure file com.tpr + | Complex (AMBER) topology file COM.prmtop | | Receptor (AMBER) topology file REC.prmtop | # (3) | Ligand Structure file ligand.mol2 | | Complex (AMBER) topology file LIG.prmtop | | Initial trajectories COM_traj_0.xtc + | | Receptor mask \":1-240\" + # (4) | Ligand mask \":241\" | | Ligand residue name is \"RAL\" + | | Calculations performed using 16 complex frames + # (5) | C 2 Entropy Std. Dev. and Conf. Interv. (95%) have been obtained by bootstrapping | | with number of re-samplings = 2000 | | | | Generalized Born ESURF calculated using 'LCPO' surface areas | | | | Using temperature = 300.00 K) | | All units are reported in kcal/mol. | | | | SD - Sample standard deviation, SEM - Sample standard error of the mean | | SD(Prop.), SEM(Prop.) - SD and SEM obtained with propagation of uncertainty formula | | https://en.wikipedia.org/wiki/Propagation_of_uncertainty#Example_formulae + ------------------------------------------------------------------------------- + ------------------------------------------------------------------------------- | ENTROPY RESULTS (C2 ENTROPY) | Model \u03c3(Int. Energy) C2 Value Std. Dev. Conf. Interv. (95%) | # (6) ------------------------------------------------------------------------------- | gb 3.308 9.176 2.086 4.601-12.477 | ------------------------------------------------------------------------------- | ------------------------------------------------------------------------------- + GENERALIZED BORN : | # (7) Complex : + Energy Component Average SD(Prop.) SD SEM(Prop.) SEM | ------------------------------------------------------------------------------- | BOND 730.92 21.73 21.73 5.43 5.43 | ANGLE 2022.96 27.54 27.54 6.89 6.89 | DIHED 2631.46 15.99 15.99 4.00 4.00 | VDWAALS -2035.53 14.81 14.81 3.70 3.70 | EEL -16750.43 22.60 22.60 5.65 5.65 | 1-4 VDW 911.73 15.17 15.17 3.79 3.79 | # (8) 1-4 EEL 10292.96 23.03 23.03 5.76 5.76 | EGB -3270.77 15.90 15.90 3.98 3.98 | ESURF 96.07 0.58 0.58 0.15 0.15 | | GGAS -2195.93 54.56 33.37 13.64 8.34 | GSOLV -3174.70 15.91 15.72 3.98 3.93 | | TOTAL -5370.63 56.84 31.88 14.21 7.97 + Receptor : + Energy Component Average SD(Prop.) SD SEM(Prop.) SEM | ------------------------------------------------------------------------------- | BOND 719.57 21.28 21.28 5.32 5.32 | ANGLE 1996.26 27.60 27.60 6.90 6.90 | DIHED 2597.25 13.84 13.84 3.46 3.46 | VDWAALS -1972.61 13.52 13.52 3.38 3.38 | EEL -16735.20 22.33 22.33 5.58 5.58 | 1-4 VDW 895.00 14.81 14.81 3.70 3.70 | # (9) 1-4 EEL 10339.15 23.01 23.01 5.75 5.75 | EGB -3288.63 16.59 16.59 4.15 4.15 | ESURF 99.77 0.61 0.61 0.15 0.15 | | GGAS -2160.58 53.26 35.11 13.31 8.78 | GSOLV -3188.86 16.60 16.39 4.15 4.10 | | TOTAL -5349.43 55.78 32.13 13.95 8.03 + Ligand : + Energy Component Average SD(Prop.) SD SEM(Prop.) SEM | ------------------------------------------------------------------------------- | BOND 11.35 1.94 1.94 0.48 0.48 | ANGLE 26.70 2.68 2.68 0.67 0.67 | DIHED 34.21 3.59 3.59 0.90 0.90 | VDWAALS -4.03 1.35 1.35 0.34 0.34 | EEL 15.90 0.96 0.96 0.24 0.24 | 1-4 VDW 16.73 1.19 1.19 0.30 0.30 | # (10) 1-4 EEL -46.19 0.94 0.94 0.24 0.24 | EGB -23.14 0.63 0.63 0.16 0.16 | ESURF 4.52 0.02 0.02 0.00 0.00 | | GGAS 54.67 5.37 3.97 1.34 0.99 | GSOLV -18.61 0.63 0.63 0.16 0.16 | | TOTAL 36.05 5.41 4.16 1.35 1.04 + Delta (Complex - Receptor - Ligand) : + # (11) Energy Component Average SD(Prop.) SD SEM(Prop.) SEM | ------------------------------------------------------------------------------- | \u0394BOND 0.00 1.49 0.00 0.37 0.00 | # (12) \u0394ANGLE 0.00 2.62 0.00 0.65 0.00 | # (13) \u0394DIHED -0.00 1.44 0.00 0.36 0.00 | # (14) \u0394VDWAALS -58.89 0.06 2.31 0.01 0.58 | # (15) \u0394EEL -31.13 0.69 3.04 0.17 0.76 | # (16) \u03941-4 VDW 0.00 0.83 0.00 0.21 0.00 | # (17) \u03941-4 EEL -0.00 0.92 0.00 0.23 0.00 | # (18) \u0394EGB 40.99 0.05 1.41 0.01 0.35 | # (19) \u0394ESURF -8.22 0.01 0.09 0.00 0.02 | # (20) | \u0394GGAS -90.02 0.69 3.31 0.17 0.83 | # (21) \u0394GSOLV 32.77 0.06 1.37 0.01 0.34 | # (22) | \u0394TOTAL -57.25 0.69 2.55 0.17 0.64 + # (23) ------------------------------------------------------------------------------- ------------------------------------------------------------------------------- Using C2 Entropy Approximation : | \u0394G binding = -48.0704 +/- 2.1972 | # (24) ------------------------------------------------------------------------------- ------------------------------------------------------------------------------- Date of running gmx_MMPBSA version used Input files used Receptor and ligand masks General description of the methods used and units Entropy results in case any entropy approximation was used Model used (GB in this case) Energy components (complex) Energy components (receptor) Energy components (ligand) Energy components (delta) Bond potential term Angle potential term Dihedral potential term Van der Waals contribution Electrostatic contribution Van der Waals 1-4 contribution Electrostatic 1-4 contribution Polar contribution to the solvation free energy Non-polar contribution to the solvation free energy = \u0394BOND + \u0394ANGLE + \u0394DIHED + \u0394VDWAALS + \u0394EEL = \u0394EGB + \u0394ESURF = \u0394GGAS + \u0394GSOLV Binding free energy \u0394G binding = \u0394TOTAL - T\u0394S The header of the output file will contain information about the calculation. It will also show the names of all files that were used in the calculation (topology files and coordinate file(s)). If the masks were not specified, it prints its best guess so that you can verify its accuracy, along with the residue name of the ligand (if it is only a single residue). After that, general information about methods, units, constants used is included. Entropy results are shown next in case any entropy approximation was used. Next, the energy and entropy contributions are broken up into their components as they are in sander and nmode or cpptraj . The contributions are further broken for the complex, receptor and ligand into GGAS and GSOLV . GGAS is the interaction energy and is obtained after sum the internal(bonded) components ( BOND + ANGLE + DIHED ) and the non-bonded ( VDWAALS + EEL ) components. For GSOLV , the polar and non-polar contributions are EGB (or EPB ) and ESURF (or ENPOLAR + EDISPER ), respectively for GB (or PB ) calculations. A single trajectory protocol does not produce any differences between bond lengths, angles, dihedrals or 1-4 interactions between the complex and receptor/ligand structures. Thus, when subtracted they cancel completely. If not, these values are displayed and inconsistency warnings are printed. When this occurs the results are generally useless. Of course this does not hold for the multiple trajectory protocol as independent trajectories are used for the complex, receptor and ligand. Two approaches are used when calculating the standard deviation, and the standard error of the mean. The SD and SEM values are calculated using a sample (array) of values. On the other hand, SD(Prop.) and SEM(Prop.) are obtained with the propagation of uncertainty formula for f = A - B . Check this thread for more details on MM/PB(GB)SA statistics. This is how a typical decomposition output file ( FINAL_DECOMP_MMPBSA.dat by default) looks like: FINAL_DECOMP_MMPBSA.dat | Run on Tue Mar 9 23:48:23 2021 | # (1)! | GB non-polar solvation energies calculated with gbsa=2 + # (2)! | idecomp = 2 Per-residue decomp adding 1-4 interactions to EEL and VDW. | | Energy Decomposition Analysis (All units kcal/mol) Generalized Born solvent + Complex : | # (3)! Total Energy Decomposition : | # (4)! Residue Internal van der Waals Electrostatic Polar Solvation Non-Polar Solv. TOTAL Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean LEU 40 22.06 3.40 0.82 -6.83 1.27 0.31 -32.53 0.81 0.20 -1.57 0.38 0.09 0.01 0.00 0.00 -18.86 3.27 0.79 THR 41 19.15 2.58 0.63 -3.64 1.06 0.26 -36.16 0.96 0.23 -3.58 0.37 0.09 0.23 0.02 0.00 -23.99 1.97 0.48 ALA 44 15.67 1.92 0.47 -5.42 0.72 0.18 -7.54 0.90 0.22 -2.36 0.33 0.08 0.00 0.00 0.00 0.35 2.42 0.59 RAL 241 72.32 3.91 0.95 -16.88 2.66 0.65 -46.00 1.94 0.47 -0.74 0.89 0.22 0.42 0.02 0.00 9.12 3.79 0.92 Sidechain Energy Decomposition : | # (5)! Residue Internal van der Waals Electrostatic Polar Solvation Non-Polar Solv. TOTAL Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean LEU 40 9.64 2.16 0.52 -4.15 0.92 0.22 -27.51 0.45 0.11 4.14 0.11 0.03 0.01 0.00 0.00 -17.88 2.48 0.60 THR 41 6.60 1.19 0.29 -1.62 0.70 0.17 -26.20 0.93 0.23 2.38 0.25 0.06 0.23 0.02 0.00 -18.61 1.11 0.27 ALA 44 2.94 1.08 0.26 -2.20 0.26 0.06 2.19 0.13 0.03 -0.31 0.04 0.01 0.00 0.00 0.00 2.63 1.25 0.30 RAL 241 72.32 3.91 0.95 -16.88 2.66 0.65 -46.00 1.94 0.47 -0.74 0.89 0.22 0.42 0.02 0.00 9.12 3.79 0.92 Backbone Energy Decomposition : | # (6)! Residue Internal van der Waals Electrostatic Polar Solvation Non-Polar Solv. TOTAL Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean LEU 40 12.42 2.04 0.49 -2.67 0.66 0.16 -5.03 0.80 0.19 -5.70 0.43 0.11 0.00 0.00 0.00 -0.98 1.72 0.42 THR 41 12.55 1.83 0.44 -2.02 0.71 0.17 -9.95 0.98 0.24 -5.96 0.34 0.08 0.00 0.00 0.00 -5.38 1.59 0.39 ALA 44 12.72 1.21 0.29 -3.22 0.73 0.18 -9.73 0.87 0.21 -2.05 0.33 0.08 0.00 0.00 0.00 -2.28 1.44 0.35 RAL 241 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 Receptor : | # (7)! Total Energy Decomposition : | # (8)! Residue Internal van der Waals Electrostatic Polar Solvation Non-Polar Solv. TOTAL Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean LEU 40 22.06 3.40 0.82 -4.37 1.27 0.31 -32.08 0.79 0.19 -2.68 0.39 0.09 0.23 0.02 0.01 -16.84 3.30 0.80 THR 41 19.15 2.58 0.63 -1.55 1.04 0.25 -35.55 0.96 0.23 -4.84 0.33 0.08 0.52 0.02 0.00 -22.28 2.03 0.49 ALA 44 15.67 1.92 0.47 -3.91 0.72 0.17 -7.61 0.86 0.21 -2.02 0.35 0.08 0.21 0.02 0.00 2.33 2.36 0.57 Sidechain Energy Decomposition : | # (9)! Residue Internal van der Waals Electrostatic Polar Solvation Non-Polar Solv. TOTAL Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean LEU 40 9.64 2.16 0.52 -2.70 0.89 0.21 -27.27 0.44 0.11 3.89 0.09 0.02 0.20 0.02 0.01 -16.25 2.49 0.60 THR 41 6.60 1.19 0.29 -0.40 0.70 0.17 -25.86 0.88 0.21 1.62 0.21 0.05 0.49 0.02 0.00 -17.55 1.10 0.27 ALA 44 2.94 1.08 0.26 -1.33 0.18 0.04 2.24 0.12 0.03 -0.43 0.04 0.01 0.20 0.01 0.00 3.62 1.17 0.28 Backbone Energy Decomposition : | # (10)! Residue Internal van der Waals Electrostatic Polar Solvation Non-Polar Solv. TOTAL Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean LEU 40 12.42 2.04 0.49 -1.66 0.66 0.16 -4.81 0.81 0.20 -6.57 0.42 0.10 0.03 0.01 0.00 -0.59 1.69 0.41 THR 41 12.55 1.83 0.44 -1.15 0.72 0.17 -9.70 0.95 0.23 -6.46 0.34 0.08 0.02 0.01 0.00 -4.73 1.65 0.40 ALA 44 12.72 1.21 0.29 -2.59 0.71 0.17 -9.85 0.84 0.20 -1.58 0.35 0.08 0.01 0.01 0.00 -1.28 1.46 0.35 Ligand : | # (11)! Total Energy Decomposition : | # (12)! Residue Internal van der Waals Electrostatic Polar Solvation Non-Polar Solv. TOTAL Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean RAL 1 72.32 3.91 0.95 12.61 2.08 0.51 -30.28 0.65 0.16 -23.18 0.63 0.15 5.65 0.03 0.01 37.11 4.05 0.98 Sidechain Energy Decomposition : | # (13)! Residue Internal van der Waals Electrostatic Polar Solvation Non-Polar Solv. TOTAL Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean RAL 1 72.32 3.91 0.95 12.61 2.08 0.51 -30.28 0.65 0.16 -23.18 0.63 0.15 5.65 0.03 0.01 37.11 4.05 0.98 Backbone Energy Decomposition : | # (14)! Residue Internal van der Waals Electrostatic Polar Solvation Non-Polar Solv. TOTAL Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean RAL 1 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 DELTAS : | # (15)! Total Energy Decomposition : | # (16)! Residue Location Internal van der Waals Electrostatic Polar Solvation Non-Polar Solv. TOTAL Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean LEU 40 R LEU 40 0.00 0.00 0.00 -2.46 0.21 0.05 -0.45 0.13 0.03 1.11 0.18 0.04 -0.22 0.02 0.01 -2.02 0.23 0.06 THR 41 R THR 41 0.00 0.00 0.00 -2.09 0.15 0.04 -0.60 0.12 0.03 1.26 0.15 0.04 -0.28 0.02 0.00 -1.72 0.17 0.04 ALA 44 R ALA 44 0.00 0.00 0.00 -1.50 0.13 0.03 0.07 0.05 0.01 -0.34 0.04 0.01 -0.21 0.02 0.00 -1.98 0.17 0.04 RAL 241 L RAL 1 0.00 0.00 0.00 -29.49 1.14 0.28 -15.72 1.60 0.39 22.44 0.74 0.18 -5.22 0.04 0.01 -28.00 1.36 0.33 Sidechain Energy Decomposition : | # (17)! Residue Location Internal van der Waals Electrostatic Polar Solvation Non-Polar Solv. TOTAL Avg. td. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean LEU 40 R LEU 40 0.00 0.00 0.00 -1.45 0.17 0.04 -0.23 0.10 0.02 0.25 0.05 0.01 -0.19 0.02 0.01 -1.63 0.15 0.04 THR 41 R THR 41 0.00 0.00 0.00 -1.22 0.13 0.03 -0.34 0.12 0.03 0.76 0.15 0.04 -0.26 0.02 0.00 -1.06 0.13 0.03 ALA 44 R ALA 44 0.00 0.00 0.00 -0.87 0.15 0.04 -0.05 0.02 0.01 0.13 0.02 0.00 -0.19 0.01 0.00 -0.99 0.16 0.04 RAL 241 L RAL 1 0.00 0.00 0.00 -29.49 1.14 0.28 -15.72 1.60 0.39 22.44 0.74 0.18 -5.22 0.04 0.01 -28.00 1.36 0.33 Backbone Energy Decomposition : | # (18)! Residue Location Internal van der Waals Electrostatic Polar Solvation Non-Polar Solv. TOTAL Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean Avg. Std. Dev. Std. Err. of Mean LEU 40 R LEU 40 0.00 0.00 0.00 -1.01 0.08 0.02 -0.22 0.10 0.02 0.86 0.18 0.04 -0.03 0.01 0.00 -0.40 0.11 0.03 THR 41 R THR 41 0.00 0.00 0.00 -0.87 0.10 0.02 -0.26 0.06 0.02 0.50 0.04 0.01 -0.02 0.01 0.00 -0.66 0.16 0.04 ALA 44 R ALA 44 0.00 0.00 0.00 -0.63 0.06 0.01 0.12 0.04 0.01 -0.47 0.04 0.01 -0.01 0.01 0.00 -1.00 0.08 0.02 RAL 241 L RAL 1 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 Date of running General description of the methods used and units Data for the complex Total Decomposition (TDC) by term for the complex (= Sidechain Energy Decomposition + Backbone Energy Decomposition) Sidechain Energy Decomposition (SDC) by term for the complex Backbone Energy Decomposition (BDC) by term for the complex Data for the receptor Total Decomposition (TDC) by term for the receptor (= Sidechain Energy Decomposition + Backbone Energy Decomposition) Sidechain Energy Decomposition (SDC) by term for the receptor Backbone Energy Decomposition (BDC) by term for the receptor Data for the ligand Total Decomposition (TDC) by term for the ligand (= Sidechain Energy Decomposition + Backbone Energy Decomposition) Sidechain Energy Decomposition (SDC) by term for the ligand Backbone Energy Decomposition (BDC) by term for the ligand Delta Energies Delta energy for the Total Decomposition (TDC) by term Delta energy for the Sidechain Energy Decomposition (SDC) by term Delta energy for the Backbone Energy Decomposition (BDC) by term The header of the output file will contain information about the calculation and parameters specified. Next, the TDC, SDC, and BDC data are shown for the complex, receptor and ligand, respectively. Finally, the delta energies are shown by terms for TDC, SDC, and BDC, respectively.","title":"The output file"},{"location":"output/#temporary-files","text":"Warning This section does not record all the temporary files that are currently generated. gmx_MMPBSA creates working files during the execution of the script beginning with the prefix _GMXMMPBSA_ . If gmx_MMPBSA does not finish successfully, several of these files may be helpful in diagnosing the problem. For that reason, every temporary file is described below. Note that not every temporary file is generated in every simulation. At the end of each description, the lowest value of the original \u201ckeep_files\u201d variable that will retain this file will be shown in parentheses. Nevertheless, in the current version, all the files are retained for plotting purposes. gmx_MMPBSA.log This file contains the output coming from gmx_MMPBSA . leap.log This file contains the output coming from tleap program. _GMXMMPBSA_gb.mdin Input file that controls the GB calculation done in sander. (2) _GMXMMPBSA_pb.mdin Input file that controls the PB calculation done in sander. (2) _GMXMMPBSA_gb_decomp_com.mdin Input file that controls the GB decomp calculation for the complex done in sander. (2) _GMXMMPBSA_gb_decomp_rec.mdin Input file that controls the GB decomp calculation for the receptor done in sander. (2) _GMXMMPBSA_gb_decomp_lig.mdin Input file that controls the GB decomp calculation for the ligand done in sander. (2) _GMXMMPBSA_pb_decomp_com.mdin Input file that controls the PB decomp calculation for the complex done in sander. (2) _GMXMMPBSA_pb_decomp_rec.mdin Input file that controls the PB decomp calculation for the receptor done in sander. (2) _GMXMMPBSA_pb_decomp_lig.mdin Input file that controls the PB decomp calculation for the ligand done in sander. (2) _GMXMMPBSA_gb_qmmm_com.mdin Input file that controls the GB QM/MM calculation for the complex done in sander. (2) _GMXMMPBSA_gb_qmmm_rec.mdin Input file that controls the GB QM/MM calculation for the receptor done in sander. (2) _GMXMMPBSA_gb_qmmm_lig.mdin Input file that controls the GB QM/MM calculation for the ligand done in sander. (2) _GMXMMPBSA_complex.mdcrd.# Trajectory file(s) that contains only those complex snapshots that will be processed by MMPBSA.py. (1) _GMXMMPBSA_ligand.mdcrd.# Trajectory file(s) that contains only those ligand snapshots that will be processed by MMPBSA.py. (1) _GMXMMPBSA_receptor.mdcrd.# Trajectory file(s) that contains only those receptor snapshots that will be processed by MMPBSA.py. (1) _GMXMMPBSA_complex_nc.# Same as _GMXMMPBSA_complex.mdcrd.#, except in the NetCDF format. (1) _GMXMMPBSA_receptor_nc.# Same as _GMXMMPBSA_receptor.mdcrd.#, except in the NetCDF format. (1) _GMXMMPBSA_ligand_nc.# Same as _GMXMMPBSA_ligand.mdcrd.#, except in the NetCDF format. (1) _GMXMMPBSA_dummycomplex.inpcrd Dummy inpcrd file generated by _GMXMMPBSA_complexinpcrd.in for use with imin=5 functionality in sander. (1) _GMXMMPBSA_dummyreceptor.inpcrd Same as above, but for the receptor. (1) _GMXMMPBSA_dummyligand.inpcrd Same as above, but for the ligand. (1) _GMXMMPBSA_complex.pdb Dummy PDB file of the complex required to set molecule up in nab programs _GMXMMPBSA_receptor.pdb Dummy PDB file of the receptor required to set molecule up in nab programs _GMXMMPBSA_ligand.pdb Dummy PDB file of the ligand required to set molecule up in nab programs _GMXMMPBSA_complex_nm.mdcrd.# Trajectory file(s) for each thread with snapshots used for normal mode calcula- tions on the complex. (1) _GMXMMPBSA_receptor_nm.mdcrd.# Trajectory file for each thread with snapshots used for normal mode calcula- tions on the receptor. (1) _GMXMMPBSA_ligand_nm.mdcrd.# Trajectory file for each thread with snapshots used for normal mode calculations on the ligand. (1) _GMXMMPBSA_ptrajentropy.in Input file that calculates the entropy via the quasi-harmonic approximation. This file is processed by ptraj. (2) _GMXMMPBSA_avgcomplex.pdb PDB file containing the average positions of all complex conformations processed by _GMXMMPBSA_cenptraj.in. It is used as the reference for the _GMXMMPBSA_ptrajentropy.in file above. (1) _GMXMMPBSA_complex_entropy.out File into which the entropy results from _GMXMMPBSA_ptrajentropy.in analysis on the complex are dumped. (1) _GMXMMPBSA_receptor_entropy.out Same as above, but for the receptor. (1) _GMXMMPBSA_ligand_entropy.out Same as above, but for the ligand. (1) _GMXMMPBSA_ptraj_entropy.out Output from running ptraj using _GMXMMPBSA_ptrajentropy.in. (1) _GMXMMPBSA_complex_gb.mdout.# sander output file containing energy components of all complex snapshots done in GB. (1) _GMXMMPBSA_receptor_gb.mdout.# sander output file containing energy components of all receptor snapshots done in GB. ( 1) _GMXMMPBSA_ligand_gb.mdout.# sander output file containing energy components of all ligand snapshots done in GB. (1) _GMXMMPBSA_complex_pb.mdout.# sander output file containing energy components of all complex snapshots done in PB. (1) _GMXMMPBSA_receptor_pb.mdout.# sander output file containing energy components of all receptor snapshots done in PB. ( 1) _GMXMMPBSA_ligand_pb.mdout.# sander output file containing energy components of all ligand snapshots done in PB. (1) _GMXMMPBSA_complex_rism.out.# rism3d.snglpnt output file containing energy components of all complex snap- shots done with 3D-RISM (1) _GMXMMPBSA_receptor_rism.out.# rism3d.snglpnt output file containing energy components of all receptor snap- shots done with 3D-RISM (1) _GMXMMPBSA_ligand_rism.out.# rism3d.snglpnt output file containing energy components of all ligand snapshots done with 3D-RISM (1) _GMXMMPBSA_pbsanderoutput.junk.# File containing the information dumped by sander.APBS to STDOUT. (1) _GMXMMPBSA_ligand_nm.out.# Output file from mmpbsa_py_nabnmode that contains the entropy data for the ligand for all snapshots. (1) _GMXMMPBSA_receptor_nm.out.# Output file from mmpbsa_py_nabnmode that contains the entropy data for the receptor for all snapshots. (1) _GMXMMPBSA_complex_nm.out.# Output file from mmpbsa_py_nabnmode that contains the entropy data for the com- plex for all snapshots. (1) _GMXMMPBSA_mutant_... These files are analogs of the files that only start with _GMXMMPBSA_ described above, but instead refer to the mutant system of alanine scanning calculations. _GMXMMPBSA_*out.# These files are thread-specific files. For serial simulations, only #=0 files are created. For parallel, #=0 through NUM_PROC - 1 are created.","title":"Temporary files"},{"location":"private_policy/","text":"Private Policy \u00b6 Effective date: May 13, 2021 Welcome to gmx_MMPBSA Documentation. We believe in protecting the privacy of our users, and readers. The short version \u00b6 We use Google Analytics as a third party tracking service. We only collect the usage data (may include information such as the pages of our Website that You visit, the time and date of Your visit, the time spent on those pages, unique device identifiers and other diagnostic data) through Google Analytics which helps us evaluate our users\u2019 use of gmx_MMPBSA Documentation. We do not share, sell, rent, or trade this information with third parties for their commercial purposes; and we only use it as this Privacy Policy describes. Our services \u00b6 gmx_MMPBSA Documentation is made up of: https://valdes-tresanco-ms.github.io/gmx_MMPBSA This is a website aimed at people that use gmx_MMPBSA. This Privacy Policy applies to this site in full without reservation. All use of gmx_MMPBSA Documentation is subject to this Privacy Policy. What information gmx_MMPBSA Documentation and why \u00b6 We use Google Analytics as a third party tracking service, but we don\u2019t use it to track you individually or collect your User Personal Information. We use Google Analytics to collect information about how our website performs and how our users, in general, navigate through and use gmx_MMPBSA Documentation. This helps us evaluate our users\u2019 use of gmx_MMPBSA Documentation; compile statistical reports on activity; and improve our content and website performance. Google Analytics gathers certain simple, non-personally identifying information over time, such as your IP address, browser type, internet service provider, referring and exit pages, time stamp, and similar data about your use of gmx_MMPBSA Documentation. We will not allow any third party to, use the Google Analytics tool to track our users individually; collect any User Personal Information other than IP address; or correlate your IP address with your identity. Google provides further information about its own privacy practices and offers a browser add-on to opt out of Google Analytics tracking. Why do we collect this? \u00b6 We collect this information to better understand how our website visitors use gmx_MMPBSA Documentation, and to monitor and protect the security of the website. What information gmx_MMPBSA Documentation does not collect \u00b6 We do not intentionally collect sensitive personal information, such as social security numbers, genetic data, health information, or religious information. How we share the information we collect \u00b6 We do not share, sell, rent, or trade User Personal Information with third parties for their commercial purposes. Contacting Us \u00b6 If you have any questions about this Privacy Policy, You can contact us: By email: mariosergiovaldes145@gmail.com","title":"Private Policy"},{"location":"private_policy/#private-policy","text":"Effective date: May 13, 2021 Welcome to gmx_MMPBSA Documentation. We believe in protecting the privacy of our users, and readers.","title":"Private Policy"},{"location":"private_policy/#the-short-version","text":"We use Google Analytics as a third party tracking service. We only collect the usage data (may include information such as the pages of our Website that You visit, the time and date of Your visit, the time spent on those pages, unique device identifiers and other diagnostic data) through Google Analytics which helps us evaluate our users\u2019 use of gmx_MMPBSA Documentation. We do not share, sell, rent, or trade this information with third parties for their commercial purposes; and we only use it as this Privacy Policy describes.","title":"The short version"},{"location":"private_policy/#our-services","text":"gmx_MMPBSA Documentation is made up of: https://valdes-tresanco-ms.github.io/gmx_MMPBSA This is a website aimed at people that use gmx_MMPBSA. This Privacy Policy applies to this site in full without reservation. All use of gmx_MMPBSA Documentation is subject to this Privacy Policy.","title":"Our services"},{"location":"private_policy/#what-information-gmx_mmpbsa-documentation-and-why","text":"We use Google Analytics as a third party tracking service, but we don\u2019t use it to track you individually or collect your User Personal Information. We use Google Analytics to collect information about how our website performs and how our users, in general, navigate through and use gmx_MMPBSA Documentation. This helps us evaluate our users\u2019 use of gmx_MMPBSA Documentation; compile statistical reports on activity; and improve our content and website performance. Google Analytics gathers certain simple, non-personally identifying information over time, such as your IP address, browser type, internet service provider, referring and exit pages, time stamp, and similar data about your use of gmx_MMPBSA Documentation. We will not allow any third party to, use the Google Analytics tool to track our users individually; collect any User Personal Information other than IP address; or correlate your IP address with your identity. Google provides further information about its own privacy practices and offers a browser add-on to opt out of Google Analytics tracking.","title":"What information gmx_MMPBSA Documentation and why"},{"location":"private_policy/#why-do-we-collect-this","text":"We collect this information to better understand how our website visitors use gmx_MMPBSA Documentation, and to monitor and protect the security of the website.","title":"Why do we collect this?"},{"location":"private_policy/#what-information-gmx_mmpbsa-documentation-does-not-collect","text":"We do not intentionally collect sensitive personal information, such as social security numbers, genetic data, health information, or religious information.","title":"What information gmx_MMPBSA Documentation does not collect"},{"location":"private_policy/#how-we-share-the-information-we-collect","text":"We do not share, sell, rent, or trade User Personal Information with third parties for their commercial purposes.","title":"How we share the information we collect"},{"location":"private_policy/#contacting-us","text":"If you have any questions about this Privacy Policy, You can contact us: By email: mariosergiovaldes145@gmail.com","title":"Contacting Us"},{"location":"summary/","text":"gmx_MMPBSA in a nutshell \u00b6 gmx_MMPBSA provides all the MMPBSA.py functionalities to GROMACS users. In addition, other functionalities have been implemented that ease a number of calculations ( e.g. MM/PB(GB)SA with user-defined internal dielectric constant, interaction entropy and C2 entropy calculations). A GUI application gmx_MMPBSA_ana is also incorporated that allows for visualizing the results and saving high-quality images. Types of calculations you can do \u00b6 There are many options available in gmx_MMPBSA . These are some calculations you can perform with gmx_MMPBSA : Normal binding free energies , with either PB, GB or 3D-RISM solvent models. Each can be done with either 1, 2, or 3 different trajectories. The complex trajectory must always be provided. Whichever trajectories of the receptor and/or ligand that are NOT specified will be extracted from that of the complex. This allows a 1-, 2-, or 3-trajectory analysis. All PB calculations and GB models are performed via the sander program. Calculations with 3D-RISM solvent model are performed with rism3d.snglpnt built with AmberTools. Stability calculations with any solvent model ( i.e PB, GB or 3D-RISM). Alanine scanning with either PB or GB implicit solvent models. All trajectories will be mutated to match the mutated topology files, and whichever calculations that would be carried out for the normal systems are also carried out for the mutated systems. Note that only 1 mutation is allowed per simulation, and it must be to an alanine or glycine. If mutant_only variable is not set to 1, differences resulting from the mutations are calculated. Entropy corrections . An entropy term can be added to the free energies calculated above using either the quasi-harmonic, the normal mode, interaction entropy or C2 approximations. Calculations will be performed for the normal and mutated systems (alanine scanning) as requested. Normal mode calculations are done with the mmpbsa_py_nabnmode program included with AmberTools. Decomposition schemes . The energy terms will be decomposed according to the decomposition scheme (per-residue or per-wise) outlined in the idecomp variable description. This should work with all the above, though entropy terms cannot be decomposed. QM/MMGBSA . This is a binding free energy (or stability calculation) using the Generalized Born solvent model allowing you to treat part of your system with a quantum mechanical Hamiltonian. Support for Membrane Proteins . Calculate the MMPBSA binding free energy for a ligand bound to a protein that is embedded into a membrane. In this case, the membrane is implemented as a slab-like region with a uniform or heterogeneous dielectric constant depth profile. gmx_MMPBSA a technical view \u00b6 gmx_MMPBSA is a python module that contains 3 applications: gmx_MMPBSA is the fundamental application and carries out all the calculations mentioned above gmx_MMPBSA_ana provides an intuitive way to analyze the data from gmx_MMPBSA calculations and save high-quality pictures gmx_MMPBSA_test is a tool designed to test if the installation was successful by running one or more available examples in gmx_MMPBSA.","title":"gmx_MMPBSA in a nutshell"},{"location":"summary/#gmx_mmpbsa-in-a-nutshell","text":"gmx_MMPBSA provides all the MMPBSA.py functionalities to GROMACS users. In addition, other functionalities have been implemented that ease a number of calculations ( e.g. MM/PB(GB)SA with user-defined internal dielectric constant, interaction entropy and C2 entropy calculations). A GUI application gmx_MMPBSA_ana is also incorporated that allows for visualizing the results and saving high-quality images.","title":"gmx_MMPBSA in a nutshell"},{"location":"summary/#types-of-calculations-you-can-do","text":"There are many options available in gmx_MMPBSA . These are some calculations you can perform with gmx_MMPBSA : Normal binding free energies , with either PB, GB or 3D-RISM solvent models. Each can be done with either 1, 2, or 3 different trajectories. The complex trajectory must always be provided. Whichever trajectories of the receptor and/or ligand that are NOT specified will be extracted from that of the complex. This allows a 1-, 2-, or 3-trajectory analysis. All PB calculations and GB models are performed via the sander program. Calculations with 3D-RISM solvent model are performed with rism3d.snglpnt built with AmberTools. Stability calculations with any solvent model ( i.e PB, GB or 3D-RISM). Alanine scanning with either PB or GB implicit solvent models. All trajectories will be mutated to match the mutated topology files, and whichever calculations that would be carried out for the normal systems are also carried out for the mutated systems. Note that only 1 mutation is allowed per simulation, and it must be to an alanine or glycine. If mutant_only variable is not set to 1, differences resulting from the mutations are calculated. Entropy corrections . An entropy term can be added to the free energies calculated above using either the quasi-harmonic, the normal mode, interaction entropy or C2 approximations. Calculations will be performed for the normal and mutated systems (alanine scanning) as requested. Normal mode calculations are done with the mmpbsa_py_nabnmode program included with AmberTools. Decomposition schemes . The energy terms will be decomposed according to the decomposition scheme (per-residue or per-wise) outlined in the idecomp variable description. This should work with all the above, though entropy terms cannot be decomposed. QM/MMGBSA . This is a binding free energy (or stability calculation) using the Generalized Born solvent model allowing you to treat part of your system with a quantum mechanical Hamiltonian. Support for Membrane Proteins . Calculate the MMPBSA binding free energy for a ligand bound to a protein that is embedded into a membrane. In this case, the membrane is implemented as a slab-like region with a uniform or heterogeneous dielectric constant depth profile.","title":"Types of calculations you can do"},{"location":"summary/#gmx_mmpbsa-a-technical-view","text":"gmx_MMPBSA is a python module that contains 3 applications: gmx_MMPBSA is the fundamental application and carries out all the calculations mentioned above gmx_MMPBSA_ana provides an intuitive way to analyze the data from gmx_MMPBSA calculations and save high-quality pictures gmx_MMPBSA_test is a tool designed to test if the installation was successful by running one or more available examples in gmx_MMPBSA.","title":"gmx_MMPBSA a technical view"},{"location":"support/","text":"Support \u00b6 Report an issue and Getting help \u00b6 You can review some answers to the questions that we consider most common here. If you find a bug or have any question, please consider opening an issue or post in our Google group Jetbrains \u00b6 This project is possible thanks to the Open Source license of the JetBrains programs. Acknowledgment \u00b6","title":"Support"},{"location":"support/#support","text":"","title":"Support"},{"location":"support/#report-an-issue-and-getting-help","text":"You can review some answers to the questions that we consider most common here. If you find a bug or have any question, please consider opening an issue or post in our Google group","title":"Report an issue and Getting help"},{"location":"support/#jetbrains","text":"This project is possible thanks to the Open Source license of the JetBrains programs.","title":"Jetbrains"},{"location":"support/#acknowledgment","text":"","title":"Acknowledgment"},{"location":"versus/","text":"Comparison of gmx_MMPBSA vs other programs \u00b6 This comparison is based on the documentation of the different programs Calculation features \u00b6 Feature g_mmpbsa GMXPBSA 2.1 MMPBSA.py 1 gmx_MMPBSA Normal binding free energies PB PB PB 10 and GB PB 10 and GB * GB models 1, 2, 5, 7 and 8 1, 2, 5, 7, 8 and NSR6 Stability Alanine scanning 2 Entropy corrections 3 NMODE and QH NMODE, QH, IE, and C2 Decomposition schemes Per-Residues Per-Residues and Per-Wise Per-Residues and Per-Wise QM/MMGBSA MM/3D-RISM Support Membrane Protein Approximations ST ST and MT ST and MT ST and MT Analysis features \u00b6 Feature g_mmpbsa GMXPBSA 2.1 MMPBSA.py 1 gmx_MMPBSA API Analyzer Tool 4 * Multiple systems at same time * Correlation between systems * Per-residue energies to PDB * Interactive visualization ** 3D Molecular Visualization PyMOL ** Interactive Charts static image * Plotting tool internal tools API and graphics library 5 gmx_MMPBSA_ana * Energetic Terms charts \u0394G polar , \u0394G nonpolar , \u0394E MM and \u0394G bind All * Export data to CSV file ** Energy Summary ** Individual Energetic Terms Technical features \u00b6 Feature g_mmpbsa GMXPBSA 2.1 MMPBSA.py 1 gmx_MMPBSA GROMACS Version 4.x, 5.x and 2016+ 6 4.x, 5.x and 20xx.x 7 --- 4.x, 5.x and 20xx.x Dependencies APBS (1.2.x, 1.3.x or 1.4.x) APBS (1.x.x) 8 AmberTools20/21 AmberTools20/21 9 Parallel computation Depends on APBS Locally using APBS or in HPC divided in jobs Steps for: * Calculation and Summary Multiple Multiple One One * Analysis Multiple Multiple Multiple One MMPBSA.py is included in AMBER package \u21a9 \u21a9 \u21a9 Without documentation \u21a9 NMODE = Normal modes approximation, QH = Quasic-Harmony approximation, IE = Interaction Entropy approximation, and C2 = C2 Entropy \u21a9 We plan to extend gmx_MMPBSA compatibility to MMPBSA.py's results \u21a9 Currently there is a repository ( AmberUtils ) for analysing the results \u21a9 GROMACS 20xx.x is not officially supported. There is a Pull Request that offers a minimum compatibility with versions higher than 2016.x one, but still with limitations \u21a9 It is not clear whether it does support GROMACS versions 20xx.x or not, but we assume that it does since it is script-based \u21a9 It is not clear whether it does support APBS versions 3.x.x \u21a9 gmx_MMPBSA is compatible with AmberTools20, AmberTools21, and AmberTools22 \u21a9 gmx_MMPBSA supports Linear and Non-Linear PB equations. MMPBSA.py on the other hand, requires the user to modify manually the *.mdin input files \u21a9 \u21a9","title":"gmx_MMPBSA vs other programs"},{"location":"versus/#comparison-of-gmx_mmpbsa-vs-other-programs","text":"This comparison is based on the documentation of the different programs","title":"Comparison of gmx_MMPBSA vs other programs"},{"location":"versus/#calculation-features","text":"Feature g_mmpbsa GMXPBSA 2.1 MMPBSA.py 1 gmx_MMPBSA Normal binding free energies PB PB PB 10 and GB PB 10 and GB * GB models 1, 2, 5, 7 and 8 1, 2, 5, 7, 8 and NSR6 Stability Alanine scanning 2 Entropy corrections 3 NMODE and QH NMODE, QH, IE, and C2 Decomposition schemes Per-Residues Per-Residues and Per-Wise Per-Residues and Per-Wise QM/MMGBSA MM/3D-RISM Support Membrane Protein Approximations ST ST and MT ST and MT ST and MT","title":"Calculation features"},{"location":"versus/#analysis-features","text":"Feature g_mmpbsa GMXPBSA 2.1 MMPBSA.py 1 gmx_MMPBSA API Analyzer Tool 4 * Multiple systems at same time * Correlation between systems * Per-residue energies to PDB * Interactive visualization ** 3D Molecular Visualization PyMOL ** Interactive Charts static image * Plotting tool internal tools API and graphics library 5 gmx_MMPBSA_ana * Energetic Terms charts \u0394G polar , \u0394G nonpolar , \u0394E MM and \u0394G bind All * Export data to CSV file ** Energy Summary ** Individual Energetic Terms","title":"Analysis features"},{"location":"versus/#technical-features","text":"Feature g_mmpbsa GMXPBSA 2.1 MMPBSA.py 1 gmx_MMPBSA GROMACS Version 4.x, 5.x and 2016+ 6 4.x, 5.x and 20xx.x 7 --- 4.x, 5.x and 20xx.x Dependencies APBS (1.2.x, 1.3.x or 1.4.x) APBS (1.x.x) 8 AmberTools20/21 AmberTools20/21 9 Parallel computation Depends on APBS Locally using APBS or in HPC divided in jobs Steps for: * Calculation and Summary Multiple Multiple One One * Analysis Multiple Multiple Multiple One MMPBSA.py is included in AMBER package \u21a9 \u21a9 \u21a9 Without documentation \u21a9 NMODE = Normal modes approximation, QH = Quasic-Harmony approximation, IE = Interaction Entropy approximation, and C2 = C2 Entropy \u21a9 We plan to extend gmx_MMPBSA compatibility to MMPBSA.py's results \u21a9 Currently there is a repository ( AmberUtils ) for analysing the results \u21a9 GROMACS 20xx.x is not officially supported. There is a Pull Request that offers a minimum compatibility with versions higher than 2016.x one, but still with limitations \u21a9 It is not clear whether it does support GROMACS versions 20xx.x or not, but we assume that it does since it is script-based \u21a9 It is not clear whether it does support APBS versions 3.x.x \u21a9 gmx_MMPBSA is compatible with AmberTools20, AmberTools21, and AmberTools22 \u21a9 gmx_MMPBSA supports Linear and Non-Linear PB equations. MMPBSA.py on the other hand, requires the user to modify manually the *.mdin input files \u21a9 \u21a9","title":"Technical features"},{"location":"Q%26A/","text":"Help \u00b6 Here you will find some of the most frequently asked questions and errors. Also, look at our Google group or the issues section to find out about specific cases and others. If you still have doubts or cannot solve the problem, please consider opening an issue or posting in our Google group Installation OS issues Calculations","title":"Help"},{"location":"Q%26A/#help","text":"Here you will find some of the most frequently asked questions and errors. Also, look at our Google group or the issues section to find out about specific cases and others. If you still have doubts or cannot solve the problem, please consider opening an issue or posting in our Google group Installation OS issues Calculations","title":"Help"},{"location":"Q%26A/OS_issues/","text":"Operative System compatibility issues \u00b6 Here we describe a series of more frequent reported problems related mainly to compatibility issues and supported OS and their possible solutions. gmx_MMPBSA fail in macOS < BigSur Solution: \u00b6 We have only tested gmx_MMPBSA on macOS BigSur and it works fine. Since a problem related to a version lower than BigSur was reported, we assume that it is not compatible. Please check this thread gmx_MMPBSA_ana fails in non-native Linux distribution ( i.e. , Windows Subsystem for Linux (WSL), Debian, Centos or HPC) Solution: \u00b6 I am using Windows Subsystem for Linux (WSL) The WSL has no graphics drivers, thus it is impossible to run native Linux graphics applications. Therefore, there is currently no way to run gmx_MMPBSA_ana in such an environment. I am using Debian or Centos as OS Since Debian and Centos are Linux distributions for servers, their main focus is stability, which is why they keep old versions of most libraries. In addition, its GUI is very basic, as it is generally not widely used. gmx_MMPBSA_ana uses the latest PyQt5 version which requires updated graphics libraries. That is why we recommend the use of more desktop-focused distributions such as Ubuntu, Linux Mint, Fedora, OpenSuse, Majaro, etc. I am running gmx_MMPBSA on HPC By default, HPCs have the GUI disabled, therefore any application that depends on the graphics libraries will end in error. gmx_MMPBSA has the -nogui option to avoid this type of errors since it prevents gmx_MMBSA_ana from being executed at the end of the calculations. Therefore, just add -nogui at the end of the command line and it should be good to go. Error with qt.qpa.plugin I get an error related to Qt plugins If you get the following or similar error: qt.qpa.plugin: Could not load the Qt platform plugin \"xcb\" in \"\" even though it was found. Solution: \u00b6 A possible solution may be to reinstall these libraries sudo apt install --reinstall libxcb-xinerama0","title":"OS issues"},{"location":"Q%26A/OS_issues/#operative-system-compatibility-issues","text":"Here we describe a series of more frequent reported problems related mainly to compatibility issues and supported OS and their possible solutions. gmx_MMPBSA fail in macOS < BigSur","title":"Operative System compatibility issues"},{"location":"Q%26A/OS_issues/#solution","text":"We have only tested gmx_MMPBSA on macOS BigSur and it works fine. Since a problem related to a version lower than BigSur was reported, we assume that it is not compatible. Please check this thread gmx_MMPBSA_ana fails in non-native Linux distribution ( i.e. , Windows Subsystem for Linux (WSL), Debian, Centos or HPC)","title":"Solution:"},{"location":"Q%26A/OS_issues/#solution_1","text":"I am using Windows Subsystem for Linux (WSL) The WSL has no graphics drivers, thus it is impossible to run native Linux graphics applications. Therefore, there is currently no way to run gmx_MMPBSA_ana in such an environment. I am using Debian or Centos as OS Since Debian and Centos are Linux distributions for servers, their main focus is stability, which is why they keep old versions of most libraries. In addition, its GUI is very basic, as it is generally not widely used. gmx_MMPBSA_ana uses the latest PyQt5 version which requires updated graphics libraries. That is why we recommend the use of more desktop-focused distributions such as Ubuntu, Linux Mint, Fedora, OpenSuse, Majaro, etc. I am running gmx_MMPBSA on HPC By default, HPCs have the GUI disabled, therefore any application that depends on the graphics libraries will end in error. gmx_MMPBSA has the -nogui option to avoid this type of errors since it prevents gmx_MMBSA_ana from being executed at the end of the calculations. Therefore, just add -nogui at the end of the command line and it should be good to go. Error with qt.qpa.plugin I get an error related to Qt plugins If you get the following or similar error: qt.qpa.plugin: Could not load the Qt platform plugin \"xcb\" in \"\" even though it was found.","title":"Solution:"},{"location":"Q%26A/OS_issues/#solution_2","text":"A possible solution may be to reinstall these libraries sudo apt install --reinstall libxcb-xinerama0","title":"Solution:"},{"location":"Q%26A/calculations/","text":"gmx_MMPBSA Calculations \u00b6 Here we describe a series of frequent issues related to calculations and their possible solutions. Note Most of the errors noted here are the result of inconsistent input files. Please read the documentation and make sure your files are consistent. ValueError: could not convert string to float: '*************' This error has two possible causes: The structure defined in -cs , -rs , or -ls options is inconsistent, or the trajectory has not been fitted (remove PBC) properly. This is the most common error. Many times it is because the system under study is longer than some edges of the box. Possible solutions: \u00b6 Check for structure consistency Visualize the structure contained in the structure input file given in the -cs , -rs , or -ls options and make sure it is consistent (as shown in Fig 1, right panel). On the other hand, if the structure is \"broken\" (as shown in Fig 1, left panel) this could generate inconsistent results. Generate the structure from tpr file gmx editconf -f md.tpr -o md.pdb Figure 1. Vizualization of two different input structures files. Left: \"Broken\" structure; Right: Centered structure Make sure you have fitted the trajectory Visualize the trajectory given in the -ct , -rt , or -lt options and make sure the PBC has been removed (as shown in Fig 2, right panel). On the other hand, if the trajectory has not been fitted (as shown in Fig 2, left panel) this could generate inconsistent results. Steps: Generate a group that contains both molecules gmx make_ndx -n index.ndx >1 | 12 >q Assuming 1 is the receptor and 12 is the ligand. This creates a new group (number 20 in this example) remove the PBC gmx trjconv -s md.tpr -f md.xtc -o md_noPBC.xtc -pbc mol -center -n -ur compact center: 20 (created group) output: 0 remove the rotation and translation with respect to the reference structure (optional) gmx trjconv -s md.tpr -f md_noPBC.xtc -o md_fit.xtc -n -fit rot+trans fit: 20 (created group) output: 0 Visualization Make sure that the trajectory is consistent (as shown in Fig 2, right panel) If the process is not succesful, consider using other options like -pbc nojump (as suggested here ) Figure 2. Vizualization of two different input trajectory files. Left: Trajectory with PBC; Right: Trajectory centered, fitted and with PBC removed. You are trying to calculate the energetic contribution of a very large group. Technically, the energy value should not exceed 7 digits, so if you get a value higher than this, this error will occur. Although gmx_MMPBSA can handle very large systems, it cannot determine certain energetic terms. This is a sander limitation when writing the output file. Possible solutions: \u00b6 The error could be solved by recompiling sander with some modifications in the output function. However, this is not recommended since the error can be large. Another possible solution could be modifying the parameters of the calculation (solvent model, internal dielectric constant) or just performing the calculation for a part of the system (sub-system). I get high values for the solvation energy when using PB model When using PB model, inp=2 is used as default to calculate total non-polar solvation free energy, that is, the total non-polar solvation free energy will be modeled as two terms: the cavity term and the dispersion term. The dispersion term is computed with a surface-based integration method closely related to the PCM solvent for quantum chemical programs. Under this framework, the cavity term is still computed as a term linearly proportional to the molecular volume enclosed by SASA. Possible solutions: \u00b6 You may want to try inp=1 and avoid the EDISPER contribution. This way, the total non-polar solvation free energy will be modeled as a single term linearly proportional to the solvent-accessible surface area. Just add inp=1 in the &pb namelist variables in the input file. See example below: &general startframe=5, endframe=100, interval=5, verbose=2, forcefields=\"oldff/leaprc.ff99SB,leaprc.gaff\" / &pb istrng=0.15, fillratio=4.0, inp=1 / Another way to avoid the EDISPER contribution is by modifying the _GMXMMPBSA_info file. Changing the value of INPUT['inp'] to 1 and run: gmx_MMPBSA --rewrite-output will avoid the calculation of the EDISPER contribution and report just the ENPOLAR contribution as a term linearly proportional to the molecular volume enclosed by SASA. Info Note that these two approximations will yield different values for the non-polar component of the solvation energy (see here ). Use one or another depending on your interest. Check this publication and see the drawbacks of modeling the total non-polar solvation free energy with two terms, i.e. , the cavity term and the dispersion term. Sometimes there are imbalances in the cancellation of error between the two components and this can produce unrealistic non-polar energy values. NMODE calculation finish in error The only error reported is probably related to RAM saturation. NMODE calculations require a considerable amount of RAM depending on the number of atoms in your system. The amount of total RAM consumed during the calculation will be: RAM for 1 frame * number of threads","title":"Calculations"},{"location":"Q%26A/calculations/#gmx_mmpbsa-calculations","text":"Here we describe a series of frequent issues related to calculations and their possible solutions. Note Most of the errors noted here are the result of inconsistent input files. Please read the documentation and make sure your files are consistent. ValueError: could not convert string to float: '*************' This error has two possible causes: The structure defined in -cs , -rs , or -ls options is inconsistent, or the trajectory has not been fitted (remove PBC) properly. This is the most common error. Many times it is because the system under study is longer than some edges of the box.","title":"gmx_MMPBSA Calculations"},{"location":"Q%26A/calculations/#possible-solutions","text":"Check for structure consistency Visualize the structure contained in the structure input file given in the -cs , -rs , or -ls options and make sure it is consistent (as shown in Fig 1, right panel). On the other hand, if the structure is \"broken\" (as shown in Fig 1, left panel) this could generate inconsistent results. Generate the structure from tpr file gmx editconf -f md.tpr -o md.pdb Figure 1. Vizualization of two different input structures files. Left: \"Broken\" structure; Right: Centered structure Make sure you have fitted the trajectory Visualize the trajectory given in the -ct , -rt , or -lt options and make sure the PBC has been removed (as shown in Fig 2, right panel). On the other hand, if the trajectory has not been fitted (as shown in Fig 2, left panel) this could generate inconsistent results. Steps: Generate a group that contains both molecules gmx make_ndx -n index.ndx >1 | 12 >q Assuming 1 is the receptor and 12 is the ligand. This creates a new group (number 20 in this example) remove the PBC gmx trjconv -s md.tpr -f md.xtc -o md_noPBC.xtc -pbc mol -center -n -ur compact center: 20 (created group) output: 0 remove the rotation and translation with respect to the reference structure (optional) gmx trjconv -s md.tpr -f md_noPBC.xtc -o md_fit.xtc -n -fit rot+trans fit: 20 (created group) output: 0 Visualization Make sure that the trajectory is consistent (as shown in Fig 2, right panel) If the process is not succesful, consider using other options like -pbc nojump (as suggested here ) Figure 2. Vizualization of two different input trajectory files. Left: Trajectory with PBC; Right: Trajectory centered, fitted and with PBC removed. You are trying to calculate the energetic contribution of a very large group. Technically, the energy value should not exceed 7 digits, so if you get a value higher than this, this error will occur. Although gmx_MMPBSA can handle very large systems, it cannot determine certain energetic terms. This is a sander limitation when writing the output file.","title":"Possible solutions:"},{"location":"Q%26A/calculations/#possible-solutions_1","text":"The error could be solved by recompiling sander with some modifications in the output function. However, this is not recommended since the error can be large. Another possible solution could be modifying the parameters of the calculation (solvent model, internal dielectric constant) or just performing the calculation for a part of the system (sub-system). I get high values for the solvation energy when using PB model When using PB model, inp=2 is used as default to calculate total non-polar solvation free energy, that is, the total non-polar solvation free energy will be modeled as two terms: the cavity term and the dispersion term. The dispersion term is computed with a surface-based integration method closely related to the PCM solvent for quantum chemical programs. Under this framework, the cavity term is still computed as a term linearly proportional to the molecular volume enclosed by SASA.","title":"Possible solutions:"},{"location":"Q%26A/calculations/#possible-solutions_2","text":"You may want to try inp=1 and avoid the EDISPER contribution. This way, the total non-polar solvation free energy will be modeled as a single term linearly proportional to the solvent-accessible surface area. Just add inp=1 in the &pb namelist variables in the input file. See example below: &general startframe=5, endframe=100, interval=5, verbose=2, forcefields=\"oldff/leaprc.ff99SB,leaprc.gaff\" / &pb istrng=0.15, fillratio=4.0, inp=1 / Another way to avoid the EDISPER contribution is by modifying the _GMXMMPBSA_info file. Changing the value of INPUT['inp'] to 1 and run: gmx_MMPBSA --rewrite-output will avoid the calculation of the EDISPER contribution and report just the ENPOLAR contribution as a term linearly proportional to the molecular volume enclosed by SASA. Info Note that these two approximations will yield different values for the non-polar component of the solvation energy (see here ). Use one or another depending on your interest. Check this publication and see the drawbacks of modeling the total non-polar solvation free energy with two terms, i.e. , the cavity term and the dispersion term. Sometimes there are imbalances in the cancellation of error between the two components and this can produce unrealistic non-polar energy values. NMODE calculation finish in error The only error reported is probably related to RAM saturation. NMODE calculations require a considerable amount of RAM depending on the number of atoms in your system. The amount of total RAM consumed during the calculation will be: RAM for 1 frame * number of threads","title":"Possible solutions:"},{"location":"Q%26A/installation/","text":"Installation \u00b6 Here we describe a series of more frequent reported problems related mainly to the installation process and their possible solutions. I don't find amber.python executable Solution: \u00b6 Make sure that you have installed Ambertools20 and sourced the amber.sh(zch) file If you installed Ambertools20 from conda, use that python executable I get an error related to MPI when I try to install gmx_MMPBSA If you get an error like this: error: Cannot compile MPI programs. Check your configuration!!! Solution: \u00b6 Please try installing/reinstalling the OpenMPI library like this: sudo apt install openmpi-bin libopenmpi-dev openssh-client or this way sudo apt install --reinstall openmpi-bin libopenmpi-dev openssh-client I don't find the gmx_MMPBSA executable Solution: \u00b6 Make sure that you have installed gmx_MMPBSA ( See here ) Check if the miniconda bin folder are in the PATH ( See here ) Check if the gmx_MMPBSA application has permission to run as a program When I run gmx_MMPBSA I get this error ModuleNotFoundError: No module named 'parmed' Solution: \u00b6 Please see this issue to see the solution","title":"Installation"},{"location":"Q%26A/installation/#installation","text":"Here we describe a series of more frequent reported problems related mainly to the installation process and their possible solutions. I don't find amber.python executable","title":"Installation"},{"location":"Q%26A/installation/#solution","text":"Make sure that you have installed Ambertools20 and sourced the amber.sh(zch) file If you installed Ambertools20 from conda, use that python executable I get an error related to MPI when I try to install gmx_MMPBSA If you get an error like this: error: Cannot compile MPI programs. Check your configuration!!!","title":"Solution:"},{"location":"Q%26A/installation/#solution_1","text":"Please try installing/reinstalling the OpenMPI library like this: sudo apt install openmpi-bin libopenmpi-dev openssh-client or this way sudo apt install --reinstall openmpi-bin libopenmpi-dev openssh-client I don't find the gmx_MMPBSA executable","title":"Solution:"},{"location":"Q%26A/installation/#solution_2","text":"Make sure that you have installed gmx_MMPBSA ( See here ) Check if the miniconda bin folder are in the PATH ( See here ) Check if the gmx_MMPBSA application has permission to run as a program When I run gmx_MMPBSA I get this error ModuleNotFoundError: No module named 'parmed'","title":"Solution:"},{"location":"Q%26A/installation/#solution_3","text":"Please see this issue to see the solution","title":"Solution:"},{"location":"examples/","text":"Here you can find a representation of almost all the types of calculations and analyses that you can perform with gmx_MMPBSA . Although each example focuses on specific cases, you can use gmx_MMPBSA on systems that combine a number of different components ( i.e. metalloprotein-ligand complex, Protein-DNA-ligand, etc.). In addition, several types of calculations ( e.g. GB, Alanine scanning and Per-residue decomposition; PB, Interaction Entropy, and Per-wise decomposition) can be also performed in the same run for a specific system. Systems \u00b6 This is a representation of the systems that can be processed and analyzed with gmx_MMPBSA. Our program has a robust method to process input structures. Even if your system is not represented here, still have a go, you won't be disappointed! \ud83d\ude00 Protein-protein 1 2 3 Protein-ligand 1 2 Protein-DNA 1 2 3 Protein-glycan 1 2 3 MMPBSA with membrane proteins 1 2 Metalloprotein-ligand 1 2 Multicomponent system (Protein-DNA-RNA-Ions-Ligand) 1 2 3 COVID-19 related proteins Info Main protease Papain-like protease S1-ACE2 complex S1 RBD with antibody CHARMMff support \u00b6 This section focuses more on how to work with systems prepared with CHARMM force fields. We only show few examples for better clarity. Protein-ligand 1 2 Protein-ligand complex embedded in membrane 1 Protein-ligand with LPH atoms OPLSff support \u00b6 This section focuses more on how to work with systems prepared with OPLS force fields. We only show few examples for better clarity. Protein-protein Analysis \u00b6 This section focuses on the analysis that can be performed with gmx_MMPBSA. Although each example focuses on specific cases, you can use gmx_MMPBSA to perform several types of calculations ( e.g. GB, Alanine scanning and Per-residue decomposition; PB, Interaction Entropy, and Per-residue decomposition) in the same run for a specific system. Single Trajectory Protocol 1 2 3 Multiple Trajectory Protocol 1 Binding free energy calculations Binding free energy calculation with GB Binding free energy calculation with GBNSR6 Binding free energy calculation with linear PB (LPBE) Binding free energy calculation with NonLinear PB (non-LPBE) Binding free energy calculation with 3D-RISM model 1 Alanine scanning 1 2 3 Decomposition analysis 1 2 3 Entropy Interaction Entropy calculations 1 2 3 NMODE Entropy calculations 1 C2 Entropy calculations Stability calculations 1 2 3 QM/MMGBSA calculations Correlation Support for psf_dcd files \u00b6 This section focuses on how to work with psf-dcd files. These files are used for several MD simulation programs such as NAMD, OpenMM or GENESIS. We plan to add more examples in the near future. Protein-protein binding free energy calculations Protein-ligand binding free energy calculations Binding free energy calculations in multicomponent systems It is part of the All set defined with -t 0 in gmx_MMPBSA_test \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 It is part of the Minimal set defined with -t 1 in gmx_MMPBSA_test \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 It is part of the Fast set defined with -t 2 in gmx_MMPBSA_test \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9","title":"Examples"},{"location":"examples/#systems","text":"This is a representation of the systems that can be processed and analyzed with gmx_MMPBSA. Our program has a robust method to process input structures. Even if your system is not represented here, still have a go, you won't be disappointed! \ud83d\ude00 Protein-protein 1 2 3 Protein-ligand 1 2 Protein-DNA 1 2 3 Protein-glycan 1 2 3 MMPBSA with membrane proteins 1 2 Metalloprotein-ligand 1 2 Multicomponent system (Protein-DNA-RNA-Ions-Ligand) 1 2 3 COVID-19 related proteins Info Main protease Papain-like protease S1-ACE2 complex S1 RBD with antibody","title":"Systems"},{"location":"examples/#charmmff-support","text":"This section focuses more on how to work with systems prepared with CHARMM force fields. We only show few examples for better clarity. Protein-ligand 1 2 Protein-ligand complex embedded in membrane 1 Protein-ligand with LPH atoms","title":"CHARMMff support"},{"location":"examples/#oplsff-support","text":"This section focuses more on how to work with systems prepared with OPLS force fields. We only show few examples for better clarity. Protein-protein","title":"OPLSff support"},{"location":"examples/#analysis","text":"This section focuses on the analysis that can be performed with gmx_MMPBSA. Although each example focuses on specific cases, you can use gmx_MMPBSA to perform several types of calculations ( e.g. GB, Alanine scanning and Per-residue decomposition; PB, Interaction Entropy, and Per-residue decomposition) in the same run for a specific system. Single Trajectory Protocol 1 2 3 Multiple Trajectory Protocol 1 Binding free energy calculations Binding free energy calculation with GB Binding free energy calculation with GBNSR6 Binding free energy calculation with linear PB (LPBE) Binding free energy calculation with NonLinear PB (non-LPBE) Binding free energy calculation with 3D-RISM model 1 Alanine scanning 1 2 3 Decomposition analysis 1 2 3 Entropy Interaction Entropy calculations 1 2 3 NMODE Entropy calculations 1 C2 Entropy calculations Stability calculations 1 2 3 QM/MMGBSA calculations Correlation","title":"Analysis"},{"location":"examples/#support-for-psf_dcd-files","text":"This section focuses on how to work with psf-dcd files. These files are used for several MD simulation programs such as NAMD, OpenMM or GENESIS. We plan to add more examples in the near future. Protein-protein binding free energy calculations Protein-ligand binding free energy calculations Binding free energy calculations in multicomponent systems It is part of the All set defined with -t 0 in gmx_MMPBSA_test \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 It is part of the Minimal set defined with -t 1 in gmx_MMPBSA_test \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 It is part of the Fast set defined with -t 2 in gmx_MMPBSA_test \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9 \u21a9","title":"Support for psf_dcd files"},{"location":"examples/gmx_MMPBSA_test/","text":"gmx_MMPBSA_test command-line \u00b6 $ gmx_MMPBSA_test -h usage: gmx_MMPBSA_test [ -h ] [ -v ] [ -t [{ 0 ,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18 } [{ 0 ,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18 } ... ]]] [ -f FOLDER ] [ -r ] [ -ng ] [ -n NUM_PROCESSORS ] This program is part of gmx_MMPBSA and will allow you to run various gmx_MMPBSA examples easily. optional arguments: -h, --help show this help message and exit -v, --version show program ' s version number and exit Test options: -t [{ 0 ,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18 } [{ 0 ,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18 } ... ]] The level the test is going to be run at. Multiple systems and analysis can be run at the same time. Nr. of Sys * 0 16 All -- Run all examples ( Can take a long time!!! ) * 1 13 Minimal -- Does a minimal test with a set of systems and analyzes that show that gmx_MMPBSA runs correctly. Only exclude 3drism, nmode protein-ligand MT because take a long time or are redundant * 2 9 Fast -- Only the calculations that take a short time are run ( Default ) [ Systems ] : Slow Frames * 3 . | 10 Protein-Ligand ( Single trajectory approximation ) * 4 . | 10 Protein-Protein * 5 . | 10 Protein-DNA * 6 x | 4 Protein-Membrane * 7 . | 10 Protein-Glycan * 8 x | 4 Metalloprotein-Peptide * 9 . | 10 Protein-DNA-RNA-IONs-Ligand * 10 x | 4 Protein-Ligand ( CHARMM force field ) * 11 x | 4 Protein-ligand complex in membrane with CHARMMff [ Analysis ] : Slow Frames * 12 . | 10 Alanine Scanning * 13 . | 10 Stability calculation * 14 . | 10 Decomposition Analysis * 15 . | 16 Interaction Entropy approximation * 16 . | 10 Protein-Ligand ( Multiple trajectory approximation ) * 17 x | 4 Entropy calculation using Normal Mode approximation * 18 x | 4 Calculations using 3D-RISM approximation -f FOLDER, --folder FOLDER Defines the folder to store all data -r, --reuse Defines the existing test forlder will be reuse -ng, --nogui No open gmx_MMPBSA_ana after all calculations finished -n NUM_PROCESSORS, --num_processors NUM_PROCESSORS Defines the number of processor cores you want to use with MPI per calculation. If the number of frames is less than the number of cpus defined, the calculation will be performed with the number of processors = number of frames. gmx_MMPBSA is an effort to implement the GB/PB and others calculations in GROMACS. Based on MMPBSA.py ( version 16 .0 ) and AmberTools20 Running gmx_MMPBSA_test \u00b6 gmx_MMPBSA_test is designed to run a set of samples (all or minimal) or a specific example efficiently. Additionally, gmx_MMPBSA_test can run in parallel, decreasing the execution time gmx_MMPBSA_test will download the most recent version of the repository in the specified folder and will perform the calculations. Sets in gmx_MMPBSA_test Fast Minimal All Multiple selection Single selection gmx_MMPBSA_test -f /home/user/Documents -n 10 Through this command-line, gmxMMPBSA_test will: Download gmx_MMPBSA repository content in /home/user/Documents Works with Fast set of examples [-t 2 is the default] Perform the calculation on 9 examples sequentially, using 10 cpus each time gmx_MMPBSA_test -f /home/user/Documents -n 10 -t 1 Through this command-line, gmxMMPBSA_test will: Download gmx_MMPBSA repository content in /home/user/Documents Works with Minimal set of examples [-t 1] Perform the calculation on 13 examples sequentially, using 10 cpus each time gmx_MMPBSA_test -f /home/user/Documents -t 0 -n 10 Through this command-line, gmxMMPBSA_test will: Download gmx_MMPBSA repository content in /home/user/Documents Works with All set of examples Perform the calculation on 16 examples sequentially, using 10 cpus each time gmx_MMPBSA_test -f /home/user/Documents -t 3 5 7 Through this command-line, gmxMMPBSA_test will: Download gmx_MMPBSA repository content in /home/user/Documents Execute 3 [Protein-Ligand (Single Trajectory approach)], 5 [Protein-DNA], and 7 [Protein-Glycan] examples gmx_MMPBSA_test -f /home/user/Documents -t 3 Through this command-line, gmxMMPBSA_test will: Download gmx_MMPBSA repository content in /home/user/Documents Execute 3 [Protein-Ligand (Single Trajectory approach)] example","title":"gmx_MMPBSA_test"},{"location":"examples/gmx_MMPBSA_test/#gmx_mmpbsa_test-command-line","text":"$ gmx_MMPBSA_test -h usage: gmx_MMPBSA_test [ -h ] [ -v ] [ -t [{ 0 ,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18 } [{ 0 ,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18 } ... ]]] [ -f FOLDER ] [ -r ] [ -ng ] [ -n NUM_PROCESSORS ] This program is part of gmx_MMPBSA and will allow you to run various gmx_MMPBSA examples easily. optional arguments: -h, --help show this help message and exit -v, --version show program ' s version number and exit Test options: -t [{ 0 ,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18 } [{ 0 ,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18 } ... ]] The level the test is going to be run at. Multiple systems and analysis can be run at the same time. Nr. of Sys * 0 16 All -- Run all examples ( Can take a long time!!! ) * 1 13 Minimal -- Does a minimal test with a set of systems and analyzes that show that gmx_MMPBSA runs correctly. Only exclude 3drism, nmode protein-ligand MT because take a long time or are redundant * 2 9 Fast -- Only the calculations that take a short time are run ( Default ) [ Systems ] : Slow Frames * 3 . | 10 Protein-Ligand ( Single trajectory approximation ) * 4 . | 10 Protein-Protein * 5 . | 10 Protein-DNA * 6 x | 4 Protein-Membrane * 7 . | 10 Protein-Glycan * 8 x | 4 Metalloprotein-Peptide * 9 . | 10 Protein-DNA-RNA-IONs-Ligand * 10 x | 4 Protein-Ligand ( CHARMM force field ) * 11 x | 4 Protein-ligand complex in membrane with CHARMMff [ Analysis ] : Slow Frames * 12 . | 10 Alanine Scanning * 13 . | 10 Stability calculation * 14 . | 10 Decomposition Analysis * 15 . | 16 Interaction Entropy approximation * 16 . | 10 Protein-Ligand ( Multiple trajectory approximation ) * 17 x | 4 Entropy calculation using Normal Mode approximation * 18 x | 4 Calculations using 3D-RISM approximation -f FOLDER, --folder FOLDER Defines the folder to store all data -r, --reuse Defines the existing test forlder will be reuse -ng, --nogui No open gmx_MMPBSA_ana after all calculations finished -n NUM_PROCESSORS, --num_processors NUM_PROCESSORS Defines the number of processor cores you want to use with MPI per calculation. If the number of frames is less than the number of cpus defined, the calculation will be performed with the number of processors = number of frames. gmx_MMPBSA is an effort to implement the GB/PB and others calculations in GROMACS. Based on MMPBSA.py ( version 16 .0 ) and AmberTools20","title":"gmx_MMPBSA_test command-line"},{"location":"examples/gmx_MMPBSA_test/#running-gmx_mmpbsa_test","text":"gmx_MMPBSA_test is designed to run a set of samples (all or minimal) or a specific example efficiently. Additionally, gmx_MMPBSA_test can run in parallel, decreasing the execution time gmx_MMPBSA_test will download the most recent version of the repository in the specified folder and will perform the calculations. Sets in gmx_MMPBSA_test Fast Minimal All Multiple selection Single selection gmx_MMPBSA_test -f /home/user/Documents -n 10 Through this command-line, gmxMMPBSA_test will: Download gmx_MMPBSA repository content in /home/user/Documents Works with Fast set of examples [-t 2 is the default] Perform the calculation on 9 examples sequentially, using 10 cpus each time gmx_MMPBSA_test -f /home/user/Documents -n 10 -t 1 Through this command-line, gmxMMPBSA_test will: Download gmx_MMPBSA repository content in /home/user/Documents Works with Minimal set of examples [-t 1] Perform the calculation on 13 examples sequentially, using 10 cpus each time gmx_MMPBSA_test -f /home/user/Documents -t 0 -n 10 Through this command-line, gmxMMPBSA_test will: Download gmx_MMPBSA repository content in /home/user/Documents Works with All set of examples Perform the calculation on 16 examples sequentially, using 10 cpus each time gmx_MMPBSA_test -f /home/user/Documents -t 3 5 7 Through this command-line, gmxMMPBSA_test will: Download gmx_MMPBSA repository content in /home/user/Documents Execute 3 [Protein-Ligand (Single Trajectory approach)], 5 [Protein-DNA], and 7 [Protein-Glycan] examples gmx_MMPBSA_test -f /home/user/Documents -t 3 Through this command-line, gmxMMPBSA_test will: Download gmx_MMPBSA repository content in /home/user/Documents Execute 3 [Protein-Ligand (Single Trajectory approach)] example","title":"Running gmx_MMPBSA_test"},{"location":"examples/3D-RISM/","text":"Protein-protein binding free energy calculations with MM/3D-RISM \u00b6 Info This example can be found in the examples/3D-RISM directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. Requirements \u00b6 In its simplest version, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx file containing the receptor and ligand in separated groups Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 18 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for MM/3D-RISM 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for MM/3D-RISM This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"3D-RISM\", startframe=5, endframe=8, / &rism polardecomp=0, tolerance=0.001, rism_verbose=2, closure=\"kh\" / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations. Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is also another protein) amber format topologies and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa. in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 4 frames are going to be used when performing the MM/PB(GB)SA calculation with the 3D-RISM model using Kovalenko-Hirata clousure with a 0.001. Note that we have increased the tolerance from 0.00001 (default) to 0.001 in order to reduce the computation time. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please refer to the gmx_MMPBSA_ana section for more information","title":"BFE calculation with 3D-RISM"},{"location":"examples/3D-RISM/#protein-protein-binding-free-energy-calculations-with-mm3d-rism","text":"Info This example can be found in the examples/3D-RISM directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository.","title":"Protein-protein binding free energy calculations with MM/3D-RISM"},{"location":"examples/3D-RISM/#requirements","text":"In its simplest version, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx file containing the receptor and ligand in separated groups Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/3D-RISM/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 18 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for MM/3D-RISM 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for MM/3D-RISM This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"3D-RISM\", startframe=5, endframe=8, / &rism polardecomp=0, tolerance=0.001, rism_verbose=2, closure=\"kh\" / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations.","title":"Command-line"},{"location":"examples/3D-RISM/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is also another protein) amber format topologies and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa. in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 4 frames are going to be used when performing the MM/PB(GB)SA calculation with the 3D-RISM model using Kovalenko-Hirata clousure with a 0.001. Note that we have increased the tolerance from 0.00001 (default) to 0.001 in order to reduce the computation time. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please refer to the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/Alanine_scanning/","text":"Alanine scanning \u00b6 Info This example can be found in the examples/Alanine_scanning directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. Requirements \u00b6 In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx file containing the receptor and ligand in separated groups Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -cr com.pdb -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -cr com.pdb -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 12 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for Alanine scanning 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 Sample input file for Alanine scanning This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Alanine_Scanning\", startframe=1, endframe=10, forcefields=\"leaprc.protein.ff14SB\", PBRadii=4, / &gb igb=8, saltcon=0.150, / &alanine_scanning mutant='ALA', mutant_res='R:23', cas_intdiel=1 / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations. Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand amber format topologies and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb8 (GB-Neck2) model and a salt concentration = 0.15M. Of note, mbondi3 radii ( PBRadii=4 ) will be used as recommended for GB-Neck2 solvation model. Also, The dielectric constant ( intdiel ) will be modified depending on the nature of the residue to be mutated as cas_intdiel=1 . In this case, the residue R/23 is a Tyrosine which means intdiel = 3 will be used. Note also that we used a reference structure to ensure that the selection process for the residue to be mutated is successful (see below). A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information How to define properly which residue is going to be mutated? \u00b6 The generated PDB files must keep the original numbering, so selection based on residue number is reliable. However, the chain id can vary depending on several factors. If you use the reference structure ( -cr flag), then you don't have to worry about any changes. The selection will be based on this structure. On the other hand, if this reference structure is omitted, then it will depend on: GROMACS version We have noticed that in GROMACS 20xx.x versions, trjconv can omit the chain IDs. The option assign_chainID This option defines when chain IDs are assigned. Please see this variable in &general namelist variables section Tip In any of these cases, you must verify that the selection is correct. You can see the structure of the fixed Complex structure ( _GMXMMPBSA_FIXED_COM.pdb ), Receptor ( _GMXMMPBSA_REC_Fx.pdb ), and ligand ( _GMXMMPBSA_LIG_Fy.pdb ) respectively. x and y represent the fragment for discontinuous molecules","title":"Alanine scanning"},{"location":"examples/Alanine_scanning/#alanine-scanning","text":"Info This example can be found in the examples/Alanine_scanning directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository.","title":"Alanine scanning"},{"location":"examples/Alanine_scanning/#requirements","text":"In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx file containing the receptor and ligand in separated groups Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Alanine_scanning/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -cr com.pdb -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -cr com.pdb -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 12 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for Alanine scanning 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 Sample input file for Alanine scanning This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Alanine_Scanning\", startframe=1, endframe=10, forcefields=\"leaprc.protein.ff14SB\", PBRadii=4, / &gb igb=8, saltcon=0.150, / &alanine_scanning mutant='ALA', mutant_res='R:23', cas_intdiel=1 / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations.","title":"Command-line"},{"location":"examples/Alanine_scanning/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand amber format topologies and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb8 (GB-Neck2) model and a salt concentration = 0.15M. Of note, mbondi3 radii ( PBRadii=4 ) will be used as recommended for GB-Neck2 solvation model. Also, The dielectric constant ( intdiel ) will be modified depending on the nature of the residue to be mutated as cas_intdiel=1 . In this case, the residue R/23 is a Tyrosine which means intdiel = 3 will be used. Note also that we used a reference structure to ensure that the selection process for the residue to be mutated is successful (see below). A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/Alanine_scanning/#how-to-define-properly-which-residue-is-going-to-be-mutated","text":"The generated PDB files must keep the original numbering, so selection based on residue number is reliable. However, the chain id can vary depending on several factors. If you use the reference structure ( -cr flag), then you don't have to worry about any changes. The selection will be based on this structure. On the other hand, if this reference structure is omitted, then it will depend on: GROMACS version We have noticed that in GROMACS 20xx.x versions, trjconv can omit the chain IDs. The option assign_chainID This option defines when chain IDs are assigned. Please see this variable in &general namelist variables section Tip In any of these cases, you must verify that the selection is correct. You can see the structure of the fixed Complex structure ( _GMXMMPBSA_FIXED_COM.pdb ), Receptor ( _GMXMMPBSA_REC_Fx.pdb ), and ligand ( _GMXMMPBSA_LIG_Fy.pdb ) respectively. x and y represent the fragment for discontinuous molecules","title":"How to define properly which residue is going to be mutated?"},{"location":"examples/COVID-19_related_proteins/","text":"Given its relevance, we have tested gmx_MMPBSA with multiple COVID-19 related systems. The ultimate goal is to provide a useful tool for those researchers working on COVID-19 projects. The capability of gmx_MMPBSA to handle systems that combine a number of characteristics (i.e. metalloprotein-ligand, Protein-protein, Membrane proteins, glycosylated proteins etc.) constitutes a tremendous help for those researchers that use MD simulations and binding free energy calculations in their projects. We plan to incorporate more systems as they arise in the literature and databases. All these systems haven been previously prepared in CHARMM-GUI, and they are available at the CHARMM-GUI Archive - COVID-19 Proteins Library . References \u00b6 S. Jo, T. Kim, V.G. Iyer, and W. Im (2008) CHARMM-GUI: A Web-based Graphical User Interface for CHARMM. J. Comput. Chem. 29:1859-1865 H. Woo, S-J. Park, Y.K. Choi, T. Park, M. Tanveer, Y. Cao, N.R. Kern, J. Lee, M.S. Yeom, T.I. Croll, C. Seok, and W. Im (2020) Developing a Fully-glycosylated Full-length SARS-CoV-2 Spike Protein Model in a Viral Membrane. J. Phys. Chem. B. 124:7128\u20137137 Y.K. Choi, Y. Cao, M. Frank, H. Woo, S-J. Park, M.S. Yeom, T.I. Croll, C. Seok, W. Im (2021) Structure, Dynamics, Receptor Binding, and Antibody Binding of Fully-glycosylated Full-length SARS-CoV-2 Spike Protein in a Viral Membrane. J. Chem. Theory Comput. (in press)","title":"Info"},{"location":"examples/COVID-19_related_proteins/#references","text":"S. Jo, T. Kim, V.G. Iyer, and W. Im (2008) CHARMM-GUI: A Web-based Graphical User Interface for CHARMM. J. Comput. Chem. 29:1859-1865 H. Woo, S-J. Park, Y.K. Choi, T. Park, M. Tanveer, Y. Cao, N.R. Kern, J. Lee, M.S. Yeom, T.I. Croll, C. Seok, and W. Im (2020) Developing a Fully-glycosylated Full-length SARS-CoV-2 Spike Protein Model in a Viral Membrane. J. Phys. Chem. B. 124:7128\u20137137 Y.K. Choi, Y. Cao, M. Frank, H. Woo, S-J. Park, M.S. Yeom, T.I. Croll, C. Seok, W. Im (2021) Structure, Dynamics, Receptor Binding, and Antibody Binding of Fully-glycosylated Full-length SARS-CoV-2 Spike Protein in a Viral Membrane. J. Chem. Theory Comput. (in press)","title":"References"},{"location":"examples/COVID-19_related_proteins/Main_protease_7l5d/","text":"CHARMM and MM(PB/GB)SA PB model is recommended when working with CHARMMff files. Nevertheless, the combination of PB/GB models and CHARMM force field hasn't been tested extensively. Please, check this thread for more information and proceed with caution. SARS-CoV-2 Main Protease in complex with demethylated analog of masitinib binding free energy calculations (Single Trajectory method) with CHARMMff files \u00b6 Info This example can be found in the examples/COVID-19_related_proteins/Main_protease_7l5d directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA Github repository. Requirements \u00b6 In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr final GROMACS MD trajectory, fitted and with no pbc. A topology file top take into account that *.itp files belonging to the topology file should be also present in the folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -cp topol.top mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -cp topol.top where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for PB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 Sample input file for PB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"SARS_CoV2_Main_protease\", / &pb #radiopt=0 is recommended which means using radii from the prmtop file for both the PB calculation and for the NP calculation istrng=0.15, fillratio=4.0, radiopt=0, inp=1, / Remember radiopt = 0 is recommended which means using radii from the prmtop file See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 1 13 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. A topology file is also needed (mandatory) in this case to generate the topology files in amber format with all the terms for CHARMM force field. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Main protease"},{"location":"examples/COVID-19_related_proteins/Main_protease_7l5d/#sars-cov-2-main-protease-in-complex-with-demethylated-analog-of-masitinib-binding-free-energy-calculations-single-trajectory-method-with-charmmff-files","text":"Info This example can be found in the examples/COVID-19_related_proteins/Main_protease_7l5d directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA Github repository.","title":"SARS-CoV-2 Main Protease in complex with demethylated analog of masitinib binding free energy calculations (Single Trajectory method) with CHARMMff files"},{"location":"examples/COVID-19_related_proteins/Main_protease_7l5d/#requirements","text":"In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr final GROMACS MD trajectory, fitted and with no pbc. A topology file top take into account that *.itp files belonging to the topology file should be also present in the folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/COVID-19_related_proteins/Main_protease_7l5d/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -cp topol.top mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -cp topol.top where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for PB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 Sample input file for PB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"SARS_CoV2_Main_protease\", / &pb #radiopt=0 is recommended which means using radii from the prmtop file for both the PB calculation and for the NP calculation istrng=0.15, fillratio=4.0, radiopt=0, inp=1, / Remember radiopt = 0 is recommended which means using radii from the prmtop file See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples","title":"Command-line"},{"location":"examples/COVID-19_related_proteins/Main_protease_7l5d/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 1 13 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. A topology file is also needed (mandatory) in this case to generate the topology files in amber format with all the terms for CHARMM force field. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/COVID-19_related_proteins/Papain-like_protease_7koj/","text":"CHARMM and MM(PB/GB)SA PB model is recommended when working with CHARMMff files. Nevertheless, the combination of PB/GB models and CHARMM force field hasn't been tested extensively. Please, check this thread for more information and proceed with caution. Papain-Like Protease of SARS CoV-2, C111S mutant, in complex with PLP_Snyder494 inhibitor binding free energy calculations (Single Trajectory method) with CHARMMff files \u00b6 Info This example can be found in the examples/COVID-19_related_proteins/Papain-like_protease_7koj directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA Github repository. Requirements \u00b6 In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr final GROMACS MD trajectory, fitted and with no pbc. A topology file top take into account that *.itp files belonging to the topology file should be also present in the folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 18 13 -ct com_traj.xtc -cp topol.top mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 18 13 -ct com_traj.xtc -cp topol.top where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for PB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 Sample input file for PB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"SARS_CoV2_Papain_like_protease\", / &pb #radiopt=0 is recommended which means using radii from the prmtop file for both the PB calculation and for the NP calculation istrng=0.15, fillratio=4.0, radiopt=0, inp=1, / Remember radiopt = 0 is recommended which means using radii from the prmtop file See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 18 13 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. A topology file is also needed (mandatory) in this case to generate the topology files in amber format with all the terms for CHARMM force field. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Papain-like protease"},{"location":"examples/COVID-19_related_proteins/Papain-like_protease_7koj/#papain-like-protease-of-sars-cov-2-c111s-mutant-in-complex-with-plp_snyder494-inhibitor-binding-free-energy-calculations-single-trajectory-method-with-charmmff-files","text":"Info This example can be found in the examples/COVID-19_related_proteins/Papain-like_protease_7koj directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA Github repository.","title":"Papain-Like Protease of SARS CoV-2, C111S mutant, in complex with PLP_Snyder494 inhibitor binding free energy calculations (Single Trajectory method) with CHARMMff files"},{"location":"examples/COVID-19_related_proteins/Papain-like_protease_7koj/#requirements","text":"In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr final GROMACS MD trajectory, fitted and with no pbc. A topology file top take into account that *.itp files belonging to the topology file should be also present in the folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/COVID-19_related_proteins/Papain-like_protease_7koj/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 18 13 -ct com_traj.xtc -cp topol.top mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 18 13 -ct com_traj.xtc -cp topol.top where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for PB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 Sample input file for PB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"SARS_CoV2_Papain_like_protease\", / &pb #radiopt=0 is recommended which means using radii from the prmtop file for both the PB calculation and for the NP calculation istrng=0.15, fillratio=4.0, radiopt=0, inp=1, / Remember radiopt = 0 is recommended which means using radii from the prmtop file See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples","title":"Command-line"},{"location":"examples/COVID-19_related_proteins/Papain-like_protease_7koj/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 18 13 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. A topology file is also needed (mandatory) in this case to generate the topology files in amber format with all the terms for CHARMM force field. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/COVID-19_related_proteins/S1-ACE2_complex_7dmu/","text":"CHARMM and MM(PB/GB)SA PB model is recommended when working with CHARMMff files. Nevertheless, the combination of PB/GB models and CHARMM force field hasn't been tested extensively. Please, check this thread for more information and proceed with caution. SARS-CoV-2 spike receptor-binding domain complexed with high affinity ACE2 mutant 3N39 binding free energy calculations (Single Trajectory method) with CHARMMff files \u00b6 Info This example can be found in the examples/COVID-19_related_proteins/S1-ACE2_complex_7dmu directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA Github repository. Requirements \u00b6 In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr final GROMACS MD trajectory, fitted and with no pbc. A topology file top take into account that *.itp files belonging to the topology file should be also present in the folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 20 19 -ct com_traj.xtc -cp topol.top mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 20 19 -ct com_traj.xtc -cp topol.top where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for PB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 Sample input file for PB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"SARS_CoV2_S1_ACE\", / &pb #radiopt=0 is recommended which means using radii from the prmtop file for both the PB calculation and for the NP calculation istrng=0.15, fillratio=4.0, radiopt=0, inp=1, / Remember radiopt = 0 is recommended which means using radii from the prmtop file See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 20 19 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. A topology file is also needed (mandatory) in this case to generate the topology files in amber format with all the terms for CHARMM force field. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"S1-ACE2 complex"},{"location":"examples/COVID-19_related_proteins/S1-ACE2_complex_7dmu/#sars-cov-2-spike-receptor-binding-domain-complexed-with-high-affinity-ace2-mutant-3n39-binding-free-energy-calculations-single-trajectory-method-with-charmmff-files","text":"Info This example can be found in the examples/COVID-19_related_proteins/S1-ACE2_complex_7dmu directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA Github repository.","title":"SARS-CoV-2 spike receptor-binding domain complexed with high affinity ACE2 mutant 3N39 binding free energy calculations (Single Trajectory method) with CHARMMff files"},{"location":"examples/COVID-19_related_proteins/S1-ACE2_complex_7dmu/#requirements","text":"In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr final GROMACS MD trajectory, fitted and with no pbc. A topology file top take into account that *.itp files belonging to the topology file should be also present in the folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/COVID-19_related_proteins/S1-ACE2_complex_7dmu/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 20 19 -ct com_traj.xtc -cp topol.top mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 20 19 -ct com_traj.xtc -cp topol.top where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for PB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 Sample input file for PB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"SARS_CoV2_S1_ACE\", / &pb #radiopt=0 is recommended which means using radii from the prmtop file for both the PB calculation and for the NP calculation istrng=0.15, fillratio=4.0, radiopt=0, inp=1, / Remember radiopt = 0 is recommended which means using radii from the prmtop file See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples","title":"Command-line"},{"location":"examples/COVID-19_related_proteins/S1-ACE2_complex_7dmu/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 20 19 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. A topology file is also needed (mandatory) in this case to generate the topology files in amber format with all the terms for CHARMM force field. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/COVID-19_related_proteins/S1_RBD_with_antibody_6zlr/","text":"CHARMM and MM(PB/GB)SA PB model is recommended when working with CHARMMff files. Nevertheless, the combination of PB/GB models and CHARMM force field hasn't been tested extensively. Please, check this thread for more information and proceed with caution. SARS-CoV-2 Receptor Binding Domain (RBD):CR3022 antibody complex binding free energy calculations (Single Trajectory method) with CHARMMff files \u00b6 Info This example can be found in the examples/COVID-19_related_proteins/S1_RBD_with_antibody_6zlr directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA Github repository. Requirements \u00b6 In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr final GROMACS MD trajectory, fitted and with no pbc. A topology file top take into account that *.itp files belonging to the topology file should be also present in the folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 21 20 -ct com_traj.xtc -cp topol.top mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 21 20 -ct com_traj.xtc -cp topol.top where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for PB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 Sample input file for PB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"SARS_CoV2_S1_Ab\", / &pb #radiopt=0 is recommended which means using radii from the prmtop file for both the PB calculation and for the NP calculation istrng=0.15, fillratio=4.0, radiopt=0, inp=1, / Remember radiopt = 0 is recommended which means using radii from the prmtop file See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 21 20 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. A topology file is also needed (mandatory) in this case to generate the topology files in amber format with all the terms for CHARMM force field. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"S1 RBD with antibody"},{"location":"examples/COVID-19_related_proteins/S1_RBD_with_antibody_6zlr/#sars-cov-2-receptor-binding-domain-rbdcr3022-antibody-complex-binding-free-energy-calculations-single-trajectory-method-with-charmmff-files","text":"Info This example can be found in the examples/COVID-19_related_proteins/S1_RBD_with_antibody_6zlr directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA Github repository.","title":"SARS-CoV-2 Receptor Binding Domain (RBD):CR3022 antibody complex binding free energy calculations (Single Trajectory method) with CHARMMff files"},{"location":"examples/COVID-19_related_proteins/S1_RBD_with_antibody_6zlr/#requirements","text":"In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr final GROMACS MD trajectory, fitted and with no pbc. A topology file top take into account that *.itp files belonging to the topology file should be also present in the folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/COVID-19_related_proteins/S1_RBD_with_antibody_6zlr/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 21 20 -ct com_traj.xtc -cp topol.top mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 21 20 -ct com_traj.xtc -cp topol.top where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for PB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 Sample input file for PB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"SARS_CoV2_S1_Ab\", / &pb #radiopt=0 is recommended which means using radii from the prmtop file for both the PB calculation and for the NP calculation istrng=0.15, fillratio=4.0, radiopt=0, inp=1, / Remember radiopt = 0 is recommended which means using radii from the prmtop file See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples","title":"Command-line"},{"location":"examples/COVID-19_related_proteins/S1_RBD_with_antibody_6zlr/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 21 20 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. A topology file is also needed (mandatory) in this case to generate the topology files in amber format with all the terms for CHARMM force field. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/Comp_receptor/","text":"Binding free energy calculations in multicomponent systems \u00b6 Info This example can be found in the examples/Comp_receptor directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. Requirements \u00b6 Danger The ligand mol2 file must be the Antechamber output. In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx file containing the receptor and ligand in separated groups Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file mol2 The Antechamber output mol2 file of ligand parametrization A topology file (not included) top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 33 14 -ct com_traj.xtc -lm ligand.mol2 -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 33 14 -ct com_traj.xtc -lm ligand.mol2 -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 9 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for GB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for GB calculation This input file is meant to show only that gmx_MMPBSA works. Although, we tried to use the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Complex_receptor\", forcefields=\"oldff/leaprc.ff99SBildn\",leaprc.gaff\" PBRadii=4, ions_parameters=1 / &gb igb=8, saltcon=0.150, intdiel=10 / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations. Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor (Protein+DNA+RNA+Ions) and ligand amber format topologies and trajectories will be obtained from that of the complex. Of note, a new variable \"forcefields\" has been added which eases the work with compound receptors with more than one type of molecule. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 33 14 ) are needed. A ligand .mol2 file is also needed for generating the ligand topology.The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 11 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb8 (GB-Neck2) model and a salt concentration = 0.15M. Of note, mbondi3 radii ( PBRadii=4 ) will be used as recommended for GB-Neck2 solvation model. Also, a high dielectric constant intdiel=10 will be used because of the high number of charged residues at the interface. In this case, Li/Merz ion parameters (12-6 normal usage set) for Mg ions were used. Check Amber manual for more info on ion parameters. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Multicomponent system"},{"location":"examples/Comp_receptor/#binding-free-energy-calculations-in-multicomponent-systems","text":"Info This example can be found in the examples/Comp_receptor directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository.","title":"Binding free energy calculations in multicomponent systems"},{"location":"examples/Comp_receptor/#requirements","text":"Danger The ligand mol2 file must be the Antechamber output. In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx file containing the receptor and ligand in separated groups Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file mol2 The Antechamber output mol2 file of ligand parametrization A topology file (not included) top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Comp_receptor/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 33 14 -ct com_traj.xtc -lm ligand.mol2 -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 33 14 -ct com_traj.xtc -lm ligand.mol2 -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 9 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for GB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for GB calculation This input file is meant to show only that gmx_MMPBSA works. Although, we tried to use the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Complex_receptor\", forcefields=\"oldff/leaprc.ff99SBildn\",leaprc.gaff\" PBRadii=4, ions_parameters=1 / &gb igb=8, saltcon=0.150, intdiel=10 / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations.","title":"Command-line"},{"location":"examples/Comp_receptor/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor (Protein+DNA+RNA+Ions) and ligand amber format topologies and trajectories will be obtained from that of the complex. Of note, a new variable \"forcefields\" has been added which eases the work with compound receptors with more than one type of molecule. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 33 14 ) are needed. A ligand .mol2 file is also needed for generating the ligand topology.The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 11 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb8 (GB-Neck2) model and a salt concentration = 0.15M. Of note, mbondi3 radii ( PBRadii=4 ) will be used as recommended for GB-Neck2 solvation model. Also, a high dielectric constant intdiel=10 will be used because of the high number of charged residues at the interface. In this case, Li/Merz ion parameters (12-6 normal usage set) for Mg ions were used. Check Amber manual for more info on ion parameters. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/Correlation/","text":"Correlation \u00b6 Info This example can be found in the examples/Correlation directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. Requirements \u00b6 In this case, gmx_MMPBSA will be run for each system and requires for each of them: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx file containing the receptor and ligand in separated groups Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. A topology file (not included) top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, use bash to loop over the folder and run the calculation in each one of them: for i in */ >do >echo $i >cd $i >gmx_MMPBSA -O -i mmpbsa.in -cs ../com.tpr -ci ../index.ndx -cg 20 21 -ct ../com_traj.xtc -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv -nogui >cd .. >done Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations. Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand amber format topologies and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 20 21 ) are needed. . As we are running a GB calculation for the wild-type and the mutants, we can use the same MD Structure+mass(db) ( ../com.tpr ), index ( ../index.ndx ), and the trajectory file ( ../com_traj.xtc ) for all systems. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation and will be specific for each mutant, indicating the mutation and the experimental Ki. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb8 (GB-Neck2) model and a salt concentration = 0.15M. Of note, mbondi3 radii ( PBRadii=4 ) will be used as recommended for GB-Neck2 solvation model. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved for each system. Correlation analysis with gmx_MMPBSA_ana \u00b6 Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana . For correlation analysis, gmx_MMPBSA_ana can load the system recursively from the folders with the following command-line: gmx_MMPBSA_ana -r The following video shows how to perform correlation analysis in gmx_MMPBSA_ana.","title":"Correlation"},{"location":"examples/Correlation/#correlation","text":"Info This example can be found in the examples/Correlation directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository.","title":"Correlation"},{"location":"examples/Correlation/#requirements","text":"In this case, gmx_MMPBSA will be run for each system and requires for each of them: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx file containing the receptor and ligand in separated groups Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. A topology file (not included) top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Correlation/#command-line","text":"That being said, once you are in the folder containing all files, use bash to loop over the folder and run the calculation in each one of them: for i in */ >do >echo $i >cd $i >gmx_MMPBSA -O -i mmpbsa.in -cs ../com.tpr -ci ../index.ndx -cg 20 21 -ct ../com_traj.xtc -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv -nogui >cd .. >done Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations.","title":"Command-line"},{"location":"examples/Correlation/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand amber format topologies and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 20 21 ) are needed. . As we are running a GB calculation for the wild-type and the mutants, we can use the same MD Structure+mass(db) ( ../com.tpr ), index ( ../index.ndx ), and the trajectory file ( ../com_traj.xtc ) for all systems. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation and will be specific for each mutant, indicating the mutation and the experimental Ki. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb8 (GB-Neck2) model and a salt concentration = 0.15M. Of note, mbondi3 radii ( PBRadii=4 ) will be used as recommended for GB-Neck2 solvation model. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved for each system.","title":"Considerations"},{"location":"examples/Correlation/#correlation-analysis-with-gmx_mmpbsa_ana","text":"Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana . For correlation analysis, gmx_MMPBSA_ana can load the system recursively from the folders with the following command-line: gmx_MMPBSA_ana -r The following video shows how to perform correlation analysis in gmx_MMPBSA_ana.","title":"Correlation analysis with gmx_MMPBSA_ana"},{"location":"examples/Decomposition_analysis/","text":"Decomposition analysis \u00b6 Info This example can be found in the examples/Decomposition_analysis directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. Requirements \u00b6 In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx file containing the receptor and ligand in separated groups Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file mol2 The Antechamber output mol2 file of ligand parametrization A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test ggmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv -do FINAL_DECOMP_MMPBSA.dat -deo FINAL_DECOMP_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv -do FINAL_DECOMP_MMPBSA.dat -deo FINAL_DECOMP_MMPBSA.csv gmx_MMPBSA_test -t 14 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for decomposition analysis 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 Sample input file for decomposition analysis This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Decomposition\", startframe=1, endframe=10, forcefields=\"leaprc.protein.ff14SB\" / &gb igb=5, saltcon=0.150, / #make sure to include at least one residue from both the receptor #and ligand in the print_res mask of the &decomp section. #this requirement is automatically fulfilled when using the within keyword. #http://archive.ambermd.org/201308/0075.html &decomp idecomp=2, dec_verbose=3, print_res=\"within 4\" / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations. Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a salt concentration = 0.15M. Per-residue decomp with 1-4 EEL added to EEL and 1-4 VDW added to VDW potential terms ( idecomp=2 ) is going to be performed and residues within 4\u00c5 in both receptor and ligand will be printed in the output file. Please see print_res variable in &decomp namelist variables section. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. A plain text ( FINAL_DECOMP_MMPBSA.dat ) and a CSV-format ( FINAL_DECOMP_MMPBSA.csv ) output files containing all energy terms for each printed residue in decomposition calculations will be also saved. Important In several cases, set cartoon_side_chain_helper, 1 in PyMOL causes undesired visual effects, e.g. it shows the terminal chain residue incompletely or hides the oxygen atoms of the PO3 group. Additionally, it can prevent the user from displaying any atoms that are hidden by this method, i.e. , the backbone atoms. In such cases, using the command set cartoon_side_chain_helper, 0 should solve teh problem. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information Alternatives for per-residue energy contribution visualization \u00b6 You can also use VMD and Chimera to view the modified pdb file with the per-residue energy contributions","title":"Decomposition analysis"},{"location":"examples/Decomposition_analysis/#decomposition-analysis","text":"Info This example can be found in the examples/Decomposition_analysis directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository.","title":"Decomposition analysis"},{"location":"examples/Decomposition_analysis/#requirements","text":"In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx file containing the receptor and ligand in separated groups Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file mol2 The Antechamber output mol2 file of ligand parametrization A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test ggmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv -do FINAL_DECOMP_MMPBSA.dat -deo FINAL_DECOMP_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv -do FINAL_DECOMP_MMPBSA.dat -deo FINAL_DECOMP_MMPBSA.csv gmx_MMPBSA_test -t 14 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for decomposition analysis 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 Sample input file for decomposition analysis This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Decomposition\", startframe=1, endframe=10, forcefields=\"leaprc.protein.ff14SB\" / &gb igb=5, saltcon=0.150, / #make sure to include at least one residue from both the receptor #and ligand in the print_res mask of the &decomp section. #this requirement is automatically fulfilled when using the within keyword. #http://archive.ambermd.org/201308/0075.html &decomp idecomp=2, dec_verbose=3, print_res=\"within 4\" / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations.","title":"Requirements"},{"location":"examples/Decomposition_analysis/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a salt concentration = 0.15M. Per-residue decomp with 1-4 EEL added to EEL and 1-4 VDW added to VDW potential terms ( idecomp=2 ) is going to be performed and residues within 4\u00c5 in both receptor and ligand will be printed in the output file. Please see print_res variable in &decomp namelist variables section. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. A plain text ( FINAL_DECOMP_MMPBSA.dat ) and a CSV-format ( FINAL_DECOMP_MMPBSA.csv ) output files containing all energy terms for each printed residue in decomposition calculations will be also saved. Important In several cases, set cartoon_side_chain_helper, 1 in PyMOL causes undesired visual effects, e.g. it shows the terminal chain residue incompletely or hides the oxygen atoms of the PO3 group. Additionally, it can prevent the user from displaying any atoms that are hidden by this method, i.e. , the backbone atoms. In such cases, using the command set cartoon_side_chain_helper, 0 should solve teh problem. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/Decomposition_analysis/#alternatives-for-per-residue-energy-contribution-visualization","text":"You can also use VMD and Chimera to view the modified pdb file with the per-residue energy contributions","title":"Alternatives for per-residue energy contribution visualization"},{"location":"examples/Entropy_calculations/C2_Entropy/","text":"C2 Entropy calculations \u00b6 Info in gmx_MMPBSA v1.5.0!!! This example can be found in the examples/Entropy_calculations/C2_Entropy directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA Github repository. Requirements \u00b6 In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx File containing the receptor and ligand in separated groups Receptor and ligand group integers Group numbers in the index files A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file mol2 The Antechamber output mol2 file of ligand parametrization A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for entropy calculations (C2) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Sample input file for entropy calculations (C2) This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"C2_entropy\", startframe=1, endframe=10, c2_entropy=1, temperature=303.15, / &gb igb=5, saltcon=0.150, / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations. Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa. in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a salt concentration = 0.15M. C2 Entropy will be calculated using all (100%) the frames. Of note, C2 method tends to give unrealistically large entropies when the standard deviation of the interaction energy > ~ 3.6kcal/mol. Of note, two other methods ( QH and nmode ) can be used for estimating the entropic contribution, though they are way more expensive in computation as compared with C2 method. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"C2 Entropy calculations"},{"location":"examples/Entropy_calculations/C2_Entropy/#c2-entropy-calculations","text":"Info in gmx_MMPBSA v1.5.0!!! This example can be found in the examples/Entropy_calculations/C2_Entropy directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA Github repository.","title":"C2 Entropy calculations"},{"location":"examples/Entropy_calculations/C2_Entropy/#requirements","text":"In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx File containing the receptor and ligand in separated groups Receptor and ligand group integers Group numbers in the index files A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file mol2 The Antechamber output mol2 file of ligand parametrization A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Entropy_calculations/C2_Entropy/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for entropy calculations (C2) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Sample input file for entropy calculations (C2) This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"C2_entropy\", startframe=1, endframe=10, c2_entropy=1, temperature=303.15, / &gb igb=5, saltcon=0.150, / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations.","title":"Command-line"},{"location":"examples/Entropy_calculations/C2_Entropy/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa. in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a salt concentration = 0.15M. C2 Entropy will be calculated using all (100%) the frames. Of note, C2 method tends to give unrealistically large entropies when the standard deviation of the interaction energy > ~ 3.6kcal/mol. Of note, two other methods ( QH and nmode ) can be used for estimating the entropic contribution, though they are way more expensive in computation as compared with C2 method. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/Entropy_calculations/Interaction_Entropy/","text":"Interaction Entropy calculations \u00b6 Info This example can be found in the examples/Entropy_calculations/Interaction_Entropy directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. Requirements \u00b6 In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx file containing the receptor and ligand in separated groups Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 15 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for entropy calculations (IE) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Sample input file for entropy calculations (IE) This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"IE\", startframe=1, endframe=10, #Interaction Entropy (IE)(https://pubs.acs.org/doi/abs/10.1021/jacs.6b02682) approximation interaction_entropy=1, ie_segment=50, temperature=303.15 / &gb igb=2, saltcon=0.150, / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations. Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is also another protein) amber format topologies and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa. in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb2 (GB-OBC1) model and a salt concentration = 0.15M. Interaction Entropy (IE) will be calculated and the average for half ( entropy_seg=50 ) of the total number of frames will be reported. Of note, two other methods ( QH and NMODE ) can be used for estimating the entropic contribution, though they are way more expensive in computation as compared with IE method. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Interaction Entropy"},{"location":"examples/Entropy_calculations/Interaction_Entropy/#interaction-entropy-calculations","text":"Info This example can be found in the examples/Entropy_calculations/Interaction_Entropy directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository.","title":"Interaction Entropy calculations"},{"location":"examples/Entropy_calculations/Interaction_Entropy/#requirements","text":"In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx file containing the receptor and ligand in separated groups Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Entropy_calculations/Interaction_Entropy/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 15 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for entropy calculations (IE) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Sample input file for entropy calculations (IE) This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"IE\", startframe=1, endframe=10, #Interaction Entropy (IE)(https://pubs.acs.org/doi/abs/10.1021/jacs.6b02682) approximation interaction_entropy=1, ie_segment=50, temperature=303.15 / &gb igb=2, saltcon=0.150, / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations.","title":"Command-line"},{"location":"examples/Entropy_calculations/Interaction_Entropy/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is also another protein) amber format topologies and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa. in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb2 (GB-OBC1) model and a salt concentration = 0.15M. Interaction Entropy (IE) will be calculated and the average for half ( entropy_seg=50 ) of the total number of frames will be reported. Of note, two other methods ( QH and NMODE ) can be used for estimating the entropic contribution, though they are way more expensive in computation as compared with IE method. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/Entropy_calculations/nmode/","text":"Normal Mode Entropy calculations \u00b6 Info This example can be found in the examples/Entropy_calculations/nmode directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA Github repository. Requirements \u00b6 In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx file containing the receptor and ligand in separated groups Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 17 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for entropy calculations (nmode) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 Sample input file for entropy calculations (nmode) This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"NMode\", startframe=1, endframe=10, forcefields=\"leaprc.protein.ff14SB\", PBRadii=2, / &gb igb=1, saltcon=0.150, / #note that nmode will use only a fraction of the no. of frames selected in #&general variable. This way, nmode will only process 8 frames (3rd to 10th frames) #note also that some parameters have been change to perform the calculation #faster (maxcyc=5, drms=2). The typical values for these parameters #are (maxcyc=50000, drms=0.001) &nmode nmstartframe=3, nmendframe=10, nminterval=1, maxcyc=5, drms=2, / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations. ## Considerations In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is also another protein) amber format topologies and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb1 (GB-HCT) model and a salt concentration = 0.15M. nmode will be used for estimating the entropic contribution, though it's way more expensive in computation as compared with IE or C2 methods. Note that in this case we have \"relaxed\" the convergence criteria to speed up the calculation. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"nmode Entropy"},{"location":"examples/Entropy_calculations/nmode/#normal-mode-entropy-calculations","text":"Info This example can be found in the examples/Entropy_calculations/nmode directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA Github repository.","title":"Normal Mode Entropy calculations"},{"location":"examples/Entropy_calculations/nmode/#requirements","text":"In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx file containing the receptor and ligand in separated groups Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Entropy_calculations/nmode/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 17 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for entropy calculations (nmode) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 Sample input file for entropy calculations (nmode) This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"NMode\", startframe=1, endframe=10, forcefields=\"leaprc.protein.ff14SB\", PBRadii=2, / &gb igb=1, saltcon=0.150, / #note that nmode will use only a fraction of the no. of frames selected in #&general variable. This way, nmode will only process 8 frames (3rd to 10th frames) #note also that some parameters have been change to perform the calculation #faster (maxcyc=5, drms=2). The typical values for these parameters #are (maxcyc=50000, drms=0.001) &nmode nmstartframe=3, nmendframe=10, nminterval=1, maxcyc=5, drms=2, / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations. ## Considerations In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is also another protein) amber format topologies and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb1 (GB-HCT) model and a salt concentration = 0.15M. nmode will be used for estimating the entropic contribution, though it's way more expensive in computation as compared with IE or C2 methods. Note that in this case we have \"relaxed\" the convergence criteria to speed up the calculation. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Command-line"},{"location":"examples/GBNSR6/","text":"Binding free energy calculation with GBNSR6 model \u00b6 Info This example can be found in the examples/GBNSR6 directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. Requirements \u00b6 In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx File containing the receptor and ligand in separated groups Receptor and ligand group integers Group numbers in the index files A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for GB calculation using GBNSR6 model 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 Sample input file for GB calculation using GBNSR6 model #This input file is meant to show only that gmx_MMPBSA works. Although, we tried to use the input files as recommended in the #Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters #according to what is better for your system. &general sys_name=\"GBNSR6\", startframe=1, endframe=10, forcefields=\"leaprc.protein.ff14SB\" / &gbnsr6 istrng=0.15 / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations. Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation using the GBNSR6 model. Comments on GBNSR6 model GBNSR6 is an implementation of the Generalized Born (GB) model in which the effective Born radii are computed numerically, via the so-called \"R6\" integration ( ref. ) over molecular surface of the solute. In contrast to most GB practical models, GBNSR6 model is parameter free in the same sense as the numerical PB framework is. Thus, accuracy of GBNSR6 relative to the PB standard is virtually unaffected by the choice of input atomic radii. Check Chapter \u00a75 in Amber manual for a more thorough description of the GBNSR6 model and its parameters. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information.","title":"BFE calculation with GBNSR6"},{"location":"examples/GBNSR6/#binding-free-energy-calculation-with-gbnsr6-model","text":"Info This example can be found in the examples/GBNSR6 directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository.","title":"Binding free energy calculation with GBNSR6 model"},{"location":"examples/GBNSR6/#requirements","text":"In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx File containing the receptor and ligand in separated groups Receptor and ligand group integers Group numbers in the index files A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/GBNSR6/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for GB calculation using GBNSR6 model 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 Sample input file for GB calculation using GBNSR6 model #This input file is meant to show only that gmx_MMPBSA works. Although, we tried to use the input files as recommended in the #Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters #according to what is better for your system. &general sys_name=\"GBNSR6\", startframe=1, endframe=10, forcefields=\"leaprc.protein.ff14SB\" / &gbnsr6 istrng=0.15 / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations.","title":"Command-line"},{"location":"examples/GBNSR6/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation using the GBNSR6 model. Comments on GBNSR6 model GBNSR6 is an implementation of the Generalized Born (GB) model in which the effective Born radii are computed numerically, via the so-called \"R6\" integration ( ref. ) over molecular surface of the solute. In contrast to most GB practical models, GBNSR6 model is parameter free in the same sense as the numerical PB framework is. Thus, accuracy of GBNSR6 relative to the PB standard is virtually unaffected by the choice of input atomic radii. Check Chapter \u00a75 in Amber manual for a more thorough description of the GBNSR6 model and its parameters. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information.","title":"Considerations"},{"location":"examples/Linear_PB_solver/","text":"Binding free energy calculation with linear PB (LPBE) \u00b6 Info This example can be found in the examples/Linear_PB_solver directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. Requirements \u00b6 In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx File containing the receptor and ligand in separated groups Receptor and ligand group integers Group numbers in the index files A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file mol2 The Antechamber output mol2 file of ligand parametrization A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for PB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Sample input file for PB calculation #This input file is meant to show only that gmx_MMPBSA works. Although, we tried to use the input files as recommended in the #Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters #according to what is better for your system. &general sys_name=\"Linear_PB\", startframe=1, endframe=10, forcefields=\"leaprc.protein.ff14SB\" / &pb radiopt=0, istrng=0.150, / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations. Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the PB model (linear PB equation) and a salt concentration = 0.15M. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information.","title":"BFE calculation with Linear PB"},{"location":"examples/Linear_PB_solver/#binding-free-energy-calculation-with-linear-pb-lpbe","text":"Info This example can be found in the examples/Linear_PB_solver directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository.","title":"Binding free energy calculation with linear PB (LPBE)"},{"location":"examples/Linear_PB_solver/#requirements","text":"In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx File containing the receptor and ligand in separated groups Receptor and ligand group integers Group numbers in the index files A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file mol2 The Antechamber output mol2 file of ligand parametrization A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Linear_PB_solver/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for PB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Sample input file for PB calculation #This input file is meant to show only that gmx_MMPBSA works. Although, we tried to use the input files as recommended in the #Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters #according to what is better for your system. &general sys_name=\"Linear_PB\", startframe=1, endframe=10, forcefields=\"leaprc.protein.ff14SB\" / &pb radiopt=0, istrng=0.150, / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations.","title":"Command-line"},{"location":"examples/Linear_PB_solver/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the PB model (linear PB equation) and a salt concentration = 0.15M. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information.","title":"Considerations"},{"location":"examples/Metalloprotein_ligand/","text":"Metalloprotein-ligand binding free energy calculations \u00b6 Info This example can be found in the examples/Metalloprotein_ligand directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. Requirements \u00b6 In its simplest version, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx file containing the receptor and ligand in separated groups Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 8 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for GB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Sample input file for GB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Metalloprotein-peptide\", startframe=1 endframe=10, PBRadii=4, ions_parameters=1, / &gb igb=8, saltcon=0.150, intdiel=5, / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations. Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand amber format topologies and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb8 (GB-Neck2) model, a salt concentration = 0.15M and considering an internal dielectric constant of 5. In this case, Li/Merz ion parameters (12-6 normal usage set) for Ca ions were used. Check Amber manual for more info on ion parameters. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Metalloprotein-ligand"},{"location":"examples/Metalloprotein_ligand/#metalloprotein-ligand-binding-free-energy-calculations","text":"Info This example can be found in the examples/Metalloprotein_ligand directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository.","title":"Metalloprotein-ligand binding free energy calculations"},{"location":"examples/Metalloprotein_ligand/#requirements","text":"In its simplest version, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx file containing the receptor and ligand in separated groups Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Metalloprotein_ligand/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 8 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for GB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Sample input file for GB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Metalloprotein-peptide\", startframe=1 endframe=10, PBRadii=4, ions_parameters=1, / &gb igb=8, saltcon=0.150, intdiel=5, / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations.","title":"Command-line"},{"location":"examples/Metalloprotein_ligand/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand amber format topologies and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb8 (GB-Neck2) model, a salt concentration = 0.15M and considering an internal dielectric constant of 5. In this case, Li/Merz ion parameters (12-6 normal usage set) for Ca ions were used. Check Amber manual for more info on ion parameters. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/NonLinear_PB_solver/","text":"Binding free energy calculation with linear PB (NLPBE) \u00b6 Info in gmx_MMPBSA v1.5.0!!! This example can be found in the examples/NonLinear_PB_solver directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. Requirements \u00b6 In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx file containing the receptor and ligand in separated groups Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for NLPB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 Sample input file for NLPB This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"NonLinear_PB\", startframe=1, endframe=10, forcefields=\"leaprc.protein.ff14SB\", / &pb npbopt=1, indi=1.0, istrng=0.15, radiopt=0, eneopt=1, cutnb=8.0, / # check these threads # http://archive.ambermd.org/201203/0191.html # http://archive.ambermd.org/201610/0114.html # for more info on NLPB Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations. Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand amber format topologies and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 6 frames are going to be used when performing the MM/PB(GB)SA calculation with the Non-Linear PB solver ( npbopt=1 ). The dielectric constant ( indi ) is set = 1. Warning When running a NLPB solver, eneopt is set = 1. That way, the total electrostatic energy and forces will be computed with the particle-particle particle-mesh (P3M) procedure outlined in Lu and Luo . In doing so, energy term EPB in the output file is set to zero, while EEL term includes both the reaction field energy ( EPB ) and the Coulombic energy ( EEL ). The van der Waals energy is computed along with the particle-particle portion of the Coulombic energy. This option requires a nonzero cutnb (in this case, cutnb=8.0 ) and bcopt = 5 (default option). It's noteworthy mentioning that \u0394GGAS and \u0394GSOLV as reported are no longer properly decomposed. Since EPB and EEL are combined into the \"gas phase\" term, the gas and solvation terms can't be separated. Nevertheless, the total \u0394TOTAL should be perfectly fine, since everything is sum up together in the end. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"BFE calculation with NonLinear PB"},{"location":"examples/NonLinear_PB_solver/#binding-free-energy-calculation-with-linear-pb-nlpbe","text":"Info in gmx_MMPBSA v1.5.0!!! This example can be found in the examples/NonLinear_PB_solver directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository.","title":"Binding free energy calculation with linear PB (NLPBE)"},{"location":"examples/NonLinear_PB_solver/#requirements","text":"In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx file containing the receptor and ligand in separated groups Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/NonLinear_PB_solver/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for NLPB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 Sample input file for NLPB This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"NonLinear_PB\", startframe=1, endframe=10, forcefields=\"leaprc.protein.ff14SB\", / &pb npbopt=1, indi=1.0, istrng=0.15, radiopt=0, eneopt=1, cutnb=8.0, / # check these threads # http://archive.ambermd.org/201203/0191.html # http://archive.ambermd.org/201610/0114.html # for more info on NLPB Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations.","title":"Command-line"},{"location":"examples/NonLinear_PB_solver/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand amber format topologies and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 6 frames are going to be used when performing the MM/PB(GB)SA calculation with the Non-Linear PB solver ( npbopt=1 ). The dielectric constant ( indi ) is set = 1. Warning When running a NLPB solver, eneopt is set = 1. That way, the total electrostatic energy and forces will be computed with the particle-particle particle-mesh (P3M) procedure outlined in Lu and Luo . In doing so, energy term EPB in the output file is set to zero, while EEL term includes both the reaction field energy ( EPB ) and the Coulombic energy ( EEL ). The van der Waals energy is computed along with the particle-particle portion of the Coulombic energy. This option requires a nonzero cutnb (in this case, cutnb=8.0 ) and bcopt = 5 (default option). It's noteworthy mentioning that \u0394GGAS and \u0394GSOLV as reported are no longer properly decomposed. Since EPB and EEL are combined into the \"gas phase\" term, the gas and solvation terms can't be separated. Nevertheless, the total \u0394TOTAL should be perfectly fine, since everything is sum up together in the end. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/OPLS/protein_protein/","text":"OPLS and MM(PB/GB)SA PB model is recommended when working with OPLSff files. Nevertheless, the combination of PB/GB models with radii optimized for amber atom types ( i.e. bondi, mbondi, mbondi2, mbondi3) and OPLS force field hasn't been tested extensively. Please, proceed with caution. Protein-protein binding free energy calculations (Single Trajectory method) with OPLSff files \u00b6 Info This example can be found in the examples/OPLS/protein_protein directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. Requirements \u00b6 In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx File containing the receptor and ligand in separated groups Receptor and ligand group integers Group numbers in the index files A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs com.pdb -ct com_traj.xtc -ci index.ndx -cg 10 11 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.pdb -ct com_traj.xtc -ci index.ndx -cg 10 11 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for PB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Sample input file for PB calculation #This input file is meant to show only that gmx_MMPBSA works. Although, we tried to use the input files as recommended in the #Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters #according to what is better for your system. &general sys_name=\"OPLS_Support\", startframe=1, endframe=8, / &pb radiopt=0, istrng=0.150, / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.pdb ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 10 11 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 8 frames are going to be used when performing the MM/PB(GB)SA calculation with the PB model (linear PB equation) and a salt concentration = 0.15M. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Protein-protein"},{"location":"examples/OPLS/protein_protein/#protein-protein-binding-free-energy-calculations-single-trajectory-method-with-oplsff-files","text":"Info This example can be found in the examples/OPLS/protein_protein directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository.","title":"Protein-protein binding free energy calculations (Single Trajectory method) with OPLSff files"},{"location":"examples/OPLS/protein_protein/#requirements","text":"In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx File containing the receptor and ligand in separated groups Receptor and ligand group integers Group numbers in the index files A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/OPLS/protein_protein/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs com.pdb -ct com_traj.xtc -ci index.ndx -cg 10 11 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.pdb -ct com_traj.xtc -ci index.ndx -cg 10 11 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for PB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Sample input file for PB calculation #This input file is meant to show only that gmx_MMPBSA works. Although, we tried to use the input files as recommended in the #Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters #according to what is better for your system. &general sys_name=\"OPLS_Support\", startframe=1, endframe=8, / &pb radiopt=0, istrng=0.150, / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples","title":"Command-line"},{"location":"examples/OPLS/protein_protein/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.pdb ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 10 11 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 8 frames are going to be used when performing the MM/PB(GB)SA calculation with the PB model (linear PB equation) and a salt concentration = 0.15M. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/Protein_DNA/","text":"Protein-DNA binding free energy calculations \u00b6 Info This example can be found in the examples/Protein_DNA directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. Requirements \u00b6 In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx file containing the receptor and ligand in separated groups Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 5 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for GB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Sample input file for GB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Prot-DNA\" startframe=1, endframe=10, PBRadii=4 / &gb igb=8, saltcon=0.150, intdiel=10 / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations. Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is DNA) amber format topologies and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb8 (GB-Neck2) model and a salt concentration = 0.15M. Of note, mbondi3 radii ( PBRadii=4 ) will be used as recommended for GB-Neck2 solvation model. Also, a high dielectric constant intdiel=10 will be used because of the high number of charged residues at the interface. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Protein-DNA"},{"location":"examples/Protein_DNA/#protein-dna-binding-free-energy-calculations","text":"Info This example can be found in the examples/Protein_DNA directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository.","title":"Protein-DNA binding free energy calculations"},{"location":"examples/Protein_DNA/#requirements","text":"In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx file containing the receptor and ligand in separated groups Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Protein_DNA/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 5 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for GB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Sample input file for GB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Prot-DNA\" startframe=1, endframe=10, PBRadii=4 / &gb igb=8, saltcon=0.150, intdiel=10 / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations.","title":"Command-line"},{"location":"examples/Protein_DNA/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is DNA) amber format topologies and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb8 (GB-Neck2) model and a salt concentration = 0.15M. Of note, mbondi3 radii ( PBRadii=4 ) will be used as recommended for GB-Neck2 solvation model. Also, a high dielectric constant intdiel=10 will be used because of the high number of charged residues at the interface. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/Protein_DNA_RNA_Ion_ligand/","text":"Protein-DNA_RNA_ION-Ligand binding free energy calculations \u00b6 Info This example can be found in the examples/Protein_DNA_RNA_Ion_ligand directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. Danger This system was also used to show the usage of forcefields variable in Binding free energy calculations in multicomponent systems example. Keep in mind that this example will be removed in version 1.5.0. Requirements \u00b6 Danger The ligand mol2 file must be the Antechamber output. In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx file containing the receptor and ligand in separated groups Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file mol2 The Antechamber output mol2 file of ligand parametrization A topology file (not included) top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 33 14 -ct com_traj.xtc -lm ligand.mol2 -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 33 14 -ct com_traj.xtc -lm ligand.mol2 -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t prot_dna_rna_ions_lig where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for GB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Sample input file for GB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Prot-DNA-RNA-ION-Lig\", startframe=1 endframe=10 forcefields=\"oldff/leaprc.ff99SBildn,leaprc.gaff\" PBRadii=4, ions_parameters=1 / &gb igb=8, saltcon=0.150, intdiel=10 / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations. Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor (Protein+DNA+RNA+Ions) and ligand amber format topologies and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 33 14 ) are needed. A ligand .mol2 file is also needed for generating the ligand topology.The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 11 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb8 (GB-Neck2) model and a salt concentration = 0.15M. Of note, mbondi3 radii ( PBRadii=4 ) will be used as recommended for GB-Neck2 solvation model. Also, a high dielectric constant intdiel=10 will be used because of the high number of charged residues at the interface. In this case, Li/Merz ion parameters (12-6 normal usage set) for Mg ions were used. Check Amber manual for more info on ion parameters. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Protein-DNA_RNA_ION-Ligand"},{"location":"examples/Protein_DNA_RNA_Ion_ligand/#protein-dna_rna_ion-ligand-binding-free-energy-calculations","text":"Info This example can be found in the examples/Protein_DNA_RNA_Ion_ligand directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. Danger This system was also used to show the usage of forcefields variable in Binding free energy calculations in multicomponent systems example. Keep in mind that this example will be removed in version 1.5.0.","title":"Protein-DNA_RNA_ION-Ligand binding free energy calculations"},{"location":"examples/Protein_DNA_RNA_Ion_ligand/#requirements","text":"Danger The ligand mol2 file must be the Antechamber output. In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx file containing the receptor and ligand in separated groups Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file mol2 The Antechamber output mol2 file of ligand parametrization A topology file (not included) top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Protein_DNA_RNA_Ion_ligand/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 33 14 -ct com_traj.xtc -lm ligand.mol2 -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 33 14 -ct com_traj.xtc -lm ligand.mol2 -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t prot_dna_rna_ions_lig where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for GB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Sample input file for GB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Prot-DNA-RNA-ION-Lig\", startframe=1 endframe=10 forcefields=\"oldff/leaprc.ff99SBildn,leaprc.gaff\" PBRadii=4, ions_parameters=1 / &gb igb=8, saltcon=0.150, intdiel=10 / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations.","title":"Command-line"},{"location":"examples/Protein_DNA_RNA_Ion_ligand/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor (Protein+DNA+RNA+Ions) and ligand amber format topologies and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 33 14 ) are needed. A ligand .mol2 file is also needed for generating the ligand topology.The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 11 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb8 (GB-Neck2) model and a salt concentration = 0.15M. Of note, mbondi3 radii ( PBRadii=4 ) will be used as recommended for GB-Neck2 solvation model. Also, a high dielectric constant intdiel=10 will be used because of the high number of charged residues at the interface. In this case, Li/Merz ion parameters (12-6 normal usage set) for Mg ions were used. Check Amber manual for more info on ion parameters. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/Protein_glycan/","text":"Protein-glycan binding free energy calculations \u00b6 Info This example can be found in the examples/Protein_glycan directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. Requirements \u00b6 In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx file containing the receptor and ligand in separated groups Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 7 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for GB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for GB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Protein-glycan\", startframe=1, endframe=10, / &gb igb=5, saltcon=0.150, / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations. Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and glycan structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In thsi case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a salt concentration = 0.15M. Of note, the recommended GLYCAM force fields are: * \"leaprc.GLYCAM_06j-1\" (Compatible with amber12SB and later), \"leaprc.GLYCAM_06EPb\" (Compatible with amber12SB and later), and \"leaprc.GLYCAM_06h-1\" (Compatible with amber99SB and earlier. It is included in gmx_MMPBSA package. If it is selected, it will be copied to $AMBERHOME/dat/x) Check Amber manual for more info on GLYCAM force fields. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Protein-glycan"},{"location":"examples/Protein_glycan/#protein-glycan-binding-free-energy-calculations","text":"Info This example can be found in the examples/Protein_glycan directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository.","title":"Protein-glycan binding free energy calculations"},{"location":"examples/Protein_glycan/#requirements","text":"In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx file containing the receptor and ligand in separated groups Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Protein_glycan/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 7 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for GB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for GB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Protein-glycan\", startframe=1, endframe=10, / &gb igb=5, saltcon=0.150, / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations.","title":"Command-line"},{"location":"examples/Protein_glycan/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and glycan structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In thsi case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a salt concentration = 0.15M. Of note, the recommended GLYCAM force fields are: * \"leaprc.GLYCAM_06j-1\" (Compatible with amber12SB and later), \"leaprc.GLYCAM_06EPb\" (Compatible with amber12SB and later), and \"leaprc.GLYCAM_06h-1\" (Compatible with amber99SB and earlier. It is included in gmx_MMPBSA package. If it is selected, it will be copied to $AMBERHOME/dat/x) Check Amber manual for more info on GLYCAM force fields. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/Protein_ligand/MT/","text":"Protein-ligand binding free energy calculations (Multiple Trajectory method) \u00b6 Info This example can be found in the examples/Protein_ligand/MT directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. Requirements \u00b6 Danger The ligand mol2 file must be the Antechamber output. In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb ( Complex, Receptor and Ligand ) Structure file containing the system coordinates An index file ndx ( Complex, Receptor and Ligand ) file containing the receptor and ligand in separated groups Receptor and ligand group integers ( Complex, Receptor and Ligand ) Group numbers in the index files A trajectory file xtc pdb trr ( Complex, Receptor and Ligand ) Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file mol2 The Antechamber output mol2 file of ligand parametrization A topology file (not included) top ( Complex, Receptor and Ligand ) GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional Remember When a topology file is defined, the ligand mol2 file is not needed. The ligand mol2 file only required when gmx_MMPBSA build the amber topology from a structure See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -rs rec.pdb -ri rec_index.ndx -rg 1 -rt rec_traj.pdb -lm ligand.mol2 -ls lig.pdb -li lig_index.ndx -lg 2 -lt lig_traj.pdb -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13\\ -ct com_traj.xtc -rs rec.pdb -ri rec_index.ndx -rg 1 -rt rec_traj.pdb \\ -lm ligand.mol2 -ls lig.pdb -li lig_index.ndx -lg 2 -lt lig_traj.pdb -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 16 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for GB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Sample input file for GB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Prot-Lig-MT\", startframe=5, endframe=14, forcefields=\"oldff/leaprc.ff99SB\",leaprc.gaff\" / &gb igb=5, saltcon=0.150, / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations. Considerations \u00b6 In this case, a multiple trajectory (MT) approximation is followed, which means the receptor and ligand structures and trajectories are needed. For the complex, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 1 13 ) are needed. For the receptor, an MD Structure+mass(db) file ( rec.pdb ), an index file ( rec_index.ndx ), a trajectory file ( rec_traj.pdb ), and the receptor group number in the rec_index file ( 1 ) are needed. For the ligand, a ligand .mol2 file is needed for generating the ligand topology. Besides, an MD Structure+mass(db) file ( lig.pdb ), an index file ( lig_index.ndx ), a trajectory file ( lig_traj.pdb ), and ligand group number in the lig_index file ( 2 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a salt concentration = 0.15M. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Multiple Trajectory Protocol"},{"location":"examples/Protein_ligand/MT/#protein-ligand-binding-free-energy-calculations-multiple-trajectory-method","text":"Info This example can be found in the examples/Protein_ligand/MT directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository.","title":"Protein-ligand binding free energy calculations (Multiple Trajectory method)"},{"location":"examples/Protein_ligand/MT/#requirements","text":"Danger The ligand mol2 file must be the Antechamber output. In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb ( Complex, Receptor and Ligand ) Structure file containing the system coordinates An index file ndx ( Complex, Receptor and Ligand ) file containing the receptor and ligand in separated groups Receptor and ligand group integers ( Complex, Receptor and Ligand ) Group numbers in the index files A trajectory file xtc pdb trr ( Complex, Receptor and Ligand ) Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file mol2 The Antechamber output mol2 file of ligand parametrization A topology file (not included) top ( Complex, Receptor and Ligand ) GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional Remember When a topology file is defined, the ligand mol2 file is not needed. The ligand mol2 file only required when gmx_MMPBSA build the amber topology from a structure See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Protein_ligand/MT/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -rs rec.pdb -ri rec_index.ndx -rg 1 -rt rec_traj.pdb -lm ligand.mol2 -ls lig.pdb -li lig_index.ndx -lg 2 -lt lig_traj.pdb -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13\\ -ct com_traj.xtc -rs rec.pdb -ri rec_index.ndx -rg 1 -rt rec_traj.pdb \\ -lm ligand.mol2 -ls lig.pdb -li lig_index.ndx -lg 2 -lt lig_traj.pdb -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 16 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for GB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Sample input file for GB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Prot-Lig-MT\", startframe=5, endframe=14, forcefields=\"oldff/leaprc.ff99SB\",leaprc.gaff\" / &gb igb=5, saltcon=0.150, / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations.","title":"Command-line"},{"location":"examples/Protein_ligand/MT/#considerations","text":"In this case, a multiple trajectory (MT) approximation is followed, which means the receptor and ligand structures and trajectories are needed. For the complex, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 1 13 ) are needed. For the receptor, an MD Structure+mass(db) file ( rec.pdb ), an index file ( rec_index.ndx ), a trajectory file ( rec_traj.pdb ), and the receptor group number in the rec_index file ( 1 ) are needed. For the ligand, a ligand .mol2 file is needed for generating the ligand topology. Besides, an MD Structure+mass(db) file ( lig.pdb ), an index file ( lig_index.ndx ), a trajectory file ( lig_traj.pdb ), and ligand group number in the lig_index file ( 2 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a salt concentration = 0.15M. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/Protein_ligand/ST/","text":"Protein-ligand binding free energy calculations (Single Trajectory method) \u00b6 Info This example can be found in the examples/Protein_ligand/ST directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. Requirements \u00b6 In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx File containing the receptor and ligand in separated groups Receptor and ligand group integers Group numbers in the index files A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file mol2 The Antechamber output mol2 file of ligand parametrization A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional Remember When a topology file is defined, the ligand mol2 file is not needed. The ligand mol2 file only required when gmx_MMPBSA build the amber topology from a structure. The ligand mol2 file must be the Antechamber output. See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 3 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for GB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for GB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Prot-Lig-ST\", startframe=1, endframe=10, / &gb igb=5, saltcon=0.150, / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations. Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. A ligand .mol2 file is also needed for generating the ligand topology. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a salt concentration = 0.15M. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Protein-ligand"},{"location":"examples/Protein_ligand/ST/#protein-ligand-binding-free-energy-calculations-single-trajectory-method","text":"Info This example can be found in the examples/Protein_ligand/ST directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository.","title":"Protein-ligand binding free energy calculations (Single Trajectory method)"},{"location":"examples/Protein_ligand/ST/#requirements","text":"In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx File containing the receptor and ligand in separated groups Receptor and ligand group integers Group numbers in the index files A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file mol2 The Antechamber output mol2 file of ligand parametrization A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional Remember When a topology file is defined, the ligand mol2 file is not needed. The ligand mol2 file only required when gmx_MMPBSA build the amber topology from a structure. The ligand mol2 file must be the Antechamber output. See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Protein_ligand/ST/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 3 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for GB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for GB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Prot-Lig-ST\", startframe=1, endframe=10, / &gb igb=5, saltcon=0.150, / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations.","title":"Command-line"},{"location":"examples/Protein_ligand/ST/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. A ligand .mol2 file is also needed for generating the ligand topology. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a salt concentration = 0.15M. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/Protein_ligand_CHARMMff/","text":"CHARMM and MM(PB/GB)SA PB model is recommended when working with CHARMMff files. Nevertheless, the combination of PB/GB models with radii optimized for amber atom types ( i.e. bondi, mbondi, mbondi2, mbondi3) and CHARMM force field hasn't been tested extensively. Please, check this thread for more information and proceed with caution. in gmx_MMPBSA v1.5.0!!! In gmx_MMPBSA v1.5.0 we have added a new PB radii set named charmm_radii . This radii set should be used only with systems prepared with CHARMM force fields . The atomic radii set for Poisson-Boltzmann calculations has been derived from average solvent electrostatic charge distribution with explicit solvent. The accuracy has been tested with free energy perturbation with explicit solvent ref. . Most of the values were taken from a *radii.str file used in PBEQ Solver in charmm-gui . Radii for protein atoms in 20 standard amino acids from Nina, Belogv, and Roux Radii for nucleic acid atoms (RNA and DNA) from Banavali and Roux Halogens and other atoms from Fortuna and Costa Protein-ligand binding free energy calculations (Single Trajectory method) with CHARMMff files \u00b6 Info This example can be found in the examples/Protein_ligand_CHARMMff directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. Requirements \u00b6 In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr final GROMACS MD trajectory, fitted and with no pbc. A topology file top take into account that *.itp files belonging to the topology file should be also present in the folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 10 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for PB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 Sample input file for PB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Prot-Lig-CHARMM\", startframe=1, endframe=4, # In gmx_MMPBSA v1.5.0 we have added a new PB radii set named charmm_radii. # This radii set should be used only with systems prepared with CHARMM force fields. # Uncomment the line below to use charmm_radii set #PBRadii=7, / &pb # radiopt=0 is recommended which means using radii from the prmtop file for both the PB calculation and for the NP # calculation istrng=0.15, fillratio=4.0, radiopt=0 / Remember radiopt = 0 is recommended which means using radii from the prmtop file See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 1 13 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. A topology file is also needed (mandatory) in this case to generate the topology files in amber format with all the terms for CHARMM force field. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Protein-ligand"},{"location":"examples/Protein_ligand_CHARMMff/#protein-ligand-binding-free-energy-calculations-single-trajectory-method-with-charmmff-files","text":"Info This example can be found in the examples/Protein_ligand_CHARMMff directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository.","title":"Protein-ligand binding free energy calculations (Single Trajectory method) with CHARMMff files"},{"location":"examples/Protein_ligand_CHARMMff/#requirements","text":"In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr final GROMACS MD trajectory, fitted and with no pbc. A topology file top take into account that *.itp files belonging to the topology file should be also present in the folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Protein_ligand_CHARMMff/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 10 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for PB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 Sample input file for PB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Prot-Lig-CHARMM\", startframe=1, endframe=4, # In gmx_MMPBSA v1.5.0 we have added a new PB radii set named charmm_radii. # This radii set should be used only with systems prepared with CHARMM force fields. # Uncomment the line below to use charmm_radii set #PBRadii=7, / &pb # radiopt=0 is recommended which means using radii from the prmtop file for both the PB calculation and for the NP # calculation istrng=0.15, fillratio=4.0, radiopt=0 / Remember radiopt = 0 is recommended which means using radii from the prmtop file See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples","title":"Command-line"},{"location":"examples/Protein_ligand_CHARMMff/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 1 13 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. A topology file is also needed (mandatory) in this case to generate the topology files in amber format with all the terms for CHARMM force field. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/Protein_ligand_LPH_atoms_CHARMMff/","text":"CHARMM and MM(PB/GB)SA PB model is recommended when working with CHARMMff files. Nevertheless, the combination of PB/GB models with radii optimized for amber atom types ( i.e. bondi, mbondi, mbondi2, mbondi3) and CHARMM force field hasn't been tested extensively. Please, check this thread for more information and proceed with caution. in gmx_MMPBSA v1.5.0!!! In gmx_MMPBSA v1.5.0 we have added a new PB radii set named charmm_radii . This radii set should be used only with systems prepared with CHARMM force fields . The atomic radii set for Poisson-Boltzmann calculations has been derived from average solvent electrostatic charge distribution with explicit solvent. The accuracy has been tested with free energy perturbation with explicit solvent ref. . Most of the values were taken from a *radii.str file used in PBEQ Solver in charmm-gui . Radii for protein atoms in 20 standard amino acids from Nina, Belogv, and Roux Radii for nucleic acid atoms (RNA and DNA) from Banavali and Roux Halogens and other atoms from Fortuna and Costa Protein-ligand with LPH atoms BFE calculations (Single Trajectory method) -- CHARMMff files \u00b6 Info This example can be found in the examples/Protein_ligand_LPH_atoms_CHARMMff directory in the repository folder LPH is a positively charged virtual particle attached to halogen atoms. This strategy aims to get a better representation of the halogen bond which is a highly directional, non-covalent interaction between a halogen atom and another electronegative atom (See here for more info). Unfortunately, including these particles in the topology will cause gmx_MMPBSA to end in an error. However, there is a way to generate the files without these particles and get gmx_MMPBSA up and running. Keep in mind As the LPH particle is not considered during the calculations in gmx_MMPBSA, take the results with a grain of salt, especially when working with systems where the halogen bond is determinant for the binding. in gmx_MMPBSA v1.5.0!!! We have included standard radii for halogens in charmm_radii set: Cl: 1.86 Br: 1.98 I: 2.24 This radii set should be used with the following PBSA setup: Sample input file for PB calculation with halogenated compounds &general sys_name=\"PB_Halogens\", PBRadii=7, / &pb inp=1, saopt=1, radiopt=0, cavity_surften=0.005, cavity_offset=0.0000 / Requirements \u00b6 In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr final GROMACS MD trajectory, fitted and with no pbc. A topology file top take into account that *.itp files belonging to the topology file should be also present in the folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here In order to generate the corresponding files (The MD Structure+mass(db), index, trajectory and the topology files) without the LPH particles, it's necessary to run a few commands. Bear with me! Let's generate the index file first: Important The main idea here is to generate a receptor group, a ligand group without the LPH particles and a complex group containing both the receptor and the ligand without the LPH particles. In general, index files generated with GROMACS directly will contain more detailed information ( i.e. , receptor and ligand separated) gmx make_ndx -f com.tpr -o index_mod_gromacs.ndx 0 System : 70483 atoms 1 Protein : 5580 atoms 2 Protein-H : 2817 atoms 3 C-alpha : 334 atoms 4 Backbone : 1002 atoms 5 MainChain : 1335 atoms 6 MainChain+Cb : 1654 atoms 7 MainChain+H : 1654 atoms 8 SideChain : 3926 atoms 9 SideChain-H : 1482 atoms 10 Prot-Masses : 5580 atoms 11 non-Protein : 64903 atoms 12 Other : 64903 atoms 13 3G5 : 32 atoms 14 CLA : 62 atoms 15 SOD : 63 atoms 16 TIP3 : 64746 atoms Splitting the ligand (group 13) by atoms >splitat 13 Grouping both LPH particles >47|48 Excluding both LPH particles from the ligand >13&!49 Naming ligand as lig >name 50 lig Grouping rec and lig >1|50 Cleaning >del 17-49 save and quit >q This is how it should look like at the end 0 System : 70483 atoms 1 Protein : 5580 atoms 2 Protein-H : 2817 atoms 3 C-alpha : 334 atoms 4 Backbone : 1002 atoms 5 MainChain : 1335 atoms 6 MainChain+Cb : 1654 atoms 7 MainChain+H : 1654 atoms 8 SideChain : 3926 atoms 9 SideChain-H : 1482 atoms 10 Prot-Masses : 5580 atoms 11 non-Protein : 64903 atoms 12 Other : 64903 atoms 13 3G5 : 32 atoms 14 CLA : 62 atoms 15 SOD : 63 atoms 16 TIP3 : 64746 atoms 17 lig : 30 atoms 18 Protein_lig : 5610 atoms Note Note that the number of atoms in the generated complex is 5610 because it doesn't include the LPH particles. Let's generate the MD Structure+mass(db) file: echo 18 | gmx trjconv -s com.tpr -f traj_fit.xtc -dump 0 -o str_noLP.pdb -n index_mod_gromacs.ndx Open str_noLP.pdb in your favorite visualizer and see it doesn't contain the LPH particles. Now, let's generate the trajectory with no LPH particles: echo 18 | gmx trjconv -s com.tpr -f traj_fit.xtc -o com_traj.xtc -n index_mod_gromacs.ndx Finally, let's edit the topology file. Go inside the toppar folder and open the HETA.itp file. As you will see, we deleted all the information related with LPH particles (atom numbers 31, and 32 respectively). In this case, we deleted the information for LPH particles in atoms (lines 47, 48) and pairs (lines 124, 132, 150, 153, 154, 157, 158, 159). Besides, delete the whole [ virtual_sites3 ] (lines 296-299) and [ exclusions ] (lines 301-318) fields. The original .itp ( HETA_original_with_LPH_info.itp ) is included for comparison purposes. Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs str_noLP.pdb -ci index_mod_gromacs.ndx -cg 1 17 -ct com_traj.xtc -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs str_noLP.pdb -ci index_mod_gromacs.ndx -cg 1 17 -ct com_traj.xtc -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for PB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 Sample input file for PB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Prot-Lig-ST\", startframe=5, endframe=9, solvated_trajectory=0, # In gmx_MMPBSA v1.5.0 we have added a new PB radii set named charmm_radii. # This radii set should be used only with systems prepared with CHARMM force fields. # Uncomment the line below to use charmm_radii set #PBRadii=7, / &pb # radiopt=0 is recommended which means using radii from the prmtop file # for both the PB calculation and for the NP calculation istrng=0.15, fillratio=4, radiopt=0, inp=1, / Remember radiopt = 0 is recommended which means using radii from the prmtop file See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( str_noLP.pdb ), an index file ( index_mod_gromacs.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 1 17 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. A topology file is also needed (mandatory) in this case to generate the topology files in amber format with all the terms for CHARMM force field. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Protein-ligand with LPH particles (ST)"},{"location":"examples/Protein_ligand_LPH_atoms_CHARMMff/#protein-ligand-with-lph-atoms-bfe-calculations-single-trajectory-method-charmmff-files","text":"Info This example can be found in the examples/Protein_ligand_LPH_atoms_CHARMMff directory in the repository folder LPH is a positively charged virtual particle attached to halogen atoms. This strategy aims to get a better representation of the halogen bond which is a highly directional, non-covalent interaction between a halogen atom and another electronegative atom (See here for more info). Unfortunately, including these particles in the topology will cause gmx_MMPBSA to end in an error. However, there is a way to generate the files without these particles and get gmx_MMPBSA up and running. Keep in mind As the LPH particle is not considered during the calculations in gmx_MMPBSA, take the results with a grain of salt, especially when working with systems where the halogen bond is determinant for the binding. in gmx_MMPBSA v1.5.0!!! We have included standard radii for halogens in charmm_radii set: Cl: 1.86 Br: 1.98 I: 2.24 This radii set should be used with the following PBSA setup: Sample input file for PB calculation with halogenated compounds &general sys_name=\"PB_Halogens\", PBRadii=7, / &pb inp=1, saopt=1, radiopt=0, cavity_surften=0.005, cavity_offset=0.0000 /","title":"Protein-ligand with LPH atoms BFE calculations (Single Trajectory method) -- CHARMMff files"},{"location":"examples/Protein_ligand_LPH_atoms_CHARMMff/#requirements","text":"In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr final GROMACS MD trajectory, fitted and with no pbc. A topology file top take into account that *.itp files belonging to the topology file should be also present in the folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here In order to generate the corresponding files (The MD Structure+mass(db), index, trajectory and the topology files) without the LPH particles, it's necessary to run a few commands. Bear with me! Let's generate the index file first: Important The main idea here is to generate a receptor group, a ligand group without the LPH particles and a complex group containing both the receptor and the ligand without the LPH particles. In general, index files generated with GROMACS directly will contain more detailed information ( i.e. , receptor and ligand separated) gmx make_ndx -f com.tpr -o index_mod_gromacs.ndx 0 System : 70483 atoms 1 Protein : 5580 atoms 2 Protein-H : 2817 atoms 3 C-alpha : 334 atoms 4 Backbone : 1002 atoms 5 MainChain : 1335 atoms 6 MainChain+Cb : 1654 atoms 7 MainChain+H : 1654 atoms 8 SideChain : 3926 atoms 9 SideChain-H : 1482 atoms 10 Prot-Masses : 5580 atoms 11 non-Protein : 64903 atoms 12 Other : 64903 atoms 13 3G5 : 32 atoms 14 CLA : 62 atoms 15 SOD : 63 atoms 16 TIP3 : 64746 atoms Splitting the ligand (group 13) by atoms >splitat 13 Grouping both LPH particles >47|48 Excluding both LPH particles from the ligand >13&!49 Naming ligand as lig >name 50 lig Grouping rec and lig >1|50 Cleaning >del 17-49 save and quit >q This is how it should look like at the end 0 System : 70483 atoms 1 Protein : 5580 atoms 2 Protein-H : 2817 atoms 3 C-alpha : 334 atoms 4 Backbone : 1002 atoms 5 MainChain : 1335 atoms 6 MainChain+Cb : 1654 atoms 7 MainChain+H : 1654 atoms 8 SideChain : 3926 atoms 9 SideChain-H : 1482 atoms 10 Prot-Masses : 5580 atoms 11 non-Protein : 64903 atoms 12 Other : 64903 atoms 13 3G5 : 32 atoms 14 CLA : 62 atoms 15 SOD : 63 atoms 16 TIP3 : 64746 atoms 17 lig : 30 atoms 18 Protein_lig : 5610 atoms Note Note that the number of atoms in the generated complex is 5610 because it doesn't include the LPH particles. Let's generate the MD Structure+mass(db) file: echo 18 | gmx trjconv -s com.tpr -f traj_fit.xtc -dump 0 -o str_noLP.pdb -n index_mod_gromacs.ndx Open str_noLP.pdb in your favorite visualizer and see it doesn't contain the LPH particles. Now, let's generate the trajectory with no LPH particles: echo 18 | gmx trjconv -s com.tpr -f traj_fit.xtc -o com_traj.xtc -n index_mod_gromacs.ndx Finally, let's edit the topology file. Go inside the toppar folder and open the HETA.itp file. As you will see, we deleted all the information related with LPH particles (atom numbers 31, and 32 respectively). In this case, we deleted the information for LPH particles in atoms (lines 47, 48) and pairs (lines 124, 132, 150, 153, 154, 157, 158, 159). Besides, delete the whole [ virtual_sites3 ] (lines 296-299) and [ exclusions ] (lines 301-318) fields. The original .itp ( HETA_original_with_LPH_info.itp ) is included for comparison purposes.","title":"Requirements"},{"location":"examples/Protein_ligand_LPH_atoms_CHARMMff/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs str_noLP.pdb -ci index_mod_gromacs.ndx -cg 1 17 -ct com_traj.xtc -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs str_noLP.pdb -ci index_mod_gromacs.ndx -cg 1 17 -ct com_traj.xtc -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for PB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 Sample input file for PB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Prot-Lig-ST\", startframe=5, endframe=9, solvated_trajectory=0, # In gmx_MMPBSA v1.5.0 we have added a new PB radii set named charmm_radii. # This radii set should be used only with systems prepared with CHARMM force fields. # Uncomment the line below to use charmm_radii set #PBRadii=7, / &pb # radiopt=0 is recommended which means using radii from the prmtop file # for both the PB calculation and for the NP calculation istrng=0.15, fillratio=4, radiopt=0, inp=1, / Remember radiopt = 0 is recommended which means using radii from the prmtop file See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples","title":"Command-line"},{"location":"examples/Protein_ligand_LPH_atoms_CHARMMff/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( str_noLP.pdb ), an index file ( index_mod_gromacs.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 1 17 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. A topology file is also needed (mandatory) in this case to generate the topology files in amber format with all the terms for CHARMM force field. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/Protein_membrane/","text":"MMPBSA with membrane proteins \u00b6 Info This example can be found in the examples/Protein_membrane directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. Requirements \u00b6 Danger The ligand mol2 file must be the Antechamber output. In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx file containing the receptor and ligand in separated groups Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file mol2 The Antechamber output mol2 file of ligand parametrization A topology file (not included) top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional Remember When a topology file is defined, the ligand mol2 file is not needed. The ligand mol2 file only required when gmx_MMPBSA build the amber topology from a structure See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.pdb -ci index.ndx -cg 1 13 -ct com_traj.pdb -lm ligand.mol2 -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.pdb -ci index.ndx -cg 1 13 -ct com_traj.pdb -lm ligand.mol2 -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 6 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for MMPBSA with membrane proteins 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 Sample input file for MMPBSA with membrane proteins This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Prot-Memb\", startframe=1, endframe=4, / &pb memopt=1, emem=7.0, indi=4.0, mctrdz=-10.383, mthick=36.086, poretype=1, radiopt=0, istrng=0.150, fillratio=1.25, inp=2, sasopt=0, solvopt=2, ipb=1, bcopt=10, nfocus=1, linit=1000, eneopt=1, cutfd=7.0, cutnb=99.0, maxarcdot=15000, npbverb=1, / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations. Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.pdb ), an index file ( index.ndx ), a trajectory file ( com_traj.pdb ), and both the receptor and ligand group numbers in the index file ( 1 13 ) are needed. A ligand .mol2 file is also needed for generating the ligand topology. The mmpbsa. in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. Of note, special parameters for MMPBSA with membrane proteins have been included. Comments on parameters for implicit membranes The inclusion of an implicit membrane region in implicit solvation calculations is enabled by setting memopt to 1 (default value is 0, for off). The membrane will extend the solute dielectric region to include a slab-like planar region of uniform dielectric constant running parallel to the xy plane. The dielectric constant can be controlled using emem . We set the membrane interior dielectric constant to a value of 7.0 in this example. The value of emem should always be set to a value greater than or equal to indi (solute dielectric constant, 4 in this example) and less than exdi (solvent dielectric constant, 80.0 default). The thickness is controlled by the mthick option (36.086 \u00c5 in this case). The center of the membrane region is controlled with mctrdz and in this case the membrane region will be centered at -10.383 \u00c5 down of the center of the protein. If calculations are performed on a protein with a solvent-filled channel region, this region would be identified automatically by setting poretype=1 . When using the implicit membrane model, the default sasopt=0 , i.e. the classical solvent excluded surface, is recommended due to its better numerical behavior. When running with the default options, the program will compute solvent excluded surfaces both with the water probe ( prbrad=1.40 by default) and the membrane probe ( mprob=2.70 by default). This setting was found to be consistent with the explicit solvent MD simulations. It is also suggested that periodic boundary conditions be used to avoid unphysical edge effects. This is supported in all linear solvers. In the following, Geometric multigrid is chosen ( solvopt=2 ) with ipb=1 and bcopt=10 . The linit=1000 should work fine, but take into account that working with linear and periodic boundary conditions could require more iterations. In addition, eneopt needs to be set to 1 because the charge-view method ( eneopt = 2 ) is not supported for this application. When eneopt=1 , the total electrostatic energy and forces will be computed with the particle-particle particle-mesh (P3M) procedure outlined in Lu and Luo.[8] In doing so, energy term EPB in the output file is set to zero, while EEL term includes both the reaction field energy ( EPB ) and the Coulombic energy ( EEL ). The van der Waals energy is computed along with the particle-particle portion of the Coulombic energy. This option requires a nonzero CUTNB (in this case, cutnb=8.0 ). It's noteworthy mentioning that \u0394GGAS and \u0394GSOLV as reported are no longer properly decomposed. Since EPB and EEL are combined into the \"gas phase\" term, the gas and solvation terms can't be separated. Nevertheless, the total \u0394TOTAL should be perfectly fine, since everything is sum up together in the end. Danger Note that a smaller fillratio=1.25 is used compared to the defult one (4.0). The use of a periodic boundary also allowed a somewhat small fill ratio ( i.e. , the ratio of the finite-difference box dimension over the solute dimension) of 1.25 to be used in these calculations ( ref ). Be cautious when changing this parameter as its increase may lead to a considerable RAM usage (specially when running the program in parralel). Just for your information, using the default fillratio=4.0 in this relatively small system requieres as much as ~30GB per thread and more time to finish the calculation. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Membrane proteins"},{"location":"examples/Protein_membrane/#mmpbsa-with-membrane-proteins","text":"Info This example can be found in the examples/Protein_membrane directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository.","title":"MMPBSA with membrane proteins"},{"location":"examples/Protein_membrane/#requirements","text":"Danger The ligand mol2 file must be the Antechamber output. In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx file containing the receptor and ligand in separated groups Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file mol2 The Antechamber output mol2 file of ligand parametrization A topology file (not included) top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional Remember When a topology file is defined, the ligand mol2 file is not needed. The ligand mol2 file only required when gmx_MMPBSA build the amber topology from a structure See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Protein_membrane/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.pdb -ci index.ndx -cg 1 13 -ct com_traj.pdb -lm ligand.mol2 -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.pdb -ci index.ndx -cg 1 13 -ct com_traj.pdb -lm ligand.mol2 -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 6 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for MMPBSA with membrane proteins 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 Sample input file for MMPBSA with membrane proteins This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Prot-Memb\", startframe=1, endframe=4, / &pb memopt=1, emem=7.0, indi=4.0, mctrdz=-10.383, mthick=36.086, poretype=1, radiopt=0, istrng=0.150, fillratio=1.25, inp=2, sasopt=0, solvopt=2, ipb=1, bcopt=10, nfocus=1, linit=1000, eneopt=1, cutfd=7.0, cutnb=99.0, maxarcdot=15000, npbverb=1, / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations.","title":"Command-line"},{"location":"examples/Protein_membrane/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.pdb ), an index file ( index.ndx ), a trajectory file ( com_traj.pdb ), and both the receptor and ligand group numbers in the index file ( 1 13 ) are needed. A ligand .mol2 file is also needed for generating the ligand topology. The mmpbsa. in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. Of note, special parameters for MMPBSA with membrane proteins have been included. Comments on parameters for implicit membranes The inclusion of an implicit membrane region in implicit solvation calculations is enabled by setting memopt to 1 (default value is 0, for off). The membrane will extend the solute dielectric region to include a slab-like planar region of uniform dielectric constant running parallel to the xy plane. The dielectric constant can be controlled using emem . We set the membrane interior dielectric constant to a value of 7.0 in this example. The value of emem should always be set to a value greater than or equal to indi (solute dielectric constant, 4 in this example) and less than exdi (solvent dielectric constant, 80.0 default). The thickness is controlled by the mthick option (36.086 \u00c5 in this case). The center of the membrane region is controlled with mctrdz and in this case the membrane region will be centered at -10.383 \u00c5 down of the center of the protein. If calculations are performed on a protein with a solvent-filled channel region, this region would be identified automatically by setting poretype=1 . When using the implicit membrane model, the default sasopt=0 , i.e. the classical solvent excluded surface, is recommended due to its better numerical behavior. When running with the default options, the program will compute solvent excluded surfaces both with the water probe ( prbrad=1.40 by default) and the membrane probe ( mprob=2.70 by default). This setting was found to be consistent with the explicit solvent MD simulations. It is also suggested that periodic boundary conditions be used to avoid unphysical edge effects. This is supported in all linear solvers. In the following, Geometric multigrid is chosen ( solvopt=2 ) with ipb=1 and bcopt=10 . The linit=1000 should work fine, but take into account that working with linear and periodic boundary conditions could require more iterations. In addition, eneopt needs to be set to 1 because the charge-view method ( eneopt = 2 ) is not supported for this application. When eneopt=1 , the total electrostatic energy and forces will be computed with the particle-particle particle-mesh (P3M) procedure outlined in Lu and Luo.[8] In doing so, energy term EPB in the output file is set to zero, while EEL term includes both the reaction field energy ( EPB ) and the Coulombic energy ( EEL ). The van der Waals energy is computed along with the particle-particle portion of the Coulombic energy. This option requires a nonzero CUTNB (in this case, cutnb=8.0 ). It's noteworthy mentioning that \u0394GGAS and \u0394GSOLV as reported are no longer properly decomposed. Since EPB and EEL are combined into the \"gas phase\" term, the gas and solvation terms can't be separated. Nevertheless, the total \u0394TOTAL should be perfectly fine, since everything is sum up together in the end. Danger Note that a smaller fillratio=1.25 is used compared to the defult one (4.0). The use of a periodic boundary also allowed a somewhat small fill ratio ( i.e. , the ratio of the finite-difference box dimension over the solute dimension) of 1.25 to be used in these calculations ( ref ). Be cautious when changing this parameter as its increase may lead to a considerable RAM usage (specially when running the program in parralel). Just for your information, using the default fillratio=4.0 in this relatively small system requieres as much as ~30GB per thread and more time to finish the calculation. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/Protein_membrane_CHARMMff/","text":"CHARMM and MM(PB/GB)SA PB model is recommended when working with CHARMMff files. Nevertheless, the combination of PB/GB models with radii optimized for amber atom types ( i.e. bondi, mbondi, mbondi2, mbondi3) and CHARMM force field hasn't been tested extensively. Please, check this thread for more information and proceed with caution. in gmx_MMPBSA v1.5.0!!! In gmx_MMPBSA v1.5.0 we have added a new PB radii set named charmm_radii . This radii set should be used only with systems prepared with CHARMM force fields . The atomic radii set for Poisson-Boltzmann calculations has been derived from average solvent electrostatic charge distribution with explicit solvent. The accuracy has been tested with free energy perturbation with explicit solvent ref. . Most of the values were taken from a *radii.str file used in PBEQ Solver in charmm-gui . Radii for protein atoms in 20 standard amino acids from Nina, Belogv, and Roux Radii for nucleic acid atoms (RNA and DNA) from Banavali and Roux Halogens and other atoms from Fortuna and Costa Protein-ligand embedded in membrane binding free energy calculations (Single Trajectory method) with CHARMMff files \u00b6 Info This example can be found in the examples/Protein_membrane_CHARMMff directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. Requirements \u00b6 In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr final GROMACS MD trajectory, fitted and with no pbc. A topology file top take into account that *.itp files belonging to the topology file should be also present in the folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.pdb -ci index.ndx -cg 6 5 -ct md.xtc -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.pdb -ci index.ndx -cg 6 5 -ct md.xtc -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 11 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for MMPBSA with membrane proteins 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Sample input file for MMPBSA with membrane proteins This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Prot-Memb-CHARMM\", startframe=1, endframe=4, # In gmx_MMPBSA v1.5.0 we have added a new PB radii set named charmm_radii. # This radii set should be used only with systems prepared with CHARMM force fields. # Uncomment the line below to use charmm_radii set #PBRadii=7, / &pb memopt=1, emem=7.0, indi=1.0, mctrdz=37, mthick=40, poretype=1, radiopt=0, istrng=0.150, fillratio=1.25, inp=2, sasopt=0, solvopt=2, ipb=1, bcopt=10, nfocus=1, linit=1000, eneopt=1, cutfd=7.0, cutnb=99.0, maxarcdot=15000, npbverb=1, / Remember radiopt = 0 is recommended which means using radii from the prmtop file See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples Considerations \u00b6 This is a protein-protein complex system that contains several glycosilation sites and ligands bound. All of that, is embedded in POPC:CHOL a (4:1) membrane. As you will see, gmx_MMPBSA is able to handle successfully such a complex system. Of note, just a relevant part of the entire system has been considered for binding free calculations, since the inclusion of the rest will increase the computation time without improving the results. You can check the file _GMXMMPBSA_COM_FIXED.pdb during the calculation to see how the complex looks like. In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.pdb ), an index file ( index.ndx ), a trajectory file ( md.xtc ), and both the receptor and ligand group numbers in the index file ( 6 5 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. A topology file is also needed (mandatory) in this case to generate the topology files in amber format with all the terms for CHARMM force field. Comments on parameters for implicit membranes The inclusion of an implicit membrane region in implicit solvation calculations is enabled by setting memopt to 1 (default value is 0, for off). The membrane will extend the solute dielectric region to include a slab-like planar region of uniform dielectric constant running parallel to the xy plane. The dielectric constant can be controlled using emem . We set the membrane interior dielectric constant to a value of 7.0 in this example. The value of emem should always be set to a value greater than or equal to indi (solute dielectric constant, 1 in this example) and less than exdi (solvent dielectric constant, 80.0 default). The thickness is controlled by the mthick option (40 \u00c5 in this case). The center of the membrane region is controlled with mctrdz and in this case the membrane region will be centered at 37 \u00c5 from the center of the protein. If calculations are performed on a protein with a solvent-filled channel region, this region would be identified automatically by setting poretype=1 . When using the implicit membrane model, the default sasopt=0 , i.e. the classical solvent excluded surface, is recommended due to its better numerical behavior. When running with the default options, the program will compute solvent excluded surfaces both with the water probe ( prbrad=1.40 by default) and the membrane probe ( mprob=2.70 by default). This setting was found to be consistent with the explicit solvent MD simulations. It is also suggested that periodic boundary conditions be used to avoid unphysical edge effects. This is supported in all linear solvers. In the following, Geometric multigrid is chosen ( solvopt=2 ) with ipb=1 and bcopt=10 . The linit=1000 should work fine, but take into account that working with linear and periodic boundary conditions could require more iterations. In addition, eneopt needs to be set to 1 because the charge-view method ( eneopt = 2 ) is not supported for this application. When eneopt=1 , the total electrostatic energy and forces will be computed with the particle-particle particle-mesh (P3M) procedure outlined in Lu and Luo.[8] In doing so, energy term EPB in the output file is set to zero, while EEL term includes both the reaction field energy ( EPB ) and the Coulombic energy ( EEL ). The van der Waals energy is computed along with the particle-particle portion of the Coulombic energy. This option requires a nonzero CUTNB (in this case, cutnb=8.0 ). It's noteworthy mentioning that \u0394GGAS and \u0394GSOLV as reported are no longer properly decomposed. Since EPB and EEL are combined into the \"gas phase\" term, the gas and solvation terms can't be separated. Nevertheless, the total \u0394TOTAL should be perfectly fine, since everything is sum up together in the end. Danger Note that a smaller fillratio=1.25 is used compared to the defult one (4.0). The use of a periodic boundary also allowed a somewhat small fill ratio ( i.e. , the ratio of the finite-difference box dimension over the solute dimension) of 1.25 to be used in these calculations ( ref ). Be cautious when changing this parameter as its increase may lead to a considerable RAM usage (specially when running the program in parralel). A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Protein-ligand complex embedded in membrane"},{"location":"examples/Protein_membrane_CHARMMff/#protein-ligand-embedded-in-membrane-binding-free-energy-calculations-single-trajectory-method-with-charmmff-files","text":"Info This example can be found in the examples/Protein_membrane_CHARMMff directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository.","title":"Protein-ligand embedded in membrane binding free energy calculations (Single Trajectory method) with CHARMMff files"},{"location":"examples/Protein_membrane_CHARMMff/#requirements","text":"In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates Receptor and ligand group integers Receptor and ligand group numbers in the index file A trajectory file xtc pdb trr final GROMACS MD trajectory, fitted and with no pbc. A topology file top take into account that *.itp files belonging to the topology file should be also present in the folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Protein_membrane_CHARMMff/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.pdb -ci index.ndx -cg 6 5 -ct md.xtc -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.pdb -ci index.ndx -cg 6 5 -ct md.xtc -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 11 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for MMPBSA with membrane proteins 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Sample input file for MMPBSA with membrane proteins This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Prot-Memb-CHARMM\", startframe=1, endframe=4, # In gmx_MMPBSA v1.5.0 we have added a new PB radii set named charmm_radii. # This radii set should be used only with systems prepared with CHARMM force fields. # Uncomment the line below to use charmm_radii set #PBRadii=7, / &pb memopt=1, emem=7.0, indi=1.0, mctrdz=37, mthick=40, poretype=1, radiopt=0, istrng=0.150, fillratio=1.25, inp=2, sasopt=0, solvopt=2, ipb=1, bcopt=10, nfocus=1, linit=1000, eneopt=1, cutfd=7.0, cutnb=99.0, maxarcdot=15000, npbverb=1, / Remember radiopt = 0 is recommended which means using radii from the prmtop file See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples","title":"Command-line"},{"location":"examples/Protein_membrane_CHARMMff/#considerations","text":"This is a protein-protein complex system that contains several glycosilation sites and ligands bound. All of that, is embedded in POPC:CHOL a (4:1) membrane. As you will see, gmx_MMPBSA is able to handle successfully such a complex system. Of note, just a relevant part of the entire system has been considered for binding free calculations, since the inclusion of the rest will increase the computation time without improving the results. You can check the file _GMXMMPBSA_COM_FIXED.pdb during the calculation to see how the complex looks like. In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.pdb ), an index file ( index.ndx ), a trajectory file ( md.xtc ), and both the receptor and ligand group numbers in the index file ( 6 5 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. A topology file is also needed (mandatory) in this case to generate the topology files in amber format with all the terms for CHARMM force field. Comments on parameters for implicit membranes The inclusion of an implicit membrane region in implicit solvation calculations is enabled by setting memopt to 1 (default value is 0, for off). The membrane will extend the solute dielectric region to include a slab-like planar region of uniform dielectric constant running parallel to the xy plane. The dielectric constant can be controlled using emem . We set the membrane interior dielectric constant to a value of 7.0 in this example. The value of emem should always be set to a value greater than or equal to indi (solute dielectric constant, 1 in this example) and less than exdi (solvent dielectric constant, 80.0 default). The thickness is controlled by the mthick option (40 \u00c5 in this case). The center of the membrane region is controlled with mctrdz and in this case the membrane region will be centered at 37 \u00c5 from the center of the protein. If calculations are performed on a protein with a solvent-filled channel region, this region would be identified automatically by setting poretype=1 . When using the implicit membrane model, the default sasopt=0 , i.e. the classical solvent excluded surface, is recommended due to its better numerical behavior. When running with the default options, the program will compute solvent excluded surfaces both with the water probe ( prbrad=1.40 by default) and the membrane probe ( mprob=2.70 by default). This setting was found to be consistent with the explicit solvent MD simulations. It is also suggested that periodic boundary conditions be used to avoid unphysical edge effects. This is supported in all linear solvers. In the following, Geometric multigrid is chosen ( solvopt=2 ) with ipb=1 and bcopt=10 . The linit=1000 should work fine, but take into account that working with linear and periodic boundary conditions could require more iterations. In addition, eneopt needs to be set to 1 because the charge-view method ( eneopt = 2 ) is not supported for this application. When eneopt=1 , the total electrostatic energy and forces will be computed with the particle-particle particle-mesh (P3M) procedure outlined in Lu and Luo.[8] In doing so, energy term EPB in the output file is set to zero, while EEL term includes both the reaction field energy ( EPB ) and the Coulombic energy ( EEL ). The van der Waals energy is computed along with the particle-particle portion of the Coulombic energy. This option requires a nonzero CUTNB (in this case, cutnb=8.0 ). It's noteworthy mentioning that \u0394GGAS and \u0394GSOLV as reported are no longer properly decomposed. Since EPB and EEL are combined into the \"gas phase\" term, the gas and solvation terms can't be separated. Nevertheless, the total \u0394TOTAL should be perfectly fine, since everything is sum up together in the end. Danger Note that a smaller fillratio=1.25 is used compared to the defult one (4.0). The use of a periodic boundary also allowed a somewhat small fill ratio ( i.e. , the ratio of the finite-difference box dimension over the solute dimension) of 1.25 to be used in these calculations ( ref ). Be cautious when changing this parameter as its increase may lead to a considerable RAM usage (specially when running the program in parralel). A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/Protein_protein/","text":"Protein-protein binding free energy calculations \u00b6 Info This example can be found in the examples/Protein_protein directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. Requirements \u00b6 In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx File containing the receptor and ligand in separated groups Receptor and ligand group integers Group numbers in the index files A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 4 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for GB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Sample input file for GB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Prot-Prot\", startframe=1, endframe=10, forcefields=\"leaprc.protein.ff14SB\", / &gb igb=2, saltcon=0.150, / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations. Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is also another protein) amber format topologies and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb2 (GB-OBC1) model and a salt concentration = 0.15M. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Protein-protein"},{"location":"examples/Protein_protein/#protein-protein-binding-free-energy-calculations","text":"Info This example can be found in the examples/Protein_protein directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository.","title":"Protein-protein binding free energy calculations"},{"location":"examples/Protein_protein/#requirements","text":"In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx File containing the receptor and ligand in separated groups Receptor and ligand group integers Group numbers in the index files A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Protein_protein/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 4 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for GB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Sample input file for GB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Prot-Prot\", startframe=1, endframe=10, forcefields=\"leaprc.protein.ff14SB\", / &gb igb=2, saltcon=0.150, / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations.","title":"Command-line"},{"location":"examples/Protein_protein/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is also another protein) amber format topologies and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb2 (GB-OBC1) model and a salt concentration = 0.15M. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/QM_MMGBSA/","text":"QM/MMGBSA binding free energy calculations \u00b6 Info This example can be found in the examples/QM_MMGBSA directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. Requirements \u00b6 Danger The ligand mol2 file must be the Antechamber output. In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx File containing the receptor and ligand in separated groups Receptor and ligand group integers Group numbers in the index files A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file mol2 The Antechamber output mol2 file of ligand parametrization A topology file (not included) top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional Remember When a topology file is defined, the ligand mol2 file is not needed. The ligand mol2 file only required when gmx_MMPBSA build the amber topology from a structure See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -lm ligand.mol2 -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -lm ligand.mol2 -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for QM/MMGBSA calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 Sample input file for QM/MMGBSA calculation This input file is meant to show only that gmx_MMPBSA works. Although, we tried to use the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"QM/MMGBSA\", startframe=5, endframe=14, PBRadii=2, forcefields=\"oldff/leaprc.ff99SB,leaprc.gaff\" / &gb igb=1, saltcon=0.150, ifqnt=1, qm_theory=PM3, # Residues to be treated with QM can be selected using different approaches. Please, make sure to include at least # one residue from both the receptor and ligand in the qm_residues mask when using 'ifqnt'. This requirement is # automatically fulfilled when using the within keyword https://groups.google.com/g/gmx_mmpbsa/c/GNb4q4YGCH8 # Residue selection by distance (recommended) qm_residues=\"within 4\" ## Explicit residue selection #qm_residues=\"A/40-41,44,47,78,81-82,85,88,115,118,122,215,218-220,232 B/241\" # Residue selection with amber masks #com_qmmask=\"(:44,47,85,88,218&!@N,H,CA,HA,C,O) | :241\" #rec_qmmask=\"(:44,47,85,88,218&!@N,H,CA,HA,C,O)\" #lig_qmmask=\":1\" / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations. Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 1 13 ) are needed. A ligand .mol2 file is also needed for generating the ligand topology. The mmpbsa.in input file will contain all the parameters needed for the QM/MMGBSA calculation. 10 frames are going to be used when performing QM/MMGBSA calculation with the igb1 (GB-HCT) model (note that mbondi raddi set PBRadii=2 is used), PM3 method and a salt concentration = 0.15M. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"QM/MMGBSA"},{"location":"examples/QM_MMGBSA/#qmmmgbsa-binding-free-energy-calculations","text":"Info This example can be found in the examples/QM_MMGBSA directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository.","title":"QM/MMGBSA binding free energy calculations"},{"location":"examples/QM_MMGBSA/#requirements","text":"Danger The ligand mol2 file must be the Antechamber output. In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx File containing the receptor and ligand in separated groups Receptor and ligand group integers Group numbers in the index files A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file mol2 The Antechamber output mol2 file of ligand parametrization A topology file (not included) top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional Remember When a topology file is defined, the ligand mol2 file is not needed. The ligand mol2 file only required when gmx_MMPBSA build the amber topology from a structure See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/QM_MMGBSA/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -lm ligand.mol2 -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -lm ligand.mol2 -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for QM/MMGBSA calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 Sample input file for QM/MMGBSA calculation This input file is meant to show only that gmx_MMPBSA works. Although, we tried to use the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"QM/MMGBSA\", startframe=5, endframe=14, PBRadii=2, forcefields=\"oldff/leaprc.ff99SB,leaprc.gaff\" / &gb igb=1, saltcon=0.150, ifqnt=1, qm_theory=PM3, # Residues to be treated with QM can be selected using different approaches. Please, make sure to include at least # one residue from both the receptor and ligand in the qm_residues mask when using 'ifqnt'. This requirement is # automatically fulfilled when using the within keyword https://groups.google.com/g/gmx_mmpbsa/c/GNb4q4YGCH8 # Residue selection by distance (recommended) qm_residues=\"within 4\" ## Explicit residue selection #qm_residues=\"A/40-41,44,47,78,81-82,85,88,115,118,122,215,218-220,232 B/241\" # Residue selection with amber masks #com_qmmask=\"(:44,47,85,88,218&!@N,H,CA,HA,C,O) | :241\" #rec_qmmask=\"(:44,47,85,88,218&!@N,H,CA,HA,C,O)\" #lig_qmmask=\":1\" / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations.","title":"Command-line"},{"location":"examples/QM_MMGBSA/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 1 13 ) are needed. A ligand .mol2 file is also needed for generating the ligand topology. The mmpbsa.in input file will contain all the parameters needed for the QM/MMGBSA calculation. 10 frames are going to be used when performing QM/MMGBSA calculation with the igb1 (GB-HCT) model (note that mbondi raddi set PBRadii=2 is used), PM3 method and a salt concentration = 0.15M. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/Stability/","text":"Stability calculations \u00b6 Info This example can be found in the examples/Stability directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. Requirements \u00b6 In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx File containing the receptor and ligand in separated groups Receptor and ligand group integers Group numbers in the index files A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 13 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for GB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for GB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Stability\", startframe=1, endframe=10, / &gb igb=2, saltcon=0.150, / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations. Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is also another protein) amber format topologies and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb2 (GB-OBC1) model and a salt concentration = 0.15M. \"Stability\" calculation will be performed, and you will get statistics based on only a single system (complex). Any additional receptor or ligand information given will be ignored. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Stability calculations"},{"location":"examples/Stability/#stability-calculations","text":"Info This example can be found in the examples/Stability directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository.","title":"Stability calculations"},{"location":"examples/Stability/#requirements","text":"In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file tpr pdb Structure file containing the system coordinates An index file ndx File containing the receptor and ligand in separated groups Receptor and ligand group integers Group numbers in the index files A trajectory file xtc pdb trr Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Stability/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: Serial With MPI gmx_MMPBSA_test gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv gmx_MMPBSA_test -t 13 where the mmpbsa.in input file, is a text file containing the following lines: Sample input file for GB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for GB calculation This input file is meant to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations in a reasonable amount of time. Feel free to change the parameters according to what is better for your system. &general sys_name=\"Stability\", startframe=1, endframe=10, / &gb igb=2, saltcon=0.150, / Keep in mind See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples . These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section ). This will allow you to tackle a number of potential problems or simply use fancier approximations in your calculations.","title":"Command-line"},{"location":"examples/Stability/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is also another protein) amber format topologies and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 3 4 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb2 (GB-OBC1) model and a salt concentration = 0.15M. \"Stability\" calculation will be performed, and you will get statistics based on only a single system (complex). Any additional receptor or ligand information given will be ignored. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/psf_dcd/multicomponent_system/","text":"Binding free energy calculations in multicomponent systems (3 or more elements) \u00b6 Info This example can be found in the examples/psf_dcd/multicomponent_system directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. In this example we are going to generate gmx_MMPBSA input files from psf_dcd files. It is strongly recommended to check how gmx_MMPBSA works before attempting any sort of calculations. See below the input files required for running gmx_MMPBSA. Make sure to install gmx_MMPBSA in a dedicated conda environment as decribed here . Requirements \u00b6 In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file pdb Structure file containing the system coordinates A trajectory file xtc pdb Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder An index file ndx File containing the receptor and ligand in separated groups Receptor and ligand group integers Group numbers in the index files A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional Steps to generate gmx_MMPBSA files 1- The input file *.in 2- The MD Structure+mass(db) and the trajectory files 3- The topology file 4- The index file The input file *.in is already included in the tutorial folder, although it can be easily generated using --create_input command . The *.in input file, is a text file containing the following lines: Sample input file for GB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 Input file generated by gmx_MMPBSA (v1.5.0.3) Be careful with the variables you modify, some can have severe consequences on the results you obtain. # General namelist variables &general sys_name = \"\" # System name startframe = 5 # FIRST FRAME TO ANALYZE endframe = 15 # LAST FRAME TO ANALYZE interval = 1 # Number of frames between adjacent frames analyzed forcefields = \"oldff/leaprc.ff99SB,leaprc.gaff\" # Force field(IGNORED SINCE WE ARE DEFINING THE TOPOLOGY) ions_parameters = 1 # Define ions parameters to build the Amber topology PBRadii = 3 # Define PBRadii to build amber topology from GROMACS files temperature = 298.15 # Temperature qh_entropy = 0 # Do quasi-harmonic calculation interaction_entropy = 0 # Do Interaction Entropy calculation ie_segment = 25 # Trajectory segment to calculate interaction entropy c2_entropy = 0 # Do C2 Entropy calculation assign_chainID = 1 # ASSIGN CHAINS ID exp_ki = 0.0 # Experimental Ki in nM full_traj = 0 # Print a full traj. AND the thread trajectories gmx_path = \"\" # Force to use this path to get GROMACS executable keep_files = 2 # How many files to keep after successful completion netcdf = 0 # Use NetCDF intermediate trajectories solvated_trajectory = 1 # Define if it is necessary to cleanup the trajectories verbose = 1 # How many energy terms to print in the final output / # (AMBER) Generalized-Born namelist variables &gb igb = 5 # GB model to use intdiel = 1.0 # Internal dielectric constant for sander extdiel = 78.5 # External dielectric constant for sander saltcon = 0.15 # SALT CONCENTRATION (M) surften = 0.0072 # Surface tension surfoff = 0.0 # Surface tension offset molsurf = 0 # Use Connelly surface ('molsurf' program) msoffset = 0.0 # Offset for molsurf calculation probe = 1.4 # Solvent probe radius for surface area calc ifqnt = 0 # Use QM on part of the system qm_theory = \"\" # Semi-empirical QM theory to use qm_residues = \"\" # Residues to treat with QM qmcharge_com = 0 # Charge of QM region in complex qmcharge_lig = 0 # Charge of QM region in ligand qmcharge_rec = 0 # Charge of QM region in receptor qmcut = 9999.0 # Cutoff in the QM region / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples We are going to use cpptraj program from Amber to process the *.psf and *.dcd files: Press enter after every command line cpptraj -p step3_input.psf >trajin traj.dcd >strip :POT,CLA,TIP3,SOD >trajout gromacs.pdb onlyframes 1 >trajout traj.xtc >run >exit After executing these commands, there should be two new files in te folder, i.e. gromacs.pdb that is going to be used as the MD Structure+mass(db) file, and traj.xtc that is going to be used as the trajectory file. Keep in mind For some reason, when using charmm-gui to prepare the files, the toppar files that come inside the NAMD folder have the ATOM section commented with the ! symbol: !ATOMS !MASS -1 H 1.00800 ! polar H !MASS -1 HC 1.00800 ! N-ter H !MASS -1 HA 1.00800 ! nonpolar H !MASS -1 HP 1.00800 ! aromatic H !MASS -1 HB1 1.00800 ! backbone H !MASS -1 HB2 1.00800 ! aliphatic backbone H, to CT2 !MASS -1 HR1 1.00800 ! his he1, (+) his HG,HD2 ... This section can't be commented on for the purpose of this tutorial, thus you can either use a files with the ATOM section uncommented or just uncomment the section yourself: ATOMS MASS -1 H 1.00800 ! polar H MASS -1 HC 1.00800 ! N-ter H MASS -1 HA 1.00800 ! nonpolar H MASS -1 HP 1.00800 ! aromatic H MASS -1 HB1 1.00800 ! backbone H MASS -1 HB2 1.00800 ! aliphatic backbone H, to CT2 MASS -1 HR1 1.00800 ! his he1, (+) his HG,HD2 ... We are going to use ParmEd to convert the *.psf file into a GROMACS topology file. To do so, use the ParmEd script that is already included in the tutorial folder. python script.py Take your time to analyze step by step the process of converting .psf/ .crd files intoa GROMACS topology with ParmEd. # import ParmEd module import parmed as pmd # load psf file psf = pmd . load_file ( 'step3_input.psf' ) #load coordinate file psf . coordinates = pmd . load_file ( 'step3_input.crd' ) . coordinates # strip ions and water psf . strip ( ':POT, CLA, TIP3, LIT, SOD, RUB, CES, BAR' ) # load Charmm Parameter Set. Make sure to include all the necessary force filed files in this list params = pmd . charmm . CharmmParameterSet ( 'toppar/par_all36_carb.prm' , 'toppar/par_all36_cgenff.prm' , 'toppar/par_all36_lipid.prm' , 'toppar/par_all36m_prot.prm' , 'toppar/par_all36_na.prm' , 'toppar/par_interface.prm' , 'toppar/toppar_water_ions.str' ) psf . load_parameters ( params ) # save GROMACS topology file psf . save ( 'gromacs.top' ) The last file we need to generate is the index file containing the groups with the receptor and ligand atoms. To do so, just use make_ndx from GROMACS and the MD Structure+mass(db) that was generated previously. Press enter after every command line gmx make_ndx -f gromacs.pdb -o index.ndx >a 1-3234 >a 3235-5044 >a 5045-7116 >10|12 >q After this, there should be four new groups (10, 11, 12, 13) in the index file. The groups 10, 11, and 12 contain the atoms from chain A, B ,and C, respectively. The group 13 (a_1-3234_a_5045-7116) resulting from the union of chain A + C, contains the atoms belonging to chain A and C, and will be the receptor in this case. Once the gmx_MMPBSA files have been generated, the program can be run either in serial or in parallel: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs gromacs.pdb -ct traj.xtc -ci index.ndx -cg 13 11 -cp gromacs.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs gromacs.pdb -ct traj.xtc -ci index.ndx -cg 13 11 -cp gromacs.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( gromacs.pdb ), an index file ( index.ndx ), a trajectory file ( traj.xtc ), and both the receptor and ligand group numbers in the index file ( 13 11 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 11 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a salt concentration = 0.15M. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Multicomponent system"},{"location":"examples/psf_dcd/multicomponent_system/#binding-free-energy-calculations-in-multicomponent-systems-3-or-more-elements","text":"Info This example can be found in the examples/psf_dcd/multicomponent_system directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. In this example we are going to generate gmx_MMPBSA input files from psf_dcd files. It is strongly recommended to check how gmx_MMPBSA works before attempting any sort of calculations. See below the input files required for running gmx_MMPBSA. Make sure to install gmx_MMPBSA in a dedicated conda environment as decribed here .","title":"Binding free energy calculations in multicomponent systems (3 or more elements)"},{"location":"examples/psf_dcd/multicomponent_system/#requirements","text":"In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file pdb Structure file containing the system coordinates A trajectory file xtc pdb Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder An index file ndx File containing the receptor and ligand in separated groups Receptor and ligand group integers Group numbers in the index files A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional Steps to generate gmx_MMPBSA files 1- The input file *.in 2- The MD Structure+mass(db) and the trajectory files 3- The topology file 4- The index file The input file *.in is already included in the tutorial folder, although it can be easily generated using --create_input command . The *.in input file, is a text file containing the following lines: Sample input file for GB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 Input file generated by gmx_MMPBSA (v1.5.0.3) Be careful with the variables you modify, some can have severe consequences on the results you obtain. # General namelist variables &general sys_name = \"\" # System name startframe = 5 # FIRST FRAME TO ANALYZE endframe = 15 # LAST FRAME TO ANALYZE interval = 1 # Number of frames between adjacent frames analyzed forcefields = \"oldff/leaprc.ff99SB,leaprc.gaff\" # Force field(IGNORED SINCE WE ARE DEFINING THE TOPOLOGY) ions_parameters = 1 # Define ions parameters to build the Amber topology PBRadii = 3 # Define PBRadii to build amber topology from GROMACS files temperature = 298.15 # Temperature qh_entropy = 0 # Do quasi-harmonic calculation interaction_entropy = 0 # Do Interaction Entropy calculation ie_segment = 25 # Trajectory segment to calculate interaction entropy c2_entropy = 0 # Do C2 Entropy calculation assign_chainID = 1 # ASSIGN CHAINS ID exp_ki = 0.0 # Experimental Ki in nM full_traj = 0 # Print a full traj. AND the thread trajectories gmx_path = \"\" # Force to use this path to get GROMACS executable keep_files = 2 # How many files to keep after successful completion netcdf = 0 # Use NetCDF intermediate trajectories solvated_trajectory = 1 # Define if it is necessary to cleanup the trajectories verbose = 1 # How many energy terms to print in the final output / # (AMBER) Generalized-Born namelist variables &gb igb = 5 # GB model to use intdiel = 1.0 # Internal dielectric constant for sander extdiel = 78.5 # External dielectric constant for sander saltcon = 0.15 # SALT CONCENTRATION (M) surften = 0.0072 # Surface tension surfoff = 0.0 # Surface tension offset molsurf = 0 # Use Connelly surface ('molsurf' program) msoffset = 0.0 # Offset for molsurf calculation probe = 1.4 # Solvent probe radius for surface area calc ifqnt = 0 # Use QM on part of the system qm_theory = \"\" # Semi-empirical QM theory to use qm_residues = \"\" # Residues to treat with QM qmcharge_com = 0 # Charge of QM region in complex qmcharge_lig = 0 # Charge of QM region in ligand qmcharge_rec = 0 # Charge of QM region in receptor qmcut = 9999.0 # Cutoff in the QM region / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples We are going to use cpptraj program from Amber to process the *.psf and *.dcd files: Press enter after every command line cpptraj -p step3_input.psf >trajin traj.dcd >strip :POT,CLA,TIP3,SOD >trajout gromacs.pdb onlyframes 1 >trajout traj.xtc >run >exit After executing these commands, there should be two new files in te folder, i.e. gromacs.pdb that is going to be used as the MD Structure+mass(db) file, and traj.xtc that is going to be used as the trajectory file. Keep in mind For some reason, when using charmm-gui to prepare the files, the toppar files that come inside the NAMD folder have the ATOM section commented with the ! symbol: !ATOMS !MASS -1 H 1.00800 ! polar H !MASS -1 HC 1.00800 ! N-ter H !MASS -1 HA 1.00800 ! nonpolar H !MASS -1 HP 1.00800 ! aromatic H !MASS -1 HB1 1.00800 ! backbone H !MASS -1 HB2 1.00800 ! aliphatic backbone H, to CT2 !MASS -1 HR1 1.00800 ! his he1, (+) his HG,HD2 ... This section can't be commented on for the purpose of this tutorial, thus you can either use a files with the ATOM section uncommented or just uncomment the section yourself: ATOMS MASS -1 H 1.00800 ! polar H MASS -1 HC 1.00800 ! N-ter H MASS -1 HA 1.00800 ! nonpolar H MASS -1 HP 1.00800 ! aromatic H MASS -1 HB1 1.00800 ! backbone H MASS -1 HB2 1.00800 ! aliphatic backbone H, to CT2 MASS -1 HR1 1.00800 ! his he1, (+) his HG,HD2 ... We are going to use ParmEd to convert the *.psf file into a GROMACS topology file. To do so, use the ParmEd script that is already included in the tutorial folder. python script.py Take your time to analyze step by step the process of converting .psf/ .crd files intoa GROMACS topology with ParmEd. # import ParmEd module import parmed as pmd # load psf file psf = pmd . load_file ( 'step3_input.psf' ) #load coordinate file psf . coordinates = pmd . load_file ( 'step3_input.crd' ) . coordinates # strip ions and water psf . strip ( ':POT, CLA, TIP3, LIT, SOD, RUB, CES, BAR' ) # load Charmm Parameter Set. Make sure to include all the necessary force filed files in this list params = pmd . charmm . CharmmParameterSet ( 'toppar/par_all36_carb.prm' , 'toppar/par_all36_cgenff.prm' , 'toppar/par_all36_lipid.prm' , 'toppar/par_all36m_prot.prm' , 'toppar/par_all36_na.prm' , 'toppar/par_interface.prm' , 'toppar/toppar_water_ions.str' ) psf . load_parameters ( params ) # save GROMACS topology file psf . save ( 'gromacs.top' ) The last file we need to generate is the index file containing the groups with the receptor and ligand atoms. To do so, just use make_ndx from GROMACS and the MD Structure+mass(db) that was generated previously. Press enter after every command line gmx make_ndx -f gromacs.pdb -o index.ndx >a 1-3234 >a 3235-5044 >a 5045-7116 >10|12 >q After this, there should be four new groups (10, 11, 12, 13) in the index file. The groups 10, 11, and 12 contain the atoms from chain A, B ,and C, respectively. The group 13 (a_1-3234_a_5045-7116) resulting from the union of chain A + C, contains the atoms belonging to chain A and C, and will be the receptor in this case. Once the gmx_MMPBSA files have been generated, the program can be run either in serial or in parallel: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs gromacs.pdb -ct traj.xtc -ci index.ndx -cg 13 11 -cp gromacs.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs gromacs.pdb -ct traj.xtc -ci index.ndx -cg 13 11 -cp gromacs.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv","title":"Requirements"},{"location":"examples/psf_dcd/multicomponent_system/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( gromacs.pdb ), an index file ( index.ndx ), a trajectory file ( traj.xtc ), and both the receptor and ligand group numbers in the index file ( 13 11 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 11 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a salt concentration = 0.15M. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/psf_dcd/protein_ligand/","text":"Protein-ligand binding free energy calculations with psf_dcd files \u00b6 Info This example can be found in the examples/psf_dcd/protein_ligand directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. In this example we are going to generate gmx_MMPBSA input files from psf_dcd files. It is strongly recommended to check how gmx_MMPBSA works before attempting any sort of calculations. See below the input files required for running gmx_MMPBSA. Make sure to install gmx_MMPBSA in a dedicated conda environment as decribed here . Requirements \u00b6 In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed A trajectory file xtc pdb Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder The MD Structure+mass(db) file pdb Structure file containing the system coordinates An index file ndx File containing the receptor and ligand in separated groups Receptor and ligand group integers Group numbers in the index files A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional Steps to generate gmx_MMPBSA files 1- The input file *.in 2- The trajectory file 3- The topology and the MD Structure+mass(db) files 4- The index file The input file *.in is already included in the tutorial folder, although it can be easily generated using --create_input command . The *.in input file, is a text file containing the following lines: Sample input file for GB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 Input file generated by gmx_MMPBSA (v1.5.0.3) Be careful with the variables you modify, some can have severe consequences on the results you obtain. # General namelist variables &general sys_name = \"\" # System name startframe = 5 # FIRST FRAME TO ANALYZE endframe = 15 # LAST FRAME TO ANALYZE interval = 1 # Number of frames between adjacent frames analyzed forcefields = \"oldff/leaprc.ff99SB,leaprc.gaff\" # Force field(IGNORED SINCE WE ARE DEFINING THE TOPOLOGY) ions_parameters = 1 # Define ions parameters to build the Amber topology PBRadii = 3 # Define PBRadii to build amber topology from GROMACS files temperature = 298.15 # Temperature qh_entropy = 0 # Do quasi-harmonic calculation interaction_entropy = 0 # Do Interaction Entropy calculation ie_segment = 25 # Trajectory segment to calculate interaction entropy c2_entropy = 0 # Do C2 Entropy calculation assign_chainID = 0 # ASSIGN CHAINS ID exp_ki = 0.0 # Experimental Ki in nM full_traj = 0 # Print a full traj. AND the thread trajectories gmx_path = \"\" # Force to use this path to get GROMACS executable keep_files = 2 # How many files to keep after successful completion netcdf = 0 # Use NetCDF intermediate trajectories solvated_trajectory = 1 # Define if it is necessary to cleanup the trajectories verbose = 1 # How many energy terms to print in the final output / # (AMBER) Generalized-Born namelist variables &gb igb = 5 # GB model to use intdiel = 1.0 # Internal dielectric constant for sander extdiel = 78.5 # External dielectric constant for sander saltcon = 0.15 # SALT CONCENTRATION (M) surften = 0.0072 # Surface tension surfoff = 0.0 # Surface tension offset molsurf = 0 # Use Connelly surface ('molsurf' program) msoffset = 0.0 # Offset for molsurf calculation probe = 1.4 # Solvent probe radius for surface area calc ifqnt = 0 # Use QM on part of the system qm_theory = \"\" # Semi-empirical QM theory to use qm_residues = \"\" # Residues to treat with QM qmcharge_com = 0 # Charge of QM region in complex qmcharge_lig = 0 # Charge of QM region in ligand qmcharge_rec = 0 # Charge of QM region in receptor qmcut = 9999.0 # Cutoff in the QM region / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples We are going to use cpptraj program from Amber to process the *.psf and *.dcd files: Press enter after every command line cpptraj -p step3_input.psf >trajin traj.dcd >strip :POT,CLA,TIP3,SOD >trajout traj.xtc >run >exit After executing these commands, there should be a new file in te folder, i.e. traj.xtc that is going to be used as the trajectory file. Keep in mind For some reason, when using charmm-gui to prepare the files, the toppar files that come inside the NAMD folder have the ATOM section commented with the ! symbol: !ATOMS !MASS -1 H 1.00800 ! polar H !MASS -1 HC 1.00800 ! N-ter H !MASS -1 HA 1.00800 ! nonpolar H !MASS -1 HP 1.00800 ! aromatic H !MASS -1 HB1 1.00800 ! backbone H !MASS -1 HB2 1.00800 ! aliphatic backbone H, to CT2 !MASS -1 HR1 1.00800 ! his he1, (+) his HG,HD2 ... This section can't be commented on for the purpose of this tutorial, thus you can either use a files with the ATOM section uncommented or just uncomment the section yourself: ATOMS MASS -1 H 1.00800 ! polar H MASS -1 HC 1.00800 ! N-ter H MASS -1 HA 1.00800 ! nonpolar H MASS -1 HP 1.00800 ! aromatic H MASS -1 HB1 1.00800 ! backbone H MASS -1 HB2 1.00800 ! aliphatic backbone H, to CT2 MASS -1 HR1 1.00800 ! his he1, (+) his HG,HD2 ... We are going to use ParmEd to convert the *.psf file into a GROMACS topology file. To do so, use the ParmEd script that is already included in the tutorial folder. python script.py Take your time to analyze step by step the process of converting .psf/ .crd files intoa GROMACS topology with ParmEd. # import ParmEd module import parmed as pmd # load psf file psf = pmd . load_file ( 'step3_input.psf' ) #load coordinate file psf . coordinates = pmd . load_file ( 'step3_input.crd' ) . coordinates # strip ions and water psf . strip ( ':POT, CLA, TIP3, LIT, SOD, RUB, CES, BAR' ) # load Charmm Parameter Set. Make sure to include all the necessary force field files in this list params = pmd . charmm . CharmmParameterSet ( 'toppar/par_all36_carb.prm' , 'toppar/par_all36_cgenff.prm' , 'toppar/par_all36_lipid.prm' , 'toppar/par_all36m_prot.prm' , 'toppar/par_all36_na.prm' , 'toppar/par_interface.prm' , 'toppar/toppar_water_ions.str' , 'toppar/ben.prm' ) psf . load_parameters ( params ) # save GROMACS topology file psf . save ( 'gromacs.top' ) psf . save ( 'gromacs.pdb' ) The last file we need to generate is the index file containing the groups with the receptor and ligand atoms. To do so, just use make_ndx from GROMACS and the MD Structure+mass(db) that was generated previously. Press enter after every command line gmx make_ndx -f gromacs.pdb -o index.ndx >q In this case, there is no need to generate new groups as GROMACS is able to parse the receptor and ligand atoms. The groups number 1 and 13 contain the receptor and the ligand atoms, respectively. Once the gmx_MMPBSA files have been generated, the program can be run either in serial or in parallel: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs gromacs.pdb -ct traj.xtc -ci index.ndx -cg 1 13 -cp gromacs.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs gromacs.pdb -ct traj.xtc -ci index.ndx -cg 1 13 -cp gromacs.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( gromacs.pdb ), an index file ( index.ndx ), a trajectory file ( traj.xtc ), and both the receptor and ligand group numbers in the index file ( 1 13 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 11 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a salt concentration = 0.15M. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Protein-ligand"},{"location":"examples/psf_dcd/protein_ligand/#protein-ligand-binding-free-energy-calculations-with-psf_dcd-files","text":"Info This example can be found in the examples/psf_dcd/protein_ligand directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. In this example we are going to generate gmx_MMPBSA input files from psf_dcd files. It is strongly recommended to check how gmx_MMPBSA works before attempting any sort of calculations. See below the input files required for running gmx_MMPBSA. Make sure to install gmx_MMPBSA in a dedicated conda environment as decribed here .","title":"Protein-ligand binding free energy calculations with psf_dcd files"},{"location":"examples/psf_dcd/protein_ligand/#requirements","text":"In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed A trajectory file xtc pdb Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder The MD Structure+mass(db) file pdb Structure file containing the system coordinates An index file ndx File containing the receptor and ligand in separated groups Receptor and ligand group integers Group numbers in the index files A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional Steps to generate gmx_MMPBSA files 1- The input file *.in 2- The trajectory file 3- The topology and the MD Structure+mass(db) files 4- The index file The input file *.in is already included in the tutorial folder, although it can be easily generated using --create_input command . The *.in input file, is a text file containing the following lines: Sample input file for GB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 Input file generated by gmx_MMPBSA (v1.5.0.3) Be careful with the variables you modify, some can have severe consequences on the results you obtain. # General namelist variables &general sys_name = \"\" # System name startframe = 5 # FIRST FRAME TO ANALYZE endframe = 15 # LAST FRAME TO ANALYZE interval = 1 # Number of frames between adjacent frames analyzed forcefields = \"oldff/leaprc.ff99SB,leaprc.gaff\" # Force field(IGNORED SINCE WE ARE DEFINING THE TOPOLOGY) ions_parameters = 1 # Define ions parameters to build the Amber topology PBRadii = 3 # Define PBRadii to build amber topology from GROMACS files temperature = 298.15 # Temperature qh_entropy = 0 # Do quasi-harmonic calculation interaction_entropy = 0 # Do Interaction Entropy calculation ie_segment = 25 # Trajectory segment to calculate interaction entropy c2_entropy = 0 # Do C2 Entropy calculation assign_chainID = 0 # ASSIGN CHAINS ID exp_ki = 0.0 # Experimental Ki in nM full_traj = 0 # Print a full traj. AND the thread trajectories gmx_path = \"\" # Force to use this path to get GROMACS executable keep_files = 2 # How many files to keep after successful completion netcdf = 0 # Use NetCDF intermediate trajectories solvated_trajectory = 1 # Define if it is necessary to cleanup the trajectories verbose = 1 # How many energy terms to print in the final output / # (AMBER) Generalized-Born namelist variables &gb igb = 5 # GB model to use intdiel = 1.0 # Internal dielectric constant for sander extdiel = 78.5 # External dielectric constant for sander saltcon = 0.15 # SALT CONCENTRATION (M) surften = 0.0072 # Surface tension surfoff = 0.0 # Surface tension offset molsurf = 0 # Use Connelly surface ('molsurf' program) msoffset = 0.0 # Offset for molsurf calculation probe = 1.4 # Solvent probe radius for surface area calc ifqnt = 0 # Use QM on part of the system qm_theory = \"\" # Semi-empirical QM theory to use qm_residues = \"\" # Residues to treat with QM qmcharge_com = 0 # Charge of QM region in complex qmcharge_lig = 0 # Charge of QM region in ligand qmcharge_rec = 0 # Charge of QM region in receptor qmcut = 9999.0 # Cutoff in the QM region / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples We are going to use cpptraj program from Amber to process the *.psf and *.dcd files: Press enter after every command line cpptraj -p step3_input.psf >trajin traj.dcd >strip :POT,CLA,TIP3,SOD >trajout traj.xtc >run >exit After executing these commands, there should be a new file in te folder, i.e. traj.xtc that is going to be used as the trajectory file. Keep in mind For some reason, when using charmm-gui to prepare the files, the toppar files that come inside the NAMD folder have the ATOM section commented with the ! symbol: !ATOMS !MASS -1 H 1.00800 ! polar H !MASS -1 HC 1.00800 ! N-ter H !MASS -1 HA 1.00800 ! nonpolar H !MASS -1 HP 1.00800 ! aromatic H !MASS -1 HB1 1.00800 ! backbone H !MASS -1 HB2 1.00800 ! aliphatic backbone H, to CT2 !MASS -1 HR1 1.00800 ! his he1, (+) his HG,HD2 ... This section can't be commented on for the purpose of this tutorial, thus you can either use a files with the ATOM section uncommented or just uncomment the section yourself: ATOMS MASS -1 H 1.00800 ! polar H MASS -1 HC 1.00800 ! N-ter H MASS -1 HA 1.00800 ! nonpolar H MASS -1 HP 1.00800 ! aromatic H MASS -1 HB1 1.00800 ! backbone H MASS -1 HB2 1.00800 ! aliphatic backbone H, to CT2 MASS -1 HR1 1.00800 ! his he1, (+) his HG,HD2 ... We are going to use ParmEd to convert the *.psf file into a GROMACS topology file. To do so, use the ParmEd script that is already included in the tutorial folder. python script.py Take your time to analyze step by step the process of converting .psf/ .crd files intoa GROMACS topology with ParmEd. # import ParmEd module import parmed as pmd # load psf file psf = pmd . load_file ( 'step3_input.psf' ) #load coordinate file psf . coordinates = pmd . load_file ( 'step3_input.crd' ) . coordinates # strip ions and water psf . strip ( ':POT, CLA, TIP3, LIT, SOD, RUB, CES, BAR' ) # load Charmm Parameter Set. Make sure to include all the necessary force field files in this list params = pmd . charmm . CharmmParameterSet ( 'toppar/par_all36_carb.prm' , 'toppar/par_all36_cgenff.prm' , 'toppar/par_all36_lipid.prm' , 'toppar/par_all36m_prot.prm' , 'toppar/par_all36_na.prm' , 'toppar/par_interface.prm' , 'toppar/toppar_water_ions.str' , 'toppar/ben.prm' ) psf . load_parameters ( params ) # save GROMACS topology file psf . save ( 'gromacs.top' ) psf . save ( 'gromacs.pdb' ) The last file we need to generate is the index file containing the groups with the receptor and ligand atoms. To do so, just use make_ndx from GROMACS and the MD Structure+mass(db) that was generated previously. Press enter after every command line gmx make_ndx -f gromacs.pdb -o index.ndx >q In this case, there is no need to generate new groups as GROMACS is able to parse the receptor and ligand atoms. The groups number 1 and 13 contain the receptor and the ligand atoms, respectively. Once the gmx_MMPBSA files have been generated, the program can be run either in serial or in parallel: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs gromacs.pdb -ct traj.xtc -ci index.ndx -cg 1 13 -cp gromacs.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs gromacs.pdb -ct traj.xtc -ci index.ndx -cg 1 13 -cp gromacs.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv","title":"Requirements"},{"location":"examples/psf_dcd/protein_ligand/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( gromacs.pdb ), an index file ( index.ndx ), a trajectory file ( traj.xtc ), and both the receptor and ligand group numbers in the index file ( 1 13 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 11 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a salt concentration = 0.15M. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"},{"location":"examples/psf_dcd/protein_protein/","text":"Protein-protein binding free energy calculations with psf_dcd files \u00b6 Info This example can be found in the examples/psf_dcd/protein_protein directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. In this example we are going to generate gmx_MMPBSA input files from psf_dcd files. It is strongly recommended to check how gmx_MMPBSA works before attempting any sort of calculations. See below the input files required for running gmx_MMPBSA. Make sure to install gmx_MMPBSA in a dedicated conda environment as decribed here . Requirements \u00b6 In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file pdb Structure file containing the system coordinates A trajectory file xtc pdb Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder An index file ndx File containing the receptor and ligand in separated groups Receptor and ligand group integers Group numbers in the index files A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional Steps to generate gmx_MMPBSA files 1- The input file *.in 2- The MD Structure+mass(db) and the trajectory files 3- The topology file 4- The index file The input file *.in is already included in the tutorial folder, although it can be easily generated using --create_input command . The *.in input file, is a text file containing the following lines: Sample input file for GB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 Input file generated by gmx_MMPBSA (v1.5.0.3) Be careful with the variables you modify, some can have severe consequences on the results you obtain. # General namelist variables &general sys_name = \"\" # System name startframe = 5 # FIRST FRAME TO ANALYZE endframe = 15 # LAST FRAME TO ANALYZE interval = 1 # Number of frames between adjacent frames analyzed forcefields = \"oldff/leaprc.ff99SB,leaprc.gaff\" # Force field(IGNORED SINCE WE ARE DEFINING THE TOPOLOGY) ions_parameters = 1 # Define ions parameters to build the Amber topology PBRadii = 3 # Define PBRadii to build amber topology from GROMACS files temperature = 298.15 # Temperature qh_entropy = 0 # Do quasi-harmonic calculation interaction_entropy = 0 # Do Interaction Entropy calculation ie_segment = 25 # Trajectory segment to calculate interaction entropy c2_entropy = 0 # Do C2 Entropy calculation assign_chainID = 1 # ASSIGN CHAINS ID exp_ki = 0.0 # Experimental Ki in nM full_traj = 0 # Print a full traj. AND the thread trajectories gmx_path = \"\" # Force to use this path to get GROMACS executable keep_files = 2 # How many files to keep after successful completion netcdf = 0 # Use NetCDF intermediate trajectories solvated_trajectory = 1 # Define if it is necessary to cleanup the trajectories verbose = 1 # How many energy terms to print in the final output / # (AMBER) Generalized-Born namelist variables &gb igb = 5 # GB model to use intdiel = 1.0 # Internal dielectric constant for sander extdiel = 78.5 # External dielectric constant for sander saltcon = 0.15 # SALT CONCENTRATION (M) surften = 0.0072 # Surface tension surfoff = 0.0 # Surface tension offset molsurf = 0 # Use Connelly surface ('molsurf' program) msoffset = 0.0 # Offset for molsurf calculation probe = 1.4 # Solvent probe radius for surface area calc ifqnt = 0 # Use QM on part of the system qm_theory = \"\" # Semi-empirical QM theory to use qm_residues = \"\" # Residues to treat with QM qmcharge_com = 0 # Charge of QM region in complex qmcharge_lig = 0 # Charge of QM region in ligand qmcharge_rec = 0 # Charge of QM region in receptor qmcut = 9999.0 # Cutoff in the QM region / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples We are going to use cpptraj program from Amber to process the *.psf and *.dcd files: Press enter after every command line cpptraj -p step3_input.psf >trajin traj.dcd >strip :POT,CLA,TIP3,SOD >trajout gromacs.pdb onlyframes 1 >trajout traj.xtc >run >exit After executing these commands, there should be two new files in te folder, i.e. gromacs.pdb that is going to be used as the MD Structure+mass(db) file, and traj.xtc that is going to be used as the trajectory file. Keep in mind For some reason, when using charmm-gui to prepare the files, the toppar files that come inside the NAMD folder have the ATOM section commented with the ! symbol: !ATOMS !MASS -1 H 1.00800 ! polar H !MASS -1 HC 1.00800 ! N-ter H !MASS -1 HA 1.00800 ! nonpolar H !MASS -1 HP 1.00800 ! aromatic H !MASS -1 HB1 1.00800 ! backbone H !MASS -1 HB2 1.00800 ! aliphatic backbone H, to CT2 !MASS -1 HR1 1.00800 ! his he1, (+) his HG,HD2 ... This section can't be commented on for the purpose of this tutorial, thus you can either use a files with the ATOM section uncommented or just uncomment the section yourself: ATOMS MASS -1 H 1.00800 ! polar H MASS -1 HC 1.00800 ! N-ter H MASS -1 HA 1.00800 ! nonpolar H MASS -1 HP 1.00800 ! aromatic H MASS -1 HB1 1.00800 ! backbone H MASS -1 HB2 1.00800 ! aliphatic backbone H, to CT2 MASS -1 HR1 1.00800 ! his he1, (+) his HG,HD2 ... We are going to use ParmEd to convert the *.psf file into a GROMACS topology file. To do so, use the ParmEd script that is already included in the tutorial folder. python script.py Take your time to analyze step by step the process of converting .psf/ .crd files intoa GROMACS topology with ParmEd. # import ParmEd module import parmed as pmd # load psf file psf = pmd . load_file ( 'step3_input.psf' ) #load coordinate file psf . coordinates = pmd . load_file ( 'step3_input.crd' ) . coordinates # strip ions and water psf . strip ( ':POT, CLA, TIP3, LIT, SOD, RUB, CES, BAR' ) # load Charmm Parameter Set. Make sure to include all the necessary force filed files in this list params = pmd . charmm . CharmmParameterSet ( 'toppar/par_all36_carb.prm' , 'toppar/par_all36_cgenff.prm' , 'toppar/par_all36_lipid.prm' , 'toppar/par_all36m_prot.prm' , 'toppar/par_all36_na.prm' , 'toppar/par_interface.prm' , 'toppar/toppar_water_ions.str' ) psf . load_parameters ( params ) # save GROMACS topology file psf . save ( 'gromacs.top' ) The last file we need to generate is the index file containing the groups with the receptor and ligand atoms. To do so, just use make_ndx from GROMACS and the MD Structure+mass(db) that was generated previously. Press enter after every command line gmx make_ndx -f gromacs.pdb -o index.ndx >a 1-3220 >a 3221-4124 >q After this, there should be two new groups (10, 11) in the index file that contains atoms from 1 to 3220 for the receptor and atoms 3221 to 4124 for the ligand. Once the gmx_MMPBSA files have been generated, the program can be run either in serial or in parallel: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs gromacs.pdb -ct traj.xtc -ci index.ndx -cg 10 11 -cp gromacs.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs gromacs.pdb -ct traj.xtc -ci index.ndx -cg 10 11 -cp gromacs.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( gromacs.pdb ), an index file ( index.ndx ), a trajectory file ( traj.xtc ), and both the receptor and ligand group numbers in the index file ( 10 11 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 11 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a salt concentration = 0.15M. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Protein-protein"},{"location":"examples/psf_dcd/protein_protein/#protein-protein-binding-free-energy-calculations-with-psf_dcd-files","text":"Info This example can be found in the examples/psf_dcd/protein_protein directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from gmx_MMPBSA GitHub repository. In this example we are going to generate gmx_MMPBSA input files from psf_dcd files. It is strongly recommended to check how gmx_MMPBSA works before attempting any sort of calculations. See below the input files required for running gmx_MMPBSA. Make sure to install gmx_MMPBSA in a dedicated conda environment as decribed here .","title":"Protein-protein binding free energy calculations with psf_dcd files"},{"location":"examples/psf_dcd/protein_protein/#requirements","text":"In this case, gmx_MMPBSA requires: Input File required Required Type Description Input parameters file in Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file pdb Structure file containing the system coordinates A trajectory file xtc pdb Final GROMACS MD trajectory, fitted and with no pbc. A topology file top GROMACS topology file (The * .itp files defined in the topology must be in the same folder An index file ndx File containing the receptor and ligand in separated groups Receptor and ligand group integers Group numbers in the index files A Reference Structure file pdb Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers -> Must be defined -- -> Optional, but recommended -- -> Optional Steps to generate gmx_MMPBSA files 1- The input file *.in 2- The MD Structure+mass(db) and the trajectory files 3- The topology file 4- The index file The input file *.in is already included in the tutorial folder, although it can be easily generated using --create_input command . The *.in input file, is a text file containing the following lines: Sample input file for GB calculation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 Input file generated by gmx_MMPBSA (v1.5.0.3) Be careful with the variables you modify, some can have severe consequences on the results you obtain. # General namelist variables &general sys_name = \"\" # System name startframe = 5 # FIRST FRAME TO ANALYZE endframe = 15 # LAST FRAME TO ANALYZE interval = 1 # Number of frames between adjacent frames analyzed forcefields = \"oldff/leaprc.ff99SB,leaprc.gaff\" # Force field(IGNORED SINCE WE ARE DEFINING THE TOPOLOGY) ions_parameters = 1 # Define ions parameters to build the Amber topology PBRadii = 3 # Define PBRadii to build amber topology from GROMACS files temperature = 298.15 # Temperature qh_entropy = 0 # Do quasi-harmonic calculation interaction_entropy = 0 # Do Interaction Entropy calculation ie_segment = 25 # Trajectory segment to calculate interaction entropy c2_entropy = 0 # Do C2 Entropy calculation assign_chainID = 1 # ASSIGN CHAINS ID exp_ki = 0.0 # Experimental Ki in nM full_traj = 0 # Print a full traj. AND the thread trajectories gmx_path = \"\" # Force to use this path to get GROMACS executable keep_files = 2 # How many files to keep after successful completion netcdf = 0 # Use NetCDF intermediate trajectories solvated_trajectory = 1 # Define if it is necessary to cleanup the trajectories verbose = 1 # How many energy terms to print in the final output / # (AMBER) Generalized-Born namelist variables &gb igb = 5 # GB model to use intdiel = 1.0 # Internal dielectric constant for sander extdiel = 78.5 # External dielectric constant for sander saltcon = 0.15 # SALT CONCENTRATION (M) surften = 0.0072 # Surface tension surfoff = 0.0 # Surface tension offset molsurf = 0 # Use Connelly surface ('molsurf' program) msoffset = 0.0 # Offset for molsurf calculation probe = 1.4 # Solvent probe radius for surface area calc ifqnt = 0 # Use QM on part of the system qm_theory = \"\" # Semi-empirical QM theory to use qm_residues = \"\" # Residues to treat with QM qmcharge_com = 0 # Charge of QM region in complex qmcharge_lig = 0 # Charge of QM region in ligand qmcharge_rec = 0 # Charge of QM region in receptor qmcut = 9999.0 # Cutoff in the QM region / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples We are going to use cpptraj program from Amber to process the *.psf and *.dcd files: Press enter after every command line cpptraj -p step3_input.psf >trajin traj.dcd >strip :POT,CLA,TIP3,SOD >trajout gromacs.pdb onlyframes 1 >trajout traj.xtc >run >exit After executing these commands, there should be two new files in te folder, i.e. gromacs.pdb that is going to be used as the MD Structure+mass(db) file, and traj.xtc that is going to be used as the trajectory file. Keep in mind For some reason, when using charmm-gui to prepare the files, the toppar files that come inside the NAMD folder have the ATOM section commented with the ! symbol: !ATOMS !MASS -1 H 1.00800 ! polar H !MASS -1 HC 1.00800 ! N-ter H !MASS -1 HA 1.00800 ! nonpolar H !MASS -1 HP 1.00800 ! aromatic H !MASS -1 HB1 1.00800 ! backbone H !MASS -1 HB2 1.00800 ! aliphatic backbone H, to CT2 !MASS -1 HR1 1.00800 ! his he1, (+) his HG,HD2 ... This section can't be commented on for the purpose of this tutorial, thus you can either use a files with the ATOM section uncommented or just uncomment the section yourself: ATOMS MASS -1 H 1.00800 ! polar H MASS -1 HC 1.00800 ! N-ter H MASS -1 HA 1.00800 ! nonpolar H MASS -1 HP 1.00800 ! aromatic H MASS -1 HB1 1.00800 ! backbone H MASS -1 HB2 1.00800 ! aliphatic backbone H, to CT2 MASS -1 HR1 1.00800 ! his he1, (+) his HG,HD2 ... We are going to use ParmEd to convert the *.psf file into a GROMACS topology file. To do so, use the ParmEd script that is already included in the tutorial folder. python script.py Take your time to analyze step by step the process of converting .psf/ .crd files intoa GROMACS topology with ParmEd. # import ParmEd module import parmed as pmd # load psf file psf = pmd . load_file ( 'step3_input.psf' ) #load coordinate file psf . coordinates = pmd . load_file ( 'step3_input.crd' ) . coordinates # strip ions and water psf . strip ( ':POT, CLA, TIP3, LIT, SOD, RUB, CES, BAR' ) # load Charmm Parameter Set. Make sure to include all the necessary force filed files in this list params = pmd . charmm . CharmmParameterSet ( 'toppar/par_all36_carb.prm' , 'toppar/par_all36_cgenff.prm' , 'toppar/par_all36_lipid.prm' , 'toppar/par_all36m_prot.prm' , 'toppar/par_all36_na.prm' , 'toppar/par_interface.prm' , 'toppar/toppar_water_ions.str' ) psf . load_parameters ( params ) # save GROMACS topology file psf . save ( 'gromacs.top' ) The last file we need to generate is the index file containing the groups with the receptor and ligand atoms. To do so, just use make_ndx from GROMACS and the MD Structure+mass(db) that was generated previously. Press enter after every command line gmx make_ndx -f gromacs.pdb -o index.ndx >a 1-3220 >a 3221-4124 >q After this, there should be two new groups (10, 11) in the index file that contains atoms from 1 to 3220 for the receptor and atoms 3221 to 4124 for the ligand. Once the gmx_MMPBSA files have been generated, the program can be run either in serial or in parallel: Serial With MPI gmx_MMPBSA -O -i mmpbsa.in -cs gromacs.pdb -ct traj.xtc -ci index.ndx -cg 10 11 -cp gromacs.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs gromacs.pdb -ct traj.xtc -ci index.ndx -cg 10 11 -cp gromacs.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv","title":"Requirements"},{"location":"examples/psf_dcd/protein_protein/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file ( gromacs.pdb ), an index file ( index.ndx ), a trajectory file ( traj.xtc ), and both the receptor and ligand group numbers in the index file ( 10 11 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 11 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a salt concentration = 0.15M. A plain text output file with all the statistics (default: FINAL_RESULTS_MMPBSA.dat ) and a CSV-format output file containing all energy terms for every frame in every calculation will be saved. The file name in '-eo' flag will be forced to end in [.csv] ( FINAL_RESULTS_MMPBSA.csv in this case). This file is only written when specified on the command-line. Note Once the calculation is done, the results can be analyzed in gmx_MMPBSA_ana (if -nogui flag was not used in the command-line). Please, check the gmx_MMPBSA_ana section for more information","title":"Considerations"}]}